{"mappings":"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","sources":["src/js/modules/modal.js","src/js/modules/user-order-form.js","src/js/modules/subscr-modal.js"],"sourcesContent":["import { resetErrors } from './user-order-form';\nimport { subscForm } from './user-order-form';\n\nexport function initializeModal(refs) {\n  refs.openModalBtn.addEventListener('click', () => toggleModal(refs));\n  refs.closeModalBtn.addEventListener('click', e => {\n    e.stopPropagation();\n    toggleModal(refs);\n  });\n  refs.backdrop.addEventListener('click', e => {\n    if (e.target === refs.backdrop) {\n      toggleModal(refs);\n    }\n  });\n}\n\nexport function toggleModal(refs) {\n  document.body.classList.toggle(`${refs.name}-modal-open`);\n  refs.modal.classList.toggle('backdrop--hidden');\n  if (refs.name === 'subscription') resetErrors(subscForm?.elements);\n}\n","import { refsSubscr } from './subscr-modal';\nimport { toggleModal } from './modal';\nexport const subscForm = document.querySelector('.subscr__form');\nconst paymentBtnList = document.querySelectorAll('.payment__btn');\nconst paymentErrorMessage = document.querySelector('.form__payment-error-text');\nconst policyErrorMessage = document.querySelector('.form__policy-error-text');\nconst formInputList = document.querySelectorAll('.form__input');\nsubscForm?.addEventListener('submit', onSubmitForm);\n\npaymentBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    onPaymentTypeBtnClick(e);\n    const isPaymentErrorMessageVisible =\n      !paymentErrorMessage.classList.contains('isHidden');\n    if (isPaymentErrorMessageVisible) {\n      togglePaymentTypeErrorVisibility();\n    }\n  });\n});\nformInputList.forEach(el => {\n  el.addEventListener('focus', () => {\n    el.classList.remove('error');\n  });\n});\n\nconst validationFields = [\n  'userName',\n  'userSurname',\n  'userTel',\n  'userEmail',\n  'userLocation',\n  'userDate',\n  'userTime',\n];\n\nconst userOrderData = {\n  userTypePayment: '',\n};\n\nfunction validateFields(elements, fieldNames) {\n  return fieldNames\n    .filter(fieldName => elements[fieldName].value.trim() === '')\n    .map(fieldName => elements[fieldName]);\n}\n\nexport function resetErrors(elements) {\n  [...elements].forEach(element => {\n    element.classList.remove('error');\n  });\n}\n\nfunction addErrorClass(elementsWithErrors) {\n  elementsWithErrors.forEach(element => {\n    element.classList.add('error');\n  });\n}\n\nfunction checkIfPaymentTypeChosen() {\n  return [...paymentBtnList].some(btn => btn.classList.contains('active'));\n}\n\nfunction checkIfPolicyAgreed() {\n  const policyCheckBox = document.querySelector('[name=\"studio-policy-check\"]');\n  const isAgreed = policyCheckBox.checked;\n  return isAgreed;\n}\n\nfunction togglePaymentTypeErrorVisibility() {\n  paymentErrorMessage.classList.toggle('isHidden');\n}\n\nfunction togglePolicyErrorVisibility() {\n  policyErrorMessage.classList.toggle('isHidden');\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const elements = e.currentTarget.elements;\n  const elementsWithErrors = validateFields(elements, validationFields);\n  resetErrors(elements);\n  addErrorClass(elementsWithErrors);\n  const isPaymentTypeChosen = checkIfPaymentTypeChosen();\n  const isPolicyAgreed = checkIfPolicyAgreed();\n  const isAnyError = elementsWithErrors.length > 0;\n\n  if (!isPaymentTypeChosen) {\n    togglePaymentTypeErrorVisibility();\n  }\n  if (!isPolicyAgreed) {\n    togglePolicyErrorVisibility();\n  }\n  if (!isPaymentTypeChosen || isAnyError || !isPolicyAgreed) {\n    return;\n  }\n\n  setOrderDataObj(e.target);\n  resetFormFields(elements);\n  resetChosenPaymentType();\n  toggleModal(refsSubscr);\n}\n\nfunction onPaymentTypeBtnClick(e) {\n  const clickedButton = e.target.closest('button');\n  setPaymentTypeInOrderObj(clickedButton);\n  if (clickedButton.classList.contains('active')) return;\n  [...paymentBtnList].forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nfunction resetFormFields(elements) {\n  [...elements].forEach(element => {\n    if (\n      element.type === 'text' ||\n      element.type === 'email' ||\n      element.type === 'tel' ||\n      element.tagName === 'TEXTAREA'\n    ) {\n      element.value = '';\n    } else if (element.type === 'checkbox') {\n      element.checked = true;\n    }\n  });\n}\nfunction resetChosenPaymentType() {\n  [...paymentBtnList].forEach(button => {\n    button.classList.remove('active');\n  });\n}\n\nfunction setPaymentTypeInOrderObj(paymentBtn) {\n  const paymentType = paymentBtn.getAttribute('data-id');\n  userOrderData.userTypePayment = paymentType;\n}\n\nfunction setOrderDataObj(form) {\n  const formData = new FormData(form);\n  formData.forEach((value, key) => {\n    if (key.startsWith('user')) {\n      userOrderData[key] = value;\n    }\n  });\n  console.log('userOrderData: ', userOrderData);\n}\n","import { initializeModal } from './modal';\n\nexport const refsSubscr = {\n  name: 'subscription',\n  openModalBtn: document.querySelector('[data-subscription-modal-open]'),\n  closeModalBtn: document.querySelector('[data-subscription-modal-close]'),\n  modal: document.querySelector('[data-subscription-modal]'),\n  backdrop: document.querySelector('.backdrop--subscr'),\n};\n\ninitializeModal(refsSubscr);\n"],"names":["$8c0Ac","parcelRequire","$c549e00ea1028b97$export$aa9b0c0080dbe389","refs","openModalBtn","addEventListener","$c549e00ea1028b97$export$313c6d35f75fc0e","closeModalBtn","e","stopPropagation","backdrop","target","document","body","classList","toggle","name","modal","resetErrors","subscForm","elements","$2in5s","$5f6fe576bb8e45fb$export$ac2141f83bb6e17f","querySelector","$5f6fe576bb8e45fb$var$paymentBtnList","querySelectorAll","$5f6fe576bb8e45fb$var$paymentErrorMessage","$5f6fe576bb8e45fb$var$policyErrorMessage","$5f6fe576bb8e45fb$var$formInputList","preventDefault","currentTarget","elementsWithErrors","fieldNames","filter","fieldName","value","trim","map","$5f6fe576bb8e45fb$var$validateFields","$5f6fe576bb8e45fb$var$validationFields","$5f6fe576bb8e45fb$export$16b70c0fc68d4705","forEach","element","add","$5f6fe576bb8e45fb$var$addErrorClass","isPaymentTypeChosen","some","btn","contains","isPolicyAgreed","policyCheckBox","checked","$5f6fe576bb8e45fb$var$checkIfPolicyAgreed","isAnyError","length","$5f6fe576bb8e45fb$var$togglePaymentTypeErrorVisibility","form","FormData","key","startsWith","$5f6fe576bb8e45fb$var$userOrderData","console","log","type","tagName","$5f6fe576bb8e45fb$var$resetFormFields","button","remove","$gWa4t","toggleModal","refsSubscr","el","clickedButton","closest","paymentBtn","paymentType","getAttribute","userTypePayment","$5f6fe576bb8e45fb$var$setPaymentTypeInOrderObj","$5f6fe576bb8e45fb$var$onPaymentTypeBtnClick","$1abf2bce532be580$export$6406821d17d9075f","initializeModal"],"version":3,"file":"faq.d9f6ff27.js.map"}