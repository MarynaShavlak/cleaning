{"mappings":"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","sources":["src/js/modules/calendar.js","src/js/modules/dates.js","src/js/modules/time-picker.js","src/js/modules/location.js"],"sourcesContent":["import { toggleIconActiveStyle, appendElement } from './common';\nimport {\n  getCurrentDateAsString,\n  extractDate,\n  isDateBeforeToday,\n  convertDateFormat,\n  reverseConvertDateFormat,\n  calculateStartDay,\n  getLastDayOfPrevMonth,\n  getCurrentYearAndMonth,\n  getMonthBoundaryDates,\n  formatDateInfo,\n} from './dates';\nconst calendarBlock = document.querySelector('.calendar');\nconst calendarBody = calendarBlock.querySelector('.calendar__body');\nconst calendarHeadMonthAndYear = calendarBlock.querySelector(\n  '.calendar__monthYear'\n);\nconst prevMonthBtn = calendarBlock.querySelector('.calendar__prevMonth-btn');\nconst nextMonthBtn = calendarBlock.querySelector('.calendar__nextMonth-btn');\nconst dateInput =\n  calendarBlock.previousElementSibling.querySelector('[name=\"userDate\"]');\nconst calendarIcon =\n  calendarBlock.previousElementSibling.querySelector('.icon--calendar');\n\nlet selectedDateObj = new Date();\nlet monthToShowInCalendarObj = new Date();\nlet orderDayString = getCurrentDateAsString();\n\ndateInput.addEventListener('click', () => {\n  toggleCalendarVisibility();\n  toggleIconActiveStyle(calendarIcon);\n  monthToShowInCalendarObj = new Date(selectedDateObj);\n  const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n  generateCalendar(selectedDateObj);\n  if (isCalendarVisible) {\n    setDateInputValue();\n  }\n});\n\ndateInput.addEventListener('blur', e => {\n  const trimmedValue = extractDate(e.target.value);\n  dateInput.value = trimmedValue;\n});\n\ncalendarIcon.addEventListener('click', e => {\n  toggleCalendarVisibility();\n  monthToShowInCalendarObj = new Date(selectedDateObj);\n  generateCalendar(selectedDateObj);\n  toggleIconActiveStyle(e.target);\n  const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n  if (isCalendarVisible) {\n    setDateInputValue();\n  }\n});\n\nprevMonthBtn?.addEventListener('click', () => {\n  updateCalendar(-1);\n});\n\nnextMonthBtn?.addEventListener('click', () => {\n  updateCalendar(1);\n});\n\nfunction setCellText(cell, day) {\n  cell.textContent = day;\n}\nfunction setCellAttributes(cell, day, month, year) {\n  cell.dataset.date = `${day}/${month < 9 ? '0' : ''}${month + 1}/${year}`;\n}\n\n// function addCellClasses(cell, isDisabledDate, monthType, isToday) {\n//   cell.classList.add(monthType);\n//   if (isDisabledDate) {\n//     cell.classList.add('disabled-day');\n//   }\n//   if (monthType === 'current-month' && isToday) {\n//     cell.classList.add('order-day');\n//   }\n// }\n\nfunction addCellClickEvent(cell, isDisabledDate) {\n  if (!isDisabledDate) {\n    cell.addEventListener('click', handleCellClick);\n  }\n}\n\nfunction createCellEl(fd, fm, y, isDisabledDate, monthType, isCellSelectedDay) {\n  const cell = document.createElement('td');\n  setCellText(cell, fd);\n  setCellAttributes(cell, fd, fm, y);\n  // addCellClasses(cell, isDisabledDate, monthType);\n  addCellClickEvent(cell, isDisabledDate);\n  cell.classList.add(monthType);\n  if (isDisabledDate) {\n    cell.classList.add('disabled-day');\n  }\n  if (monthType === 'current-month' && isCellSelectedDay) {\n    cell.classList.add('order-day');\n  }\n\n  return cell;\n}\n\nfunction createPreviousMonthCell(day) {\n  const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n  const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n    day,\n    month,\n    year\n  );\n  const todayObj = new Date();\n  const isDisabledDate = isDateBeforeToday(\n    new Date(formattedYear, formattedMonth - 1, day),\n    todayObj\n  );\n  const cell = createCellEl(\n    formattedDay,\n    formattedMonth - 1,\n    formattedYear,\n    isDisabledDate,\n    'previous-month'\n  );\n  return cell;\n}\n\nfunction createCurrentMonthCell(day) {\n  const { formattedDay } = formatDateInfo(day);\n  const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n  const todayObj = new Date();\n  const cellDateObj = new Date(year, month, day);\n  const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n  const isYearEquel =\n    cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n  const isMonthEquel = cellDateObj.getMonth() === selectedDateObj.getMonth();\n  const isDayEquel = day === selectedDateObj.getDate();\n  const isCellSelectedDay = isYearEquel && isMonthEquel && isDayEquel;\n  const cell = createCellEl(\n    formattedDay,\n    month,\n    year,\n    isDisabledDate,\n    'current-month',\n    isCellSelectedDay\n  );\n  // addCellClasses(cell, isDisabledDate, 'current-month', isCellSelectedDay);\n  return cell;\n}\n\nfunction createNextMonthCell(day) {\n  const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n  const { formattedDay } = formatDateInfo(day, month, year);\n  const formattedMonth = month === 11 ? 1 : month + 2;\n  const formattedYear = month === 11 ? year + 1 : year;\n  const todayObj = new Date();\n  const cellDateObj = new Date(formattedYear, formattedMonth - 1, day);\n  const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n  const isCellSelectedDay =\n    cellDateObj.getFullYear() === selectedDateObj.getFullYear() &&\n    cellDateObj.getMonth() === selectedDateObj.getMonth() &&\n    day === selectedDateObj.getDate();\n  const cell = createCellEl(\n    formattedDay,\n    formattedMonth - 1,\n    formattedYear,\n    isDisabledDate,\n    'next-month',\n    isCellSelectedDay\n  );\n  // addCellClasses(cell, isDisabledDate, 'next-month', isCellSelectedDay);\n  return cell;\n}\n// function addCellClasses(cell, isDisabledDate, monthType, isToday) {\n//   cell.classList.add(monthType);\n//   if (isDisabledDate) {\n//     cell.classList.add('disabled-day');\n//   }\n//   if (monthType === 'current-month' && isToday) {\n//     cell.classList.add('order-day');\n//   }\n// }\n\n// function addCellClickEvent(cell, isDisabledDate) {\n//   if (!isDisabledDate) {\n//     cell.addEventListener('click', handleCellClick);\n//   }\n// }\n\n// function createCellEl(fd, fm, y, isDisabledDate, monthType) {\n//   const cell = document.createElement('td');\n//   setCellText(cell, fd);\n//   setCellAttributes(cell, fd, fm, y);\n//   addCellClasses(cell, isDisabledDate, monthType);\n//   addCellClickEvent(cell, isDisabledDate);\n\n//   return cell;\n// }\n\n// function createPreviousMonthCell(day) {\n//   const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n//   const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n//     day,\n//     month,\n//     year\n//   );\n//   const todayObj = new Date();\n//   const isDisabledDate = isDateBeforeToday(\n//     new Date(formattedYear, formattedMonth - 1, day),\n//     todayObj\n//   );\n//   const cell = createCellEl(\n//     formattedDay,\n//     formattedMonth - 1,\n//     formattedYear,\n//     isDisabledDate,\n//     'previous-month'\n//   );\n//   return cell;\n// }\n\n// function createCurrentMonthCell(day) {\n//   const { formattedDay } = formatDateInfo(day);\n//   const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n//   const todayObj = new Date();\n//   const cellDateObj = new Date(year, month, day);\n//   const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n//   const cell = createCellEl(\n//     formattedDay,\n//     month,\n//     year,\n//     isDisabledDate,\n//     'current-month'\n//   );\n//   const isYearEquel =\n//     cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n//   const isMonthEquel = cellDateObj.getMonth() === selectedDateObj.getMonth();\n//   const isDayEquel = day === selectedDateObj.getDate();\n//   const isCellSelectedDay = isYearEquel && isMonthEquel && isDayEquel;\n//   addCellClasses(cell, isDisabledDate, 'current-month', isCellSelectedDay);\n//   return cell;\n// }\n\n// function createNextMonthCell(day) {\n//   const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n//   const { formattedDay } = formatDateInfo(day, month, year);\n//   const formattedMonth = month === 11 ? 1 : month + 2;\n//   const formattedYear = month === 11 ? year + 1 : year;\n//   const todayObj = new Date();\n//   const cellDateObj = new Date(formattedYear, formattedMonth - 1, day);\n//   const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n//   const isCellSelectedDay =\n//     cellDateObj.getFullYear() === selectedDateObj.getFullYear() &&\n//     cellDateObj.getMonth() === selectedDateObj.getMonth() &&\n//     day === selectedDateObj.getDate();\n//   const cell = createCellEl(\n//     formattedDay,\n//     formattedMonth - 1,\n//     formattedYear,\n//     isDisabledDate,\n//     'next-month'\n//   );\n//   addCellClasses(cell, isDisabledDate, 'next-month', isCellSelectedDay);\n//   return cell;\n// }\n\nfunction setMonthAndYearName(year) {\n  const monthName = monthToShowInCalendarObj.toLocaleDateString('uk-UA', {\n    month: 'long',\n  });\n  const capitalizedMonth =\n    monthName.charAt(0).toUpperCase() + monthName.slice(1);\n  calendarHeadMonthAndYear.textContent = `${capitalizedMonth} ${year}`;\n}\nfunction createCalendarRow() {\n  return document.createElement('tr');\n}\n\nfunction generateCalendar(dateobj) {\n  clearCalendarData();\n  const { year, month } = getCurrentYearAndMonth(dateobj);\n  setMonthAndYearName(year);\n  const { firstDayOfMonth, lastDayOfMonthObj } = getMonthBoundaryDates(\n    year,\n    month\n  );\n  const initialNumberOfWeekDay = calculateStartDay(firstDayOfMonth);\n  const lastDayOfPrevMonth = getLastDayOfPrevMonth(year, month);\n\n  let currentDayNumber = 1;\n  let currentRow = createCalendarRow();\n\n  for (let i = initialNumberOfWeekDay - 1; i >= 1; i--) {\n    const day = lastDayOfPrevMonth - i + 1;\n    const cell = createPreviousMonthCell(day);\n    appendElement(currentRow, cell);\n  }\n\n  while (currentDayNumber <= lastDayOfMonthObj.getDate()) {\n    const cell = createCurrentMonthCell(currentDayNumber);\n    appendElement(currentRow, cell);\n    const isWeekRowFull = currentRow.children.length === 7;\n    if (isWeekRowFull) {\n      appendElement(calendarBody, currentRow);\n      currentRow = createCalendarRow();\n    }\n    currentDayNumber++;\n  }\n  const isAnyEmptyCell = currentRow.children.length > 0;\n  if (isAnyEmptyCell) {\n    for (let i = 1; currentRow.children.length < 7; i++) {\n      const cell = createNextMonthCell(i);\n      appendElement(currentRow, cell);\n    }\n    appendElement(calendarBody, currentRow);\n  }\n}\n\nfunction handleCellClick(event) {\n  const clickedDate = convertDateFormat(event.target.dataset.date);\n  const currentDateObj = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const clickedDateObj = new Date(clickedDate);\n\n  selectedDateObj = clickedDateObj;\n  const currentDateObjObj = new Date(currentDateObj);\n  const differenceInMilliseconds = clickedDateObj - currentDateObjObj;\n\n  if (differenceInMilliseconds >= 0) {\n    const chosenDate = reverseConvertDateFormat(clickedDate);\n    orderDayString = chosenDate;\n    setDateInputValue();\n    toggleIconActiveStyle(calendarIcon);\n    toggleCalendarVisibility();\n  }\n}\n\nfunction setDateInputValue() {\n  dateInput.value = `${orderDayString}`;\n}\n\nfunction clearCalendarData() {\n  calendarBody.innerHTML = '';\n}\n\nfunction updateCalendar(monthOffset) {\n  monthToShowInCalendarObj.setMonth(\n    monthToShowInCalendarObj.getMonth() + monthOffset\n  );\n\n  generateCalendar(monthToShowInCalendarObj);\n}\n\nfunction toggleCalendarVisibility() {\n  calendarBlock.classList.toggle('isHidden');\n}\n\ngenerateCalendar(selectedDateObj);\n","export function getCurrentDateAsString() {\n  const currentDate = new Date();\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nexport function extractDate(inputString) {\n  const trimmedString = inputString.trim();\n  const datePattern = /\\d{2}\\/\\d{2}\\/\\d{4}/;\n  const match = trimmedString.match(datePattern);\n  if (match) {\n    return match[0];\n  } else {\n    return null;\n  }\n}\n\nexport function isDateBeforeToday(date, todayObj) {\n  return date < todayObj;\n}\n\nexport function convertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [day, month, year] = parts;\n  const newDateString = `${month}/${day}/${year}`;\n  return newDateString;\n}\n\nexport function reverseConvertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [month, day, year] = parts;\n  const newDateString = `${day}/${month}/${year}`;\n  return newDateString;\n}\n\nexport function calculateStartDay(firstDayOfMonth) {\n  let initialNumberOfWeekDay = firstDayOfMonth.getDay();\n  if (initialNumberOfWeekDay === 0) {\n    initialNumberOfWeekDay = 7;\n  }\n  return initialNumberOfWeekDay;\n}\n\nexport function getLastDayOfPrevMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\nexport function getCurrentYearAndMonth(obj) {\n  const year = obj.getFullYear();\n  const month = obj.getMonth();\n  return { month, year };\n}\n\nexport function getMonthBoundaryDates(year, month) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonthObj = new Date(year, month + 1, 0);\n  return { firstDayOfMonth, lastDayOfMonthObj };\n}\n\nexport function formatDateInfo(day, month, year) {\n  const formattedDay = day < 10 ? `0${day}` : day;\n  const formattedMonth = month === 0 ? 12 : month;\n  const formattedYear = month === 0 ? year - 1 : year;\n\n  return {\n    formattedDay,\n    formattedMonth,\n    formattedYear,\n  };\n}\n","import { toggleIconActiveStyle } from './common';\nconst selectedTimeObj = { hours: '20', minutes: '00' };\nconst timePickerElement = document.querySelector('.time-picker-wrap');\nconst clockIcon = document.querySelector('.icon--clock');\nconst hourTablo = document.querySelector('.tablo--hours');\nconst minuteTablo = document.querySelector('.tablo--minutes');\nconst hourPicker = document.querySelector('.time-picker__hours');\nconst minutePicker = document.querySelector('.time-picker__minutes');\nconst timePickerBtn = document.querySelector('.time-picker__btn');\nconst timeInput = document.querySelector('[name=\"userTime\"]');\ntimeInput.addEventListener('click', () => {\n  toggleIconActiveStyle(clockIcon);\n  toggleTimePickerVisibility();\n  const isTimePickerVisible = !timePickerElement.classList.contains('isHidden');\n  if (isTimePickerVisible) {\n    setTimeInputValue();\n  }\n});\ntimeInput.addEventListener('blur', e => {\n  const trimmedValue = extractTime(e.target.value);\n  timeInput.value = trimmedValue;\n});\n\nfunction setTimeInputValue() {\n  timeInput.value = `${selectedTimeObj.hours} : ${selectedTimeObj.minutes}`;\n}\n\nhourTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__hours')\n);\nminuteTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__minutes')\n);\nminutePicker.addEventListener('click', () =>\n  toggleTablo(minuteTablo, hourTablo)\n);\nhourPicker.addEventListener('click', () => toggleTablo(hourTablo, minuteTablo));\n\nfunction onTimeCellClick(e, blockSelector) {\n  const clickedElement = e.target;\n  if (!validateClickedNumber(clickedElement)) return;\n  const partTimeName = getTimePartName(blockSelector);\n  const elements = document.querySelectorAll(`.${partTimeName}`);\n  updateTimePickerTablo(clickedElement, elements);\n  const block = document.querySelector(blockSelector);\n  const value = clickedElement.dataset.id;\n  updateTimePickerBlock(block, value);\n  updateTimeInput(blockSelector, value);\n}\n\nfunction validateClickedNumber(clickedElement) {\n  return (\n    clickedElement.classList.contains('number') &&\n    !clickedElement.classList.contains('active')\n  );\n}\n\nfunction updateTimePickerTablo(clickedElement, elements) {\n  [...elements].map(element =>\n    element === clickedElement\n      ? selectElement(element)\n      : deselectElement(element)\n  );\n}\n\nfunction selectElement(element) {\n  element.classList.add('active');\n}\n\nfunction deselectElement(element) {\n  element.classList.remove('active');\n}\n\nfunction updateTimePickerBlock(block, value) {\n  block.innerHTML = value;\n}\n\nfunction toggleTablo(tabloToShow, tabloToHide) {\n  const isVisible = !tabloToShow.classList.contains('isHidden');\n  if (isVisible) return;\n  tabloToShow.classList.remove('isHidden');\n  tabloToHide.classList.add('isHidden');\n}\n\nclockIcon.addEventListener('click', e => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(e.target);\n});\n\ntimePickerBtn.addEventListener('click', () => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(clockIcon);\n});\n\nfunction toggleTimePickerVisibility() {\n  timePickerElement.classList.toggle('isHidden');\n}\n\nfunction updateTimeInput(selector, value) {\n  const partTime = getTimePartName(selector);\n  selectedTimeObj[partTime] = value;\n  setTimeInputValue();\n}\n\nfunction getTimePartName(selector) {\n  return selector.split('__')[1];\n}\n\nfunction extractTime(inputString) {\n  const trimmedString = inputString.trim();\n  const timeMatch = trimmedString.match(/\\d{2}\\s*:\\s*\\d{2}/);\n  return timeMatch ? timeMatch[0] : null;\n}\n","const backdrop = document.querySelector('.backdrop--subscr');\n\nconst locationInputList = document.querySelectorAll('.form__input--location');\n\nif (!window.initMap) {\n  window.initMap = function () {\n    locationInputList.forEach(function (locationInput) {\n      const autocomplete = new google.maps.places.Autocomplete(locationInput);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        locationInput.setAttribute('data-id', locationInput.value);\n      });\n    });\n  };\n}\n\nfunction handleInputFocusAndNotEmpty(event) {\n  const locationInput = event.target;\n  if (backdrop) {\n    if (\n      locationInput.value.trim() !== '' &&\n      document.activeElement === locationInput\n    ) {\n      backdrop.style.overflow = 'hidden';\n    } else {\n      backdrop.style.overflow = 'auto';\n    }\n  }\n}\n\nlocationInputList.forEach(function (locationInput) {\n  locationInput.addEventListener('input', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('focus', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('blur', handleInputFocusAndNotEmpty);\n\n  handleInputFocusAndNotEmpty({ target: locationInput });\n});\n"],"names":["$cKJBV","parcelRequire","$cc3f9602dc71fc91$var$calendarBlock","document","querySelector","$cc3f9602dc71fc91$var$calendarBody","$cc3f9602dc71fc91$var$calendarHeadMonthAndYear","$cc3f9602dc71fc91$var$prevMonthBtn","$cc3f9602dc71fc91$var$nextMonthBtn","$cc3f9602dc71fc91$var$dateInput","previousElementSibling","$cc3f9602dc71fc91$var$calendarIcon","$cc3f9602dc71fc91$var$selectedDateObj","Date","$cc3f9602dc71fc91$var$monthToShowInCalendarObj","$cc3f9602dc71fc91$var$orderDayString","$gP56P","getCurrentDateAsString","$cc3f9602dc71fc91$var$createCellEl","fd","fm","y","isDisabledDate","monthType","isCellSelectedDay","cell","createElement","day","textContent","$cc3f9602dc71fc91$var$setCellText","month","year","dataset","date","$cc3f9602dc71fc91$var$setCellAttributes","addEventListener","$cc3f9602dc71fc91$var$handleCellClick","$cc3f9602dc71fc91$var$addCellClickEvent","classList","add","$cc3f9602dc71fc91$var$createPreviousMonthCell","getCurrentYearAndMonth","formattedDay","formattedMonth","formattedYear","formatDateInfo","todayObj","isDateBeforeToday","$cc3f9602dc71fc91$var$createCurrentMonthCell","cellDateObj","isYearEquel","getFullYear","isMonthEquel","getMonth","isDayEquel","getDate","$cc3f9602dc71fc91$var$createNextMonthCell","$cc3f9602dc71fc91$var$createCalendarRow","$cc3f9602dc71fc91$var$generateCalendar","dateobj","innerHTML","monthName","toLocaleDateString","capitalizedMonth","charAt","toUpperCase","slice","$cc3f9602dc71fc91$var$setMonthAndYearName","firstDayOfMonth","lastDayOfMonthObj","getMonthBoundaryDates","initialNumberOfWeekDay","calculateStartDay","lastDayOfPrevMonth","getLastDayOfPrevMonth","currentDayNumber","currentRow","i","appendElement","children","length","event","clickedDate","convertDateFormat","target","currentDateObj","clickedDateObj","chosenDate","reverseConvertDateFormat","$cc3f9602dc71fc91$var$setDateInputValue","toggleIconActiveStyle","$cc3f9602dc71fc91$var$toggleCalendarVisibility","value","$cc3f9602dc71fc91$var$updateCalendar","monthOffset","setMonth","toggle","isCalendarVisible","contains","e","trimmedValue","extractDate","$c3f55f585b52852b$export$90c332d38f0433b1","currentDate","toString","padStart","$c3f55f585b52852b$export$22fa983d82ded8f8","inputString","match","trim","$c3f55f585b52852b$export$e797271039bd7c51","$c3f55f585b52852b$export$b7ffb0954a6650fe","dateString","parts","split","$c3f55f585b52852b$export$b69dcb7b429eae81","$c3f55f585b52852b$export$85183788230cd25b","getDay","$c3f55f585b52852b$export$4131c36df799e960","$c3f55f585b52852b$export$e722cbad0f685804","obj","$c3f55f585b52852b$export$830fcb1fdc42503","$c3f55f585b52852b$export$c3b67661558b2e73","$04c848f3f4a97aca$var$selectedTimeObj","hours","minutes","$04c848f3f4a97aca$var$timePickerElement","$04c848f3f4a97aca$var$clockIcon","$04c848f3f4a97aca$var$hourTablo","$04c848f3f4a97aca$var$minuteTablo","$04c848f3f4a97aca$var$hourPicker","$04c848f3f4a97aca$var$minutePicker","$04c848f3f4a97aca$var$timePickerBtn","$04c848f3f4a97aca$var$timeInput","$04c848f3f4a97aca$var$setTimeInputValue","$04c848f3f4a97aca$var$onTimeCellClick","blockSelector","clickedElement","$04c848f3f4a97aca$var$validateClickedNumber","partTimeName","$04c848f3f4a97aca$var$getTimePartName","elements","map","element","$04c848f3f4a97aca$var$selectElement","remove","$04c848f3f4a97aca$var$deselectElement","$04c848f3f4a97aca$var$updateTimePickerTablo","querySelectorAll","block","id","$04c848f3f4a97aca$var$updateTimePickerBlock","selector","partTime","$04c848f3f4a97aca$var$updateTimeInput","$04c848f3f4a97aca$var$toggleTablo","tabloToShow","tabloToHide","$04c848f3f4a97aca$var$toggleTimePickerVisibility","timeMatch","$04c848f3f4a97aca$var$extractTime","$ae410647f7bccdd5$var$backdrop","$ae410647f7bccdd5$var$locationInputList","$ae410647f7bccdd5$var$handleInputFocusAndNotEmpty","locationInput","activeElement","style","overflow","window","initMap","forEach","autocomplete","google","maps","places","Autocomplete","addListener","getPlace","setAttribute"],"version":3,"file":"calc-order.f3514732.js.map"}