{"mappings":"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","sources":["src/js/modules/calendar.js","src/js/modules/time-picker.js","src/js/modules/location.js"],"sourcesContent":["import { toggleIconActiveStyle, appendElement } from './common';\n\nconst calendars = document.querySelectorAll('.calendar');\n\ncalendars.forEach(calendar => {\n  console.log('calendar: ', calendar);\n  const prevMonthBtn = calendar.querySelector('.calendar__prevMonth-btn');\n  const nextMonthBtn = calendar.querySelector('.calendar__nextMonth-btn');\n  const dateInput =\n    calendar.previousElementSibling.querySelector('[name=\"userDate\"]');\n  const calendarIcon =\n    calendar.previousElementSibling.querySelector('.icon--calendar');\n\n  let selectedDateObj = new Date();\n  let monthToShowInCalendarObj = new Date();\n  let orderDay = getCurrentDateAsString();\n\n  dateInput.addEventListener('click', () => {\n    toggleCalendarVisibility(calendar);\n    toggleIconActiveStyle(calendarIcon);\n    monthToShowInCalendarObj = new Date(selectedDateObj);\n    const isCalendarVisible = !calendar.classList.contains('isHidden');\n    generateCalendar(\n      selectedDateObj,\n      calendar,\n      monthToShowInCalendarObj,\n      selectedDateObj\n    );\n    if (isCalendarVisible) {\n      setDateInputValue(dateInput, orderDay);\n    }\n  });\n\n  dateInput.addEventListener('blur', e => {\n    const trimmedValue = extractDate(e.target.value);\n    dateInput.value = trimmedValue;\n  });\n\n  calendarIcon.addEventListener('click', () => {\n    toggleCalendarVisibility(calendar);\n    monthToShowInCalendarObj = new Date(selectedDateObj);\n    generateCalendar(\n      selectedDateObj,\n      calendar,\n      monthToShowInCalendarObj,\n      selectedDateObj\n    );\n    toggleIconActiveStyle(calendarIcon);\n    const isCalendarVisible = !calendar.classList.contains('isHidden');\n    if (isCalendarVisible) {\n      setDateInputValue(dateInput, orderDay);\n    }\n  });\n\n  prevMonthBtn?.addEventListener('click', () => {\n    updateCalendar(-1, calendar, monthToShowInCalendarObj, selectedDateObj);\n  });\n\n  nextMonthBtn?.addEventListener('click', () => {\n    updateCalendar(1, calendar, monthToShowInCalendarObj, selectedDateObj);\n  });\n});\n\nfunction toggleCalendarVisibility(calendar) {\n  calendar.classList.toggle('isHidden');\n}\n\nfunction setMonthAndYearName(year, calendar, dateObj) {\n  const calendarHeadMonthAndYear = calendar.querySelector(\n    '.calendar__monthYear'\n  );\n  const monthName = dateObj.toLocaleDateString('uk-UA', {\n    month: 'long',\n  });\n  const capitalizedMonth =\n    monthName.charAt(0).toUpperCase() + monthName.slice(1);\n  calendarHeadMonthAndYear.textContent = `${capitalizedMonth} ${year}`;\n}\n\nfunction generateCalendar(dateobj, calendar, showDateObj, selectedDateObj) {\n  const calendarBody = calendar.querySelector('.calendar__body');\n  clearCalendarData(calendar);\n  const { year, month } = getCurrentYearAndMonth(dateobj);\n  setMonthAndYearName(year, calendar, showDateObj);\n  const { firstDayOfMonth, lastDayOfMonthObj } = getMonthBoundaryDates(\n    year,\n    month\n  );\n  const initialNumberOfWeekDay = calculateStartDay(firstDayOfMonth);\n  const lastDayOfPrevMonth = getLastDayOfPrevMonth(year, month);\n\n  let currentDayNumber = 1;\n  let currentRow = createCalendarRow();\n\n  for (let i = initialNumberOfWeekDay - 1; i >= 1; i--) {\n    const day = lastDayOfPrevMonth - i + 1;\n    const cell = createPreviousMonthCell(day, showDateObj, calendar);\n    appendElement(currentRow, cell);\n  }\n\n  while (currentDayNumber <= lastDayOfMonthObj.getDate()) {\n    const cell = createCurrentMonthCell(\n      selectedDateObj,\n      currentDayNumber,\n      showDateObj,\n      calendar\n    );\n    appendElement(currentRow, cell);\n    const isWeekRowFull = currentRow.children.length === 7;\n    if (isWeekRowFull) {\n      appendElement(calendarBody, currentRow);\n      currentRow = createCalendarRow();\n    }\n    currentDayNumber++;\n  }\n  const isAnyEmptyCell = currentRow.children.length > 0;\n  if (isAnyEmptyCell) {\n    for (let i = 1; currentRow.children.length < 7; i++) {\n      const cell = createNextMonthCell(\n        selectedDateObj,\n        i,\n        showDateObj,\n        calendar\n      );\n      appendElement(currentRow, cell);\n    }\n    appendElement(calendarBody, currentRow);\n  }\n}\n\nfunction handleCellClick(event, calendar) {\n  const dateInput =\n    calendar.previousElementSibling.querySelector('[name=\"userDate\"]');\n  const calendarIcon =\n    calendar.previousElementSibling.querySelector('.icon--calendar');\n  const clickedDate = convertDateFormat(event.target.dataset.date);\n  const currentDateObj = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const clickedDateObj = new Date(clickedDate);\n\n  selectedDateObj = clickedDateObj;\n  const currentDateObjObj = new Date(currentDateObj);\n  const differenceInMilliseconds = clickedDateObj - currentDateObjObj;\n\n  if (differenceInMilliseconds >= 0) {\n    const chosenDate = reverseConvertDateFormat(clickedDate);\n    orderDay = chosenDate;\n    setDateInputValue(dateInput, orderDay);\n    toggleIconActiveStyle(calendarIcon);\n    toggleCalendarVisibility(calendar);\n  }\n}\n\nfunction setDateInputValue(input, orderDay) {\n  input.value = `${orderDay}`;\n}\n\n// ______________________________________________________________-\n// ______________________________________________________________-\n\nfunction getCurrentDateAsString() {\n  const currentDate = new Date();\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nfunction extractDate(inputString) {\n  const trimmedString = inputString.trim();\n  const datePattern = /\\d{2}\\/\\d{2}\\/\\d{4}/;\n  const match = trimmedString.match(datePattern);\n  if (match) {\n    return match[0];\n  } else {\n    return null;\n  }\n}\n\nfunction isDateBeforeToday(date, todayObj) {\n  return date < todayObj;\n}\n\nfunction convertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [day, month, year] = parts;\n  const newDateString = `${month}/${day}/${year}`;\n  return newDateString;\n}\n\nfunction reverseConvertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [month, day, year] = parts;\n  const newDateString = `${day}/${month}/${year}`;\n  return newDateString;\n}\n\nfunction calculateStartDay(firstDayOfMonth) {\n  let initialNumberOfWeekDay = firstDayOfMonth.getDay();\n  if (initialNumberOfWeekDay === 0) {\n    initialNumberOfWeekDay = 7;\n  }\n  return initialNumberOfWeekDay;\n}\n\nfunction getLastDayOfPrevMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\nfunction getCurrentYearAndMonth(obj) {\n  const year = obj.getFullYear();\n  const month = obj.getMonth();\n  return { month, year };\n}\n\nfunction getMonthBoundaryDates(year, month) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonthObj = new Date(year, month + 1, 0);\n  return { firstDayOfMonth, lastDayOfMonthObj };\n}\n\nfunction formatDateInfo(day, month, year) {\n  const formattedDay = day < 10 ? `0${day}` : day;\n  const formattedMonth = month === 0 ? 12 : month;\n  const formattedYear = month === 0 ? year - 1 : year;\n\n  return {\n    formattedDay,\n    formattedMonth,\n    formattedYear,\n  };\n}\n\n// generateCalendar(selectedDateObj, calendar);\n\n// ______________________________________________________________-\n// ______________________________________________________________-\n\nfunction createCalendarRow() {\n  return document.createElement('tr');\n}\n\nfunction clearCalendarData(calendar) {\n  const calendarBody = calendar.querySelector('.calendar__body');\n  calendarBody.innerHTML = '';\n}\nfunction setCellText(cell, day) {\n  cell.textContent = day;\n}\nfunction setCellAttributes(cell, day, month, year) {\n  cell.dataset.date = `${day}/${month < 9 ? '0' : ''}${month + 1}/${year}`;\n}\n\nfunction addCellClasses(cell, isDisabledDate, monthType, isToday) {\n  cell.classList.add(monthType);\n  if (isDisabledDate) {\n    cell.classList.add('disabled-day');\n  }\n  if (monthType === 'current-month' && isToday) {\n    cell.classList.add('order-day');\n  }\n}\n\nfunction addCellClickEvent(cell, isDisabledDate, calendar) {\n  if (!isDisabledDate) {\n    cell.addEventListener('click', e => handleCellClick(e, calendar));\n  }\n}\n\nfunction createCellEl(fd, fm, y, isDisabledDate, monthType, calendar) {\n  const cell = document.createElement('td');\n  setCellText(cell, fd);\n  setCellAttributes(cell, fd, fm, y);\n  addCellClasses(cell, isDisabledDate, monthType);\n  addCellClickEvent(cell, isDisabledDate, calendar);\n\n  return cell;\n}\n\nfunction createPreviousMonthCell(day, showDateObj, calendar) {\n  const { year, month } = getCurrentYearAndMonth(showDateObj);\n  const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n    day,\n    month,\n    year\n  );\n  const todayObj = new Date();\n  const isDisabledDate = isDateBeforeToday(\n    new Date(formattedYear, formattedMonth - 1, day),\n    todayObj\n  );\n  const cell = createCellEl(\n    formattedDay,\n    formattedMonth - 1,\n    formattedYear,\n    isDisabledDate,\n    'previous-month',\n    calendar\n  );\n  return cell;\n}\n\nfunction createCurrentMonthCell(selectedDateObj, day, showDateObj, calendar) {\n  const { formattedDay } = formatDateInfo(day);\n  const { year, month } = getCurrentYearAndMonth(showDateObj);\n  const todayObj = new Date();\n  const cellDateObj = new Date(year, month, day);\n  const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n  const cell = createCellEl(\n    formattedDay,\n    month,\n    year,\n    isDisabledDate,\n    'current-month',\n    calendar\n  );\n  const isYearEquel =\n    cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n  const isMonthEquel = cellDateObj.getMonth() === selectedDateObj.getMonth();\n  const isDayEquel = day === selectedDateObj.getDate();\n  const isCellSelectedDay = isYearEquel && isMonthEquel && isDayEquel;\n  addCellClasses(cell, isDisabledDate, 'current-month', isCellSelectedDay);\n  return cell;\n}\n\nfunction createNextMonthCell(selectedDateObj, day, showDateObj, calendar) {\n  const { year, month } = getCurrentYearAndMonth(showDateObj);\n  const { formattedDay } = formatDateInfo(day, month, year);\n  const formattedMonth = month === 11 ? 1 : month + 2;\n  const formattedYear = month === 11 ? year + 1 : year;\n  const todayObj = new Date();\n  const cellDateObj = new Date(formattedYear, formattedMonth - 1, day);\n  const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n  const isCellSelectedDay =\n    cellDateObj.getFullYear() === selectedDateObj.getFullYear() &&\n    cellDateObj.getMonth() === selectedDateObj.getMonth() &&\n    day === selectedDateObj.getDate();\n  const cell = createCellEl(\n    formattedDay,\n    formattedMonth - 1,\n    formattedYear,\n    isDisabledDate,\n    'next-month',\n    calendar\n  );\n  addCellClasses(cell, isDisabledDate, 'next-month', isCellSelectedDay);\n  return cell;\n}\n\nfunction updateCalendar(\n  monthOffset,\n  calendar,\n  monthToShowInCalendarObj,\n  selectedDateObj\n) {\n  monthToShowInCalendarObj.setMonth(\n    monthToShowInCalendarObj.getMonth() + monthOffset\n  );\n\n  generateCalendar(\n    monthToShowInCalendarObj,\n    calendar,\n    monthToShowInCalendarObj,\n    selectedDateObj\n  );\n}\n","import { toggleIconActiveStyle } from './common';\nconst selectedTimeObj = { hours: '20', minutes: '00' };\nconst timePickerElement = document.querySelector('.time-picker-wrap');\nconst clockIcon = document.querySelector('.icon--clock');\nconst hourTablo = document.querySelector('.tablo--hours');\nconst minuteTablo = document.querySelector('.tablo--minutes');\nconst hourPicker = document.querySelector('.time-picker__hours');\nconst minutePicker = document.querySelector('.time-picker__minutes');\nconst timePickerBtn = document.querySelector('.time-picker__btn');\nconst timeInput = document.querySelector('[name=\"userTime\"]');\ntimeInput.addEventListener('click', () => {\n  toggleIconActiveStyle(clockIcon);\n  toggleTimePickerVisibility();\n  const isTimePickerVisible = !timePickerElement.classList.contains('isHidden');\n  if (isTimePickerVisible) {\n    setTimeInputValue();\n  }\n});\ntimeInput.addEventListener('blur', e => {\n  const trimmedValue = extractTime(e.target.value);\n  timeInput.value = trimmedValue;\n});\n\nfunction setTimeInputValue() {\n  timeInput.value = `${selectedTimeObj.hours} : ${selectedTimeObj.minutes}`;\n}\n\nhourTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__hours')\n);\nminuteTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__minutes')\n);\nminutePicker.addEventListener('click', () =>\n  toggleTablo(minuteTablo, hourTablo)\n);\nhourPicker.addEventListener('click', () => toggleTablo(hourTablo, minuteTablo));\n\nfunction onTimeCellClick(e, blockSelector) {\n  const clickedElement = e.target;\n  if (!validateClickedNumber(clickedElement)) return;\n  const partTimeName = getTimePartName(blockSelector);\n  const elements = document.querySelectorAll(`.${partTimeName}`);\n  updateTimePickerTablo(clickedElement, elements);\n  const block = document.querySelector(blockSelector);\n  const value = clickedElement.dataset.id;\n  updateTimePickerBlock(block, value);\n  updateTimeInput(blockSelector, value);\n}\n\nfunction validateClickedNumber(clickedElement) {\n  return (\n    clickedElement.classList.contains('number') &&\n    !clickedElement.classList.contains('active')\n  );\n}\n\nfunction updateTimePickerTablo(clickedElement, elements) {\n  [...elements].map(element =>\n    element === clickedElement\n      ? selectElement(element)\n      : deselectElement(element)\n  );\n}\n\nfunction selectElement(element) {\n  element.classList.add('active');\n}\n\nfunction deselectElement(element) {\n  element.classList.remove('active');\n}\n\nfunction updateTimePickerBlock(block, value) {\n  block.innerHTML = value;\n}\n\nfunction toggleTablo(tabloToShow, tabloToHide) {\n  const isVisible = !tabloToShow.classList.contains('isHidden');\n  if (isVisible) return;\n  tabloToShow.classList.remove('isHidden');\n  tabloToHide.classList.add('isHidden');\n}\n\nclockIcon.addEventListener('click', e => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(e.target);\n});\n\ntimePickerBtn.addEventListener('click', () => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(clockIcon);\n});\n\nfunction toggleTimePickerVisibility() {\n  timePickerElement.classList.toggle('isHidden');\n}\n\nfunction updateTimeInput(selector, value) {\n  const partTime = getTimePartName(selector);\n  selectedTimeObj[partTime] = value;\n  setTimeInputValue();\n}\n\nfunction getTimePartName(selector) {\n  return selector.split('__')[1];\n}\n\nfunction extractTime(inputString) {\n  const trimmedString = inputString.trim();\n  const timeMatch = trimmedString.match(/\\d{2}\\s*:\\s*\\d{2}/);\n  return timeMatch ? timeMatch[0] : null;\n}\n","const backdrop = document.querySelector('.backdrop--subscr');\n\nconst locationInputList = document.querySelectorAll('.form__input--location');\n\nif (!window.initMap) {\n  window.initMap = function () {\n    locationInputList.forEach(function (locationInput) {\n      const autocomplete = new google.maps.places.Autocomplete(locationInput);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        locationInput.setAttribute('data-id', locationInput.value);\n      });\n    });\n  };\n}\n\nfunction handleInputFocusAndNotEmpty(event) {\n  const locationInput = event.target;\n  if (backdrop) {\n    if (\n      locationInput.value.trim() !== '' &&\n      document.activeElement === locationInput\n    ) {\n      backdrop.style.overflow = 'hidden';\n    } else {\n      backdrop.style.overflow = 'auto';\n    }\n  }\n}\n\nlocationInputList.forEach(function (locationInput) {\n  locationInput.addEventListener('input', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('focus', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('blur', handleInputFocusAndNotEmpty);\n\n  handleInputFocusAndNotEmpty({ target: locationInput });\n});\n"],"names":["$cKJBV","parcelRequire","$cc3f9602dc71fc91$var$toggleCalendarVisibility","calendar","classList","toggle","$cc3f9602dc71fc91$var$generateCalendar","dateobj","showDateObj","selectedDateObj","calendarBody","querySelector","innerHTML","$cc3f9602dc71fc91$var$clearCalendarData","year","month","$cc3f9602dc71fc91$var$getCurrentYearAndMonth","dateObj","calendarHeadMonthAndYear","monthName","toLocaleDateString","capitalizedMonth","charAt","toUpperCase","slice","textContent","$cc3f9602dc71fc91$var$setMonthAndYearName","firstDayOfMonth","lastDayOfMonthObj","Date","$cc3f9602dc71fc91$var$getMonthBoundaryDates","initialNumberOfWeekDay","getDay","$cc3f9602dc71fc91$var$calculateStartDay","lastDayOfPrevMonth","getDate","$cc3f9602dc71fc91$var$getLastDayOfPrevMonth","currentDayNumber","currentRow","$cc3f9602dc71fc91$var$createCalendarRow","i","cell","$cc3f9602dc71fc91$var$createPreviousMonthCell","appendElement","$cc3f9602dc71fc91$var$createCurrentMonthCell","children","length","$cc3f9602dc71fc91$var$createNextMonthCell","$cc3f9602dc71fc91$var$setDateInputValue","input","orderDay","value","$cc3f9602dc71fc91$var$isDateBeforeToday","date","todayObj","obj","getFullYear","getMonth","$cc3f9602dc71fc91$var$formatDateInfo","day","document","createElement","$cc3f9602dc71fc91$var$addCellClasses","isDisabledDate","monthType","isToday","add","$cc3f9602dc71fc91$var$addCellClickEvent","addEventListener","e","event","dateInput","previousElementSibling","calendarIcon","clickedDate","dateString","parts","split","$cc3f9602dc71fc91$var$convertDateFormat","target","dataset","currentDateObj","clickedDateObj","chosenDate","$cc3f9602dc71fc91$var$reverseConvertDateFormat","toggleIconActiveStyle","$cc3f9602dc71fc91$var$handleCellClick","$cc3f9602dc71fc91$var$createCellEl","fd","fm","y","$cc3f9602dc71fc91$var$setCellText","$cc3f9602dc71fc91$var$setCellAttributes","formattedDay","formattedMonth","formattedYear","cellDateObj","isYearEquel","isMonthEquel","isDayEquel","isCellSelectedDay","$cc3f9602dc71fc91$var$updateCalendar","monthOffset","monthToShowInCalendarObj","setMonth","querySelectorAll","forEach","console","log","prevMonthBtn","nextMonthBtn","currentDate","toString","padStart","$cc3f9602dc71fc91$var$getCurrentDateAsString","isCalendarVisible","contains","trimmedValue","inputString","trimmedString","trim","datePattern","match","$cc3f9602dc71fc91$var$extractDate","$04c848f3f4a97aca$var$selectedTimeObj","hours","minutes","$04c848f3f4a97aca$var$timePickerElement","$04c848f3f4a97aca$var$clockIcon","$04c848f3f4a97aca$var$hourTablo","$04c848f3f4a97aca$var$minuteTablo","$04c848f3f4a97aca$var$hourPicker","$04c848f3f4a97aca$var$minutePicker","$04c848f3f4a97aca$var$timePickerBtn","$04c848f3f4a97aca$var$timeInput","$04c848f3f4a97aca$var$setTimeInputValue","$04c848f3f4a97aca$var$onTimeCellClick","blockSelector","clickedElement","$04c848f3f4a97aca$var$validateClickedNumber","partTimeName","$04c848f3f4a97aca$var$getTimePartName","elements","map","element","$04c848f3f4a97aca$var$selectElement","remove","$04c848f3f4a97aca$var$deselectElement","$04c848f3f4a97aca$var$updateTimePickerTablo","block","id","$04c848f3f4a97aca$var$updateTimePickerBlock","selector","partTime","$04c848f3f4a97aca$var$updateTimeInput","$04c848f3f4a97aca$var$toggleTablo","tabloToShow","tabloToHide","$04c848f3f4a97aca$var$toggleTimePickerVisibility","timeMatch","$04c848f3f4a97aca$var$extractTime","$ae410647f7bccdd5$var$backdrop","$ae410647f7bccdd5$var$locationInputList","$ae410647f7bccdd5$var$handleInputFocusAndNotEmpty","locationInput","activeElement","style","overflow","window","initMap","autocomplete","google","maps","places","Autocomplete","addListener","getPlace","setAttribute"],"version":3,"file":"calc-order.78b6b63c.js.map"}