{"mappings":"oeAAAA,EAAA,S,WCAO,MAAMC,EAAYC,SAASC,cAAc,iBAC1CC,EAAiBF,SAASG,iBAAiB,iBCejD,SAASC,EAAYC,GDDd,IAAqBC,ECE1BN,SAASO,KAAKC,UAAUC,OAAO,GAAGJ,EAAKK,mBACvCL,EAAKM,MAAMH,UAAUC,OAAO,oBACV,iBAAdJ,EAAKK,ODJiBJ,ECIoB,MAAAP,OAAA,EAAAA,EAAWO,SDHzD,IAAIA,GAAUM,SAAQC,IACpBA,EAAQL,UAAUM,OAAO,QAAQ,I,CAfrCf,WAAWgB,iBAAiB,UAyB5B,SAAsBC,GACpBA,EAAEC,iBAeF,MAAMC,EA6BC,IAAIhB,GAAgBiB,MAAKC,GAAOA,EAAIZ,UAAUa,SAAS,YA5B9DC,QAAQC,IAAI,wBAAyBL,GAEH,IAA9BM,mBAAmBC,SACrBH,QAAQC,IAAI,eACZP,EAAEU,cAAcC,SAChBC,OAAOC,SAASC,KAAO,qB,IAI3B5B,EAAeU,SAAQmB,IACrBA,EAAGhB,iBAAiB,SAASC,KAK/B,SAA+BA,GAC7B,MAAMgB,EAAgBhB,EAAEiB,OAAOC,QAAQ,UACvC,GAAIF,EAAcxB,UAAUa,SAAS,UAAW,OAChD,IAAInB,GAAgBU,SAAQuB,IACtBA,IAAWH,EACbG,EAAO3B,UAAU4B,IAAI,UAErBD,EAAO3B,UAAUM,OAAO,SAAS,G,CAXnCuB,CAAsBrB,EAAE,GACxB,IEtDJ,MAAMsB,EAAc,CAClB5B,KAAM,UACN6B,aAAcvC,SAASC,cAAc,6BACrCuC,cAAexC,SAASC,cAAc,8BACtCU,MAAOX,SAASC,cAAc,wBAC9BwC,SAAUzC,SAASC,cAAc,uBDJ5B,IAAyBI,KCOhBiC,GDNTC,aAAaxB,iBAAiB,SAAS,IAAMX,EAAYC,KAC9DA,EAAKmC,cAAczB,iBAAiB,SAASC,IAC3CA,EAAE0B,kBACFtC,EAAYC,EAAK,IAEnBA,EAAKoC,SAAS1B,iBAAiB,SAASC,IAClCA,EAAEiB,SAAW5B,EAAKoC,UACpBrC,EAAYC,EAAK","sources":["src/js/services.js","src/js/modules/user-order-form.js","src/js/modules/modal.js","src/js/modules/support-modal.js"],"sourcesContent":["import './modules/common.js';\nimport './modules/aside-menu.js';\nimport './modules/modal.js';\nimport './modules/support-modal.js';\n","export const subscForm = document.querySelector('.subscr__form');\nconst paymentBtnList = document.querySelectorAll('.payment__btn');\nsubscForm?.addEventListener('submit', onSubmitForm);\n\nfunction validateFields(elements, fieldNames) {\n  const elementsWithErrors = [];\n  fieldNames.forEach(fieldName => {\n    const fieldValue = elements[fieldName].value;\n    if (fieldValue.length === 0) {\n      elementsWithErrors.push(elements[fieldName]);\n    }\n  });\n  return elementsWithErrors;\n}\n\nexport function resetErrors(elements) {\n  [...elements].forEach(element => {\n    element.classList.remove('error');\n  });\n}\n\nfunction addErrorClass(elementsWithErrors) {\n  elementsWithErrors.forEach(element => {\n    element.classList.add('error');\n  });\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  // const elements = e.currentTarget.elements;\n  // const validationFields = [\n  //   'userName',\n  //   'userSurname',\n  //   'userTel',\n  //   'userEmail',\n  //   'userLocation',\n  //   'userDate',\n  //   'userTime',\n  // ];\n\n  // const elementsWithErrors = validateFields(elements, validationFields);\n  // resetErrors(elements);\n  // addErrorClass(elementsWithErrors);\n  const isPaymentTypeChosen = checkIfPaymentTypeChosen();\n  console.log('isPaymentTypeChosen: ', isPaymentTypeChosen);\n\n  if (elementsWithErrors.length === 0) {\n    console.log('form submit');\n    e.currentTarget.submit();\n    window.location.href = 'success-order.html';\n  }\n}\n\npaymentBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    onPaymentTypeBtnClick(e);\n  });\n});\n\nfunction onPaymentTypeBtnClick(e) {\n  const clickedButton = e.target.closest('button');\n  if (clickedButton.classList.contains('active')) return;\n  [...paymentBtnList].forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nfunction checkIfPaymentTypeChosen() {\n  return [...paymentBtnList].some(btn => btn.classList.contains('active'));\n}\n","import { resetErrors } from './user-order-form';\nimport { subscForm } from './user-order-form';\n\nexport function initializeModal(refs) {\n  refs.openModalBtn.addEventListener('click', () => toggleModal(refs));\n  refs.closeModalBtn.addEventListener('click', e => {\n    e.stopPropagation();\n    toggleModal(refs);\n  });\n  refs.backdrop.addEventListener('click', e => {\n    if (e.target === refs.backdrop) {\n      toggleModal(refs);\n    }\n  });\n}\n\nfunction toggleModal(refs) {\n  document.body.classList.toggle(`${refs.name}-modal-open`);\n  refs.modal.classList.toggle('backdrop--hidden');\n  if (refs.name === 'subscription') resetErrors(subscForm?.elements);\n}\n","import { initializeModal } from './modal';\n\nconst refsSupport = {\n  name: 'support',\n  openModalBtn: document.querySelector('[data-support-modal-open]'),\n  closeModalBtn: document.querySelector('[data-support-modal-close]'),\n  modal: document.querySelector('[data-support-modal]'),\n  backdrop: document.querySelector('.backdrop--support'),\n};\n\ninitializeModal(refsSupport);\n"],"names":["parcelRequire","$5f6fe576bb8e45fb$export$ac2141f83bb6e17f","document","querySelector","$5f6fe576bb8e45fb$var$paymentBtnList","querySelectorAll","$c549e00ea1028b97$var$toggleModal","refs","elements","body","classList","toggle","name","modal","forEach","element","remove","addEventListener","e","preventDefault","isPaymentTypeChosen","some","btn","contains","console","log","elementsWithErrors","length","currentTarget","submit","window","location","href","el","clickedButton","target","closest","button","add","$5f6fe576bb8e45fb$var$onPaymentTypeBtnClick","$dfe427b8479aa1e2$var$refsSupport","openModalBtn","closeModalBtn","backdrop","stopPropagation"],"version":3,"file":"services.49df2a6d.js.map"}