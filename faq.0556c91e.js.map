{"mappings":"swBAAA,IAAAA,EAAAC,EAAA,S,aAGO,SAASC,EAAgBC,GAC9BA,EAAKC,aAAaC,iBAAiB,SAAS,W,OAAMC,EAAYH,E,IAC9DA,EAAKI,cAAcF,iBAAiB,SAAS,SAAAG,GAC3CA,EAAEC,kBACFH,EAAYH,E,IAEdA,EAAKO,SAASL,iBAAiB,SAAS,SAAAG,GAClCA,EAAEG,SAAWR,EAAKO,UACpBJ,EAAYH,E,IAKX,SAASG,EAAYH,GAC1BS,SAASC,KAAKC,UAAUC,OAAO,GAAaC,OAAVb,EAAKc,KAAK,gBAC5Cd,EAAKe,MAAMJ,UAAUC,OAAO,oBACV,iBAAdZ,EAAKc,OAAyB,EAAAjB,EAAAmB,aAAqB,OAATnB,EAAAoB,gBAAS,IAATpB,EAAAoB,eAAA,EAAApB,EAAAoB,UAAWC,S,yICnB3D,IAAAC,EAAArB,EAAA,S,0BAEasB,EAAYX,SAASY,cAAc,iBAC1CC,EAAiBb,SAASc,iBAAiB,iBAC3CC,EAAsBf,SAASY,cAAc,6BAC7CI,EAAqBhB,SAASY,cAAc,4BAC5CK,EAAgBjB,SAASc,iBAAiB,gBAChDH,WAAWlB,iBAAiB,UAoE5B,SAAsBG,GACpBA,EAAEsB,iBACF,IAAMT,EAAWb,EAAEuB,cAAcV,SAC3BW,EAvCR,SAAwBX,EAAUY,GAChC,OAAOA,EACJC,QAAO,SAAAC,G,MAAkD,KAArCd,EAASc,GAAWC,MAAMC,M,IAC9CC,KAAI,SAAAH,G,OAAad,EAASc,E,IAoCFI,CAAelB,EAAUmB,GACpDC,EAAYpB,GA5Bd,SAAuBW,GACrBA,EAAmBU,SAAQ,SAAAC,GACzBA,EAAQ7B,UAAU8B,IAAI,Q,IA2BxBC,CAAcb,GACd,IAAMc,EAvBEC,EAAAzB,EAAD,CAAIG,GAAgBuB,MAAK,SAAAC,G,OAAOA,EAAInC,UAAUoC,SAAS,S,IAwBxDC,EApBiBvC,SAASY,cAAc,gCACd4B,QAoB1BC,EAAarB,EAAmBsB,OAAS,EAE1CR,GACHS,IAEGJ,GAhBLvB,EAAmBd,UAAUC,OAAO,YAmBpC,IAAK+B,GAAuBO,IAAeF,EACzC,OA+CqBK,EA5CPhD,EAAEG,OA6CD,IAAI8C,SAASD,GACrBd,SAAQ,SAACN,EAAOsB,GACnBA,EAAIC,WAAW,UACjBC,EAAcF,GAAOtB,E,IAGzByB,QAAQC,IAAI,kBAAmBF,GAhCjC,SAAyBvC,GACtB0B,EAAAzB,EAAA,CAAGD,GAAUqB,SAAQ,SAAAC,GAED,SAAjBA,EAAQoB,MACS,UAAjBpB,EAAQoB,MACS,QAAjBpB,EAAQoB,MACY,aAApBpB,EAAQqB,QAERrB,EAAQP,MAAQ,GACU,aAAjBO,EAAQoB,OACjBpB,EAAQS,SAAU,E,IA5BtBa,CAAgB5C,GAiCf0B,EAAAzB,EAAA,CAAGG,GAAgBiB,SAAQ,SAAAwB,GAC1BA,EAAOpD,UAAUqD,OAAO,S,KAhC1B,EAAAC,EAAAC,aAAYC,EAAAC,YAyCd,IAAyBf,C,IAlIzB/B,EAAeiB,SAAQ,SAAA8B,GACrBA,EAAGnE,iBAAiB,SAAS,SAAAG,IA2F/B,SAA+BA,GAC7B,IAAMiE,EAAgBjE,EAAEG,OAAO+D,QAAQ,UAEvC,GA8BF,SAAkCC,GAChC,IAAMC,EAAcD,EAAWE,aAAa,WAC5CjB,EAAckB,gBAAkBF,C,CAjChCG,CAAyBN,GACrBA,EAAc3D,UAAUoC,SAAS,UAAW,OAC/CH,EAAAzB,EAAA,CAAGG,GAAgBiB,SAAQ,SAAAwB,GACtBA,IAAWO,EACbP,EAAOpD,UAAU8B,IAAI,UAErBsB,EAAOpD,UAAUqD,OAAO,S,IAlG1Ba,CAAsBxE,IAEnBmB,EAAoBb,UAAUoC,SAAS,aAExCK,G,OAIN1B,EAAca,SAAQ,SAAA8B,GACpBA,EAAGnE,iBAAiB,SAAS,WAC3BmE,EAAG1D,UAAUqD,OAAO,Q,OAIxB,IAAM3B,EAAmB,CACvB,WACA,cACA,UACA,YACA,eACA,WACA,YAGIoB,EAAgB,CACpBkB,gBAAiB,IASZ,SAASrC,EAAYpB,GACzB0B,EAAAzB,EAAA,CAAGD,GAAUqB,SAAQ,SAAAC,GACpBA,EAAQ7B,UAAUqD,OAAO,Q,IAoB7B,SAASZ,IACP5B,EAAoBb,UAAUC,OAAO,W,wFCpEvC,IAAAqD,EAAAnE,EAAA,SAEagF,EAAa,CACxBhE,KAAM,eACNb,aAAcQ,SAASY,cAAc,kCACrCjB,cAAeK,SAASY,cAAc,mCACtCN,MAAON,SAASY,cAAc,6BAC9Bd,SAAUE,SAASY,cAAc,uBAGnC,EAAA4C,EAAAc,iBAAgBD,E","sources":["src/js/modules/modal.js","src/js/modules/user-order-form.js","src/js/modules/subscr-modal.js"],"sourcesContent":["import { resetErrors } from './user-order-form';\nimport { subscForm } from './user-order-form';\n\nexport function initializeModal(refs) {\n  refs.openModalBtn.addEventListener('click', () => toggleModal(refs));\n  refs.closeModalBtn.addEventListener('click', e => {\n    e.stopPropagation();\n    toggleModal(refs);\n  });\n  refs.backdrop.addEventListener('click', e => {\n    if (e.target === refs.backdrop) {\n      toggleModal(refs);\n    }\n  });\n}\n\nexport function toggleModal(refs) {\n  document.body.classList.toggle(`${refs.name}-modal-open`);\n  refs.modal.classList.toggle('backdrop--hidden');\n  if (refs.name === 'subscription') resetErrors(subscForm?.elements);\n}\n","import { refsSubscr } from './subscr-modal';\nimport { toggleModal } from './modal';\nexport const subscForm = document.querySelector('.subscr__form');\nconst paymentBtnList = document.querySelectorAll('.payment__btn');\nconst paymentErrorMessage = document.querySelector('.form__payment-error-text');\nconst policyErrorMessage = document.querySelector('.form__policy-error-text');\nconst formInputList = document.querySelectorAll('.form__input');\nsubscForm?.addEventListener('submit', onSubmitForm);\n\npaymentBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    onPaymentTypeBtnClick(e);\n    const isPaymentErrorMessageVisible =\n      !paymentErrorMessage.classList.contains('isHidden');\n    if (isPaymentErrorMessageVisible) {\n      togglePaymentTypeErrorVisibility();\n    }\n  });\n});\nformInputList.forEach(el => {\n  el.addEventListener('focus', () => {\n    el.classList.remove('error');\n  });\n});\n\nconst validationFields = [\n  'userName',\n  'userSurname',\n  'userTel',\n  'userEmail',\n  'userLocation',\n  'userDate',\n  'userTime',\n];\n\nconst userOrderData = {\n  userTypePayment: '',\n};\n\nfunction validateFields(elements, fieldNames) {\n  return fieldNames\n    .filter(fieldName => elements[fieldName].value.trim() === '')\n    .map(fieldName => elements[fieldName]);\n}\n\nexport function resetErrors(elements) {\n  [...elements].forEach(element => {\n    element.classList.remove('error');\n  });\n}\n\nfunction addErrorClass(elementsWithErrors) {\n  elementsWithErrors.forEach(element => {\n    element.classList.add('error');\n  });\n}\n\nfunction checkIfPaymentTypeChosen() {\n  return [...paymentBtnList].some(btn => btn.classList.contains('active'));\n}\n\nfunction checkIfPolicyAgreed() {\n  const policyCheckBox = document.querySelector('[name=\"studio-policy-check\"]');\n  const isAgreed = policyCheckBox.checked;\n  return isAgreed;\n}\n\nfunction togglePaymentTypeErrorVisibility() {\n  paymentErrorMessage.classList.toggle('isHidden');\n}\n\nfunction togglePolicyErrorVisibility() {\n  policyErrorMessage.classList.toggle('isHidden');\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const elements = e.currentTarget.elements;\n  const elementsWithErrors = validateFields(elements, validationFields);\n  resetErrors(elements);\n  addErrorClass(elementsWithErrors);\n  const isPaymentTypeChosen = checkIfPaymentTypeChosen();\n  const isPolicyAgreed = checkIfPolicyAgreed();\n  const isAnyError = elementsWithErrors.length > 0;\n\n  if (!isPaymentTypeChosen) {\n    togglePaymentTypeErrorVisibility();\n  }\n  if (!isPolicyAgreed) {\n    togglePolicyErrorVisibility();\n  }\n  if (!isPaymentTypeChosen || isAnyError || !isPolicyAgreed) {\n    return;\n  }\n\n  setOrderDataObj(e.target);\n  resetFormFields(elements);\n  resetChosenPaymentType();\n  toggleModal(refsSubscr);\n}\n\nfunction onPaymentTypeBtnClick(e) {\n  const clickedButton = e.target.closest('button');\n  setPaymentTypeInOrderObj(clickedButton);\n  if (clickedButton.classList.contains('active')) return;\n  [...paymentBtnList].forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nfunction resetFormFields(elements) {\n  [...elements].forEach(element => {\n    if (\n      element.type === 'text' ||\n      element.type === 'email' ||\n      element.type === 'tel' ||\n      element.tagName === 'TEXTAREA'\n    ) {\n      element.value = '';\n    } else if (element.type === 'checkbox') {\n      element.checked = true;\n    }\n  });\n}\nfunction resetChosenPaymentType() {\n  [...paymentBtnList].forEach(button => {\n    button.classList.remove('active');\n  });\n}\n\nfunction setPaymentTypeInOrderObj(paymentBtn) {\n  const paymentType = paymentBtn.getAttribute('data-id');\n  userOrderData.userTypePayment = paymentType;\n}\n\nfunction setOrderDataObj(form) {\n  const formData = new FormData(form);\n  formData.forEach((value, key) => {\n    if (key.startsWith('user')) {\n      userOrderData[key] = value;\n    }\n  });\n  console.log('userOrderData: ', userOrderData);\n}\n","import { initializeModal } from './modal';\n\nexport const refsSubscr = {\n  name: 'subscription',\n  openModalBtn: document.querySelector('[data-subscription-modal-open]'),\n  closeModalBtn: document.querySelector('[data-subscription-modal-close]'),\n  modal: document.querySelector('[data-subscription-modal]'),\n  backdrop: document.querySelector('.backdrop--subscr'),\n};\n\ninitializeModal(refsSubscr);\n"],"names":["$2u430","parcelRequire","$d39b81b5e37ca29a$export$aa9b0c0080dbe389","refs","openModalBtn","addEventListener","$d39b81b5e37ca29a$export$313c6d35f75fc0e","closeModalBtn","e","stopPropagation","backdrop","target","document","body","classList","toggle","concat","name","modal","resetErrors","subscForm","elements","$8nrFW","$1cf185dc1d8d9889$export$ac2141f83bb6e17f","querySelector","$1cf185dc1d8d9889$var$paymentBtnList","querySelectorAll","$1cf185dc1d8d9889$var$paymentErrorMessage","$1cf185dc1d8d9889$var$policyErrorMessage","$1cf185dc1d8d9889$var$formInputList","preventDefault","currentTarget","elementsWithErrors","fieldNames","filter","fieldName","value","trim","map","$1cf185dc1d8d9889$var$validateFields","$1cf185dc1d8d9889$var$validationFields","$1cf185dc1d8d9889$export$16b70c0fc68d4705","forEach","element","add","$1cf185dc1d8d9889$var$addErrorClass","isPaymentTypeChosen","$parcel$interopDefault","some","btn","contains","isPolicyAgreed","checked","isAnyError","length","$1cf185dc1d8d9889$var$togglePaymentTypeErrorVisibility","form","FormData","key","startsWith","$1cf185dc1d8d9889$var$userOrderData","console","log","type","tagName","$1cf185dc1d8d9889$var$resetFormFields","button","remove","$ianEp","toggleModal","$1FpXB","refsSubscr","el","clickedButton","closest","paymentBtn","paymentType","getAttribute","userTypePayment","$1cf185dc1d8d9889$var$setPaymentTypeInOrderObj","$1cf185dc1d8d9889$var$onPaymentTypeBtnClick","$136dc1f1ad329322$export$6406821d17d9075f","initializeModal"],"version":3,"file":"faq.0556c91e.js.map"}