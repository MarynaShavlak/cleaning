{"mappings":"imBAAA,IAAAA,EAAAC,EAAA,S,uCAyBuBC,SAASC,iBAAiB,aAClCC,SAEf,SAA4BC,GAC1B,MAAMC,aACJA,EACAC,UAAAC,EAASC,UACTA,EAASC,aACTA,EAAYC,yBACZA,EAAwBC,aACxBA,EAAYC,aACZA,IACE,EAAAC,EAAAC,qBAAoBV,GACxB,IAAIW,EAAkB,IAAIC,KACtBC,EAA2B,IAAID,KAC/BE,GAAiB,EAAAC,EAAAC,0BAcrB,SAASC,KACP,EAAAtB,EAAAuB,8BAA6BlB,EAAeI,EAAWH,GA8LzD,SAA2CC,GACzC,MAAMiB,GAAO,EAAAV,EAAAW,2BAA0BlB,IACvC,EAAAP,EAAA0B,yBAAwBF,EAAM,mBAAoB,c,CA/LlDG,CAAkCnB,GAClCU,EAA2B,IAAID,KAAKD,GACpCY,EAAiBZ,GACjBa,EAAsBxB,EAAeG,E,CAEvC,SAASsB,EAAgBC,GACvB,MAAMC,GAAc,EAAAZ,EAAAa,mBAAkBF,EAAMG,OAAOC,QAAQC,MACrDC,GAAiB,IAAIpB,MAAOqB,mBAAmB,QAAS,CAC5DC,KAAM,UACNC,MAAO,UACPC,IAAK,YAGDC,EAAiB,IAAIzB,KAAKe,GAEhChB,EAAkB0B,EAIlB,GAFiCA,EADP,IAAIzB,KAAKoB,IAGH,EAAG,CACjC,MAAMM,GAAa,EAAAvB,EAAAwB,0BAAyBZ,GAC5Cb,EAAiBwB,GACC,EAAA7B,EAAA+B,qBAAoBrC,GAE5BsC,MAAQ,IAClB,EAAAC,EAAAC,mBAAkB,mBAClBnB,EAAsBxB,EAAeG,IACrC,EAAAR,EAAAuB,8BAA6BlB,EAAeI,EAAWH,E,EAI3D,SAASsB,EAAiBqB,GA+IxBvC,EAAawC,UAAY,GA7IzB,MAAMX,KAAEA,EAAIC,MAAEA,IAAU,EAAApB,EAAA+B,wBAAuBF,IA4HjD,SAA6BV,GAC3B,MAAMa,EAAYlC,EAAyBoB,mBAAmB,QAAS,CACrEE,MAAO,SAEHa,EACJD,EAAUE,OAAO,GAAGC,cAAgBH,EAAUI,MAAM,GACtD7C,EAAyB8C,YAAc,GAAGJ,KAAoBd,G,CAjI9DmB,CAAoBnB,GACpB,MAAMoB,gBAAEA,EAAeC,kBAAEA,IAAsB,EAAAxC,EAAAyC,uBAC7CtB,EACAC,GAEIsB,GAAyB,EAAA1C,EAAA2C,mBAAkBJ,GAC3CK,GAAqB,EAAA5C,EAAA6C,uBAAsB1B,EAAMC,GAEvD,IAAI0B,EAAmB,EACnBC,EAAaC,IAEjB,IAAK,IAAIC,EAAIP,EAAyB,EAAGO,GAAK,EAAGA,IAAK,CACpD,MACMC,EAAOC,EADDP,EAAqBK,EAAI,EACA,mBACrC,EAAArE,EAAAwE,eAAcL,EAAYG,E,CAG5B,KAAOJ,GAAoBN,EAAkBa,WAAW,CACtD,MAAMH,EAAOC,EAAmBL,EAAkB,kBAClD,EAAAlE,EAAAwE,eAAcL,EAAYG,GAC2B,IAA/BH,EAAWO,SAASC,UAExC,EAAA3E,EAAAwE,eAAc9D,EAAcyD,GAC5BA,EAAaC,KAEfF,G,CAGF,GADuBC,EAAWO,SAASC,OAAS,EAChC,CAClB,IAAK,IAAIN,EAAI,EAAGF,EAAWO,SAASC,OAAS,EAAGN,IAAK,CACnD,MAAMC,EAAOC,EAAmBF,EAAG,eACnC,EAAArE,EAAAwE,eAAcL,EAAYG,E,EAE5B,EAAAtE,EAAAwE,eAAc9D,EAAcyD,E,EA8BhC,SAASS,EAAaC,GACpB,MAAMpC,IAAEA,EAAGD,MAAEA,EAAKD,KAAEA,EAAIuC,eAAEA,EAAcC,UAAEA,EAASC,kBAAEA,GACnDH,EACIP,EAAOpE,SAAS+E,cAAc,MAC9BC,EAAU,C,UAAEH,E,kBAAWC,E,eAAmBF,GAKhD,OAnCF,SAAqBR,EAAM7B,GACzB6B,EAAKb,YAAchB,C,CA8BnB0C,CAAYb,EAAM7B,GA5BpB,SAA2B6B,GAAM7B,IAAEA,EAAGD,MAAEA,EAAKD,KAAEA,IAC7C+B,EAAKnC,QAAQC,KAAO,GAAGK,KAAOD,EAAQ,EAAI,IAAM,KAAKA,EAAQ,KAAKD,G,CA4BlE6C,CAAkBd,EAAM,C,IAAE7B,E,MAAKD,E,KAAOD,IAZxC,SAAoC+B,EAAMQ,GACnCA,GACHR,EAAKe,iBAAiB,QAASvD,E,CAWjCwD,CAA2BhB,EAAMQ,GA1BnC,SAAwBR,EAAMY,GAC5B,MAAMH,UAAEA,EAASC,kBAAEA,EAAiBF,eAAEA,GAAmBI,EACrDJ,GACFR,EAAKiB,UAAUC,IAAI,gBAGH,kBAAdT,GAAiCC,GACnCV,EAAKiB,UAAUC,IAAI,aAGrBlB,EAAKiB,UAAUC,IAAIT,E,CAiBnBU,CAAenB,EAAMY,GACdZ,C,CAGT,SAASC,EAAmB9B,EAAKsC,GAC/B,MAAMxC,KAAEA,EAAIC,MAAEA,IAAU,EAAApB,EAAA+B,wBAAuBjC,GACzCwE,EAAW,IAAIzE,KACrB,IAAI0E,EAEJ,GAAkB,mBAAdZ,EAAgC,CAClC,MAAMa,aAAEA,EAAYC,eAAEA,EAAcC,cAAEA,IAAkB,EAAA1E,EAAA2E,gBACtDtD,EACAD,EACAD,GAEFoD,EAAc,IAAI1E,KAAK6E,EAAeD,EAAiB,EAAGD,E,MACrD,GAAkB,kBAAdb,EAA+B,CACxC,MAAMa,aAAEA,IAAiB,EAAAxE,EAAA2E,gBAAetD,GACxCkD,EAAc,IAAI1E,KAAKsB,EAAMC,EAAOoD,E,MAC/B,GAAkB,eAAdb,EAA4B,CACrC,MAAMa,aAAEA,IAAiB,EAAAxE,EAAA2E,gBAAetD,EAAKD,EAAOD,GAGpDoD,EAAc,IAAI1E,KADS,KAAVuB,EAAeD,EAAO,EAAIA,EADf,KAAVC,EAAe,EAAIA,EAAQ,EAEDoD,E,CAG9C,MAAMd,GAAiB,EAAA1D,EAAA4E,mBAAkBL,EAAaD,GAChDV,EAgBR,SAAwBW,EAAaM,EAAiBxD,GACpD,MAAMyD,EACJP,EAAYQ,gBAAkBF,EAAgBE,cAC1CC,EAAeT,EAAYU,aAAeJ,EAAgBI,WAC1DC,EAAa7D,IAAQwD,EAAgBxB,UAE3C,OAD0ByB,GAAeE,GAAgBE,C,CArB/BC,CAAeZ,EAAa3E,EAAiByB,GAavE,OADamC,EATI,CACfnC,IAHmB+D,OAAOb,EAAYlB,WAAWgC,SAAS,EAAG,KAI7DjE,MAAOmD,EAAYU,WACnB9D,KAAMoD,EAAYQ,c,eAClBrB,E,UACAC,E,kBACAC,G,CAyBJ,SAASnD,EAAsB6E,EAAenG,IACjBmG,EAAcnB,UAAUoB,SAAS,cAE1DpG,EAAUuC,MAAQ,GAAG3B,I,CAQzB,SAASyF,EAAeC,GACtB3F,EAAyB4F,SACvB5F,EAAyBmF,WAAaQ,GAGxCjF,EAAiBV,E,CAGnB,SAASkD,IACP,OAAOlE,SAAS+E,cAAc,K,CAxMhCzE,EAAU6E,iBAAiB,QAAS/D,GACpChB,EAAa+E,iBAAiB,QAAS/D,GACvCd,EAAU6E,iBAAiB,QAAQ,MACjC,EAAArF,EAAA+G,iBAAgBvG,EAAWY,EAAA4F,YAAY,IAEzCpG,WAAcyE,iBAAiB,SAAS,KACtCuB,GAAe,EAAG,IAEpB/F,WAAcwE,iBAAiB,SAAS,KACtCuB,EAAe,EAAE,IAuMnBhF,EAAiBZ,E,yCC1PZ,SAASiG,IACd,MAAMC,EAAc,IAAIjG,KAIxB,MAAO,GAHKiG,EAAYzC,UAAU0C,WAAWV,SAAS,EAAG,SAC1CS,EAAYb,WAAa,GAAGc,WAAWV,SAAS,EAAG,QACrDS,EAAYf,e,CAIpB,SAASiB,EAAYC,GAC1B,MAEMC,EAFgBD,EAAYE,OAEND,MADX,uBAEjB,OAAIA,EACKA,EAAM,GAEN,I,CAIJ,SAASE,EAAkBpF,EAAMsD,GACtC,OAAOtD,EAAOsD,C,CAGT,SAAS+B,EAAkBC,GAChC,MAAMC,EAAQD,EAAWE,MAAM,MACxBnF,EAAKD,EAAOD,GAAQoF,EAE3B,MADsB,GAAGnF,KAASC,KAAOF,G,CAIpC,SAASsF,EAAyBH,GACvC,MAAMC,EAAQD,EAAWE,MAAM,MACxBpF,EAAOC,EAAKF,GAAQoF,EAE3B,MADsB,GAAGlF,KAAOD,KAASD,G,CAIpC,SAASuF,EAAkBnE,GAChC,IAAIG,EAAyBH,EAAgBoE,SAI7C,OAH+B,IAA3BjE,IACFA,EAAyB,GAEpBA,C,CAGF,SAASkE,EAAsBzF,EAAMC,GAC1C,OAAO,IAAIvB,KAAKsB,EAAMC,EAAO,GAAGiC,S,CAG3B,SAASwD,EAAuBC,GACrC,MAAM3F,EAAO2F,EAAI/B,cAEjB,MAAO,C,MADO+B,EAAI7B,W,KACF9D,E,CAGX,SAAS4F,EAAsB5F,EAAMC,GAG1C,MAAO,C,gBAFiB,IAAIvB,KAAKsB,EAAMC,EAAO,G,kBACpB,IAAIvB,KAAKsB,EAAMC,EAAQ,EAAG,G,CAI/C,SAAS4F,EAAe3F,EAAKD,EAAOD,GAKzC,MAAO,C,aAJcE,EAAM,GAAK,IAAIA,IAAQA,E,eACX,IAAVD,EAAc,GAAKA,E,cACV,IAAVA,EAAcD,EAAO,EAAIA,E,CAS1C,SAAS8F,EAAsBX,GACpC,MAAMY,EAAYZ,EAAWE,MAAM,KAEnC,IAAInF,EAAM8F,SAASD,EAAU,GAAI,IAC7B9F,EAAQ+F,SAASD,EAAU,GAAI,IAAM,EACrC/F,EAAOgG,SAASD,EAAU,GAAI,IAElC,OAAO,IAAIrH,KAAKsB,EAAMC,EAAOC,E,CAGxB,SAAS+F,EAAmBC,GAIjC,OADwBA,EAAQnG,mBAFjB,QACC,CAAEoG,QAAS,S,2tBCrF7B,IAAA1I,EAAAC,EAAA,S,uCAaA,MAAM0I,EAAc,CAClB,CAAElG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,MAC7B,CAAApG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,MAC7B,CAAApG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,MAC7B,CAAApG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,MAC7B,CAAApG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,MAC7B,CAAApG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,MAC7B,CAAApG,IAAK,KAAQmG,IAAK,KAAMC,IAAK,OAGN3I,SAASC,iBAAiB,qBAClCC,SAEnB,SAA8B0I,GAC5B,MAAMC,UACJA,EAAStI,UACTA,EAASuI,UACTA,EAASC,YACTA,EAAWC,WACXA,EAAUC,aACVA,EAAYC,eACZA,EACAC,UAAAC,IACE,EAAAxI,EAAAyI,uBAAsBT,GAE1B,IAAIU,GAAkB,EAAAzG,EAAA0G,oBAAmB,oBAAsB,CAC7DC,MAAO,KACPC,QAAS,MA0BX,SAASC,IACPJ,GAAkB,EAAAzG,EAAA0G,oBAAmB,oBAAsB,CACzDC,MAAO,KACPC,QAAS,MAEX,MACMjC,GADY,EAAA5G,EAAA+I,qBAAoBP,GACTxG,MAC7B,GAAM4E,EAAY,CAChBoC,EAAyBhB,GACzB,MAAMiB,QAAEA,EAAOC,QAAEA,GA6CrB,SAA2BtC,EAAYuC,GACrC,MAAMC,GAAa,EAAA9I,EAAA+I,uBAAsBzC,GACnC0C,GAAU,EAAAhJ,EAAAiJ,oBAAmBH,GAC7BI,EAAaL,EAAYM,MAAKC,GAAKA,EAAE/H,MAAQ2H,IAC7CL,EAAUxB,SAAS+B,EAAW1B,KAC9BoB,EAAUzB,SAAS+B,EAAWzB,KACpC,MAAO,C,QAAEkB,E,QAASC,E,CAnDaS,CAAkB/C,EAAYiB,IAyD/D,SAA0B+B,EAAmBX,EAASC,GACpD,MAAMW,EAAY,IAAID,EAAkBvK,iBAAiB,WAE9BwK,EAAUC,QAAOtG,IAC1C,MAAMxB,EAAQyF,SAASjE,EAAKuG,aAAa,YACzC,OAAO/H,EAAQiH,GAAWjH,EAAQkH,CAAO,IAGxB5J,SAAQkE,IACpBA,EAAKiB,UAAUoB,SAAS,cAC3BrC,EAAKiB,UAAUuF,OAAO,UACtBxG,EAAKiB,UAAUC,IAAI,Y,IAnErBuF,CAAiBjC,EAAmBiB,EAASC,GA0GjD,SAAkCgB,GAChC,MAAMC,EAAYD,EAAgBtB,MAC5BwB,EAAcF,EAAgBrB,QAC9BwB,EAAYrC,EAAkBsC,cAAc,uBAC5CC,EAAcvC,EAAkBsC,cACpC,yBAEFE,EAA0BH,EAAWF,GACrCK,EAA0BD,EAAaH,E,CAjHrCK,CAAyB/B,GAwB7B,SAA0BwB,GACxB,MAAMC,EAAYD,EAAgBtB,MAC5BwB,EAAcF,EAAgBrB,QAE9B6B,EAAkB1C,EAAkB3I,iBAAiB,UACrDsL,EAAoB3C,EAAkB3I,iBAAiB,YAEvDuL,EAAc,IAAIF,GAAiBjB,MACvCoB,GAAMA,EAAGd,aAAa,YAAcI,IAGhCW,EAAgB,IAAIH,GAAmBlB,MAC3CoB,GAAMA,EAAGd,aAAa,YAAcK,IAGtCW,EAAwBH,EAAaF,GACrCK,EAAwBD,EAAeH,E,CAvCrCK,CAAiBtC,IACjB,EAAAxJ,EAAAuB,8BAA6BuH,EAAmBrI,EAAWsI,GAiJ/D,SAAyCM,GACvC,MAAM7H,GAAO,EAAAV,EAAAiL,yBAAwB1C,IACrC,EAAArJ,EAAA0B,yBAAwBF,EAAM,WAAY,iB,CAlJxCwK,CAAgC1C,GAChC2C,EAAsBnD,EAAmBQ,E,MAEtBA,EA8CXxG,MAAQ,sC,CA1CpB,SAASoJ,EAAgBC,EAAGC,GAC1B,MAAMC,EAAiBF,EAAEjK,OAEzB,GADmBmK,EAAe9G,UAAUoB,SAAS,YACrC,OAChB,IAwEF,SAA+B0F,GAC7B,OACEA,EAAe9G,UAAUoB,SAAS,YACjC0F,EAAe9G,UAAUoB,SAAS,S,CA3EhC2F,CAAsBD,GAAiB,OAC5C,MAAME,EAAeC,EAAgBJ,GAErCP,EAAwBQ,EADPvD,EAAkB3I,iBAAiB,IAAIoM,MAExD,MAAME,EAAQ3D,EAAkBsC,cAAcgB,GACxCtJ,EAAQuJ,EAAelK,QAAQuK,GACrCpB,EAA0BmB,EAAO3J,GAgGnC,SAAyB6J,EAAU7J,GACjC,MAAM8J,EAAWJ,EAAgBG,GACjCnD,EAAgBoD,GAAY9J,GAC5B,EAAAC,EAAA8J,yBAAwB,kBAAmBrD,GAC3CyC,EAAsBnD,EAAmBQ,E,CAnGzCwD,CAAgBV,EAAetJ,E,CAkDjC,SAASgH,EAAyBY,GACd,IAAIA,EAAkBvK,iBAAiB,WAC/CC,SAAQkE,IAChBA,EAAKiB,UAAUuF,OAAO,WAAW,G,CAIrC,SAASmB,EAAsBvB,EAAmBrB,IAE7CqB,EAAkBnF,UAAUoB,SAAS,cAEtC0C,EAAUvG,MAAQ,GAAG0G,EAAgBE,WAAWF,EAAgBG,U,CAWpE,SAASkC,EAAwBQ,EAAgBU,GAC/C,IAAIA,GAAUC,KAAIC,GAChBA,IAAYZ,EA2BhB,SAAuBY,GACrBA,EAAQ1H,UAAUC,IAAI,S,CA3BhB0H,CAAcD,GA8BtB,SAAyBA,GACvBA,EAAQ1H,UAAUuF,OAAO,S,CA9BnBqC,CAAgBF,I,CAIxB,SAAS3B,EAA0BmB,EAAO3J,GACxC2J,EAAMvJ,UAAYJ,C,CA4BpB,SAAS0J,EAAgBG,GACvB,OAAOA,EAAS/E,MAAM,MAAM,E,CAG9B,SAASwF,EAAY/F,GACnB,MACMgG,EADgBhG,EAAYE,OACFD,MAAK,qBACrC,OAAO+F,EAAYA,EAAU,GAAK,I,CAGpC,SAASC,EAAkBC,EAAcC,IACpBD,EAAahI,UAAUoB,SAAS,cAEnD4G,EAAahI,UAAUuF,OAAO,YAC9B0C,EAAajI,UAAUC,IAAI,Y,EAnL7B,EAAAzC,EAAA8J,yBAAwB,kBAAmBrD,GAE3CF,EAAUjE,iBAAiB,QAASuE,GACpCb,EAAU1D,iBAAiB,QAASuE,GACpCN,EAAUjE,iBAAiB,QAAQ,MACjC,EAAArF,EAAA+G,iBAAgBuC,EAAW8D,EAAY,IAEzCpE,EAAU3D,iBAAiB,SAAS8G,GAClCD,EAAgBC,EAAG,yBAErBlD,EAAY5D,iBAAiB,SAAS8G,GACpCD,EAAgBC,EAAG,2BAErBhD,EAAa9D,iBAAiB,SAAS,IACrCiI,EAAkBrE,EAAaD,KAEjCE,EAAW7D,iBAAiB,SAAS,IACnCiI,EAAkBtE,EAAWC,KAE/BG,EAAe/D,iBAAiB,SAAS,KACvCyE,EAAyBhB,IACzB,EAAA9I,EAAAuB,8BAA6BuH,EAAmBrI,EAAWsI,EAAU,G,yCC/DzE,MAAM0E,EAAWvN,SAASkL,cAAc,qBAElCsC,EAAoBxN,SAASC,iBAAiB,0BAcpD,SAASwN,EAA4B5L,GACnC,MAAM6L,EAAgB7L,EAAMG,OACxBuL,IAE+B,KAA/BG,EAAc9K,MAAMyE,QACpBrH,SAAS2N,gBAAkBD,EAE3BH,EAASK,MAAMC,SAAW,SAE1BN,EAASK,MAAMC,SAAW,O,CArB3BC,OAAOC,UACVD,OAAOC,QAAU,WACfP,EAAkBtN,SAAQ,SAAUwN,GAClC,MAAMM,EAAe,IAAIC,OAAOC,KAAKC,OAAOC,aAAaV,GACzDM,EAAaK,YAAY,iBAAiB,KAC1BL,EAAaM,WAC3BZ,EAAca,aAAa,UAAWb,EAAc9K,MAAM,G,MAoBlE4K,EAAkBtN,SAAQ,SAAUwN,GAClCA,EAAcvI,iBAAiB,QAASsI,GACxCC,EAAcvI,iBAAiB,QAASsI,GACxCC,EAAcvI,iBAAiB,OAAQsI,GAEvCA,EAA4B,CAAEzL,OAAQ0L,G","sources":["src/js/modules/calendar.js","src/js/modules/dates.js","src/js/modules/time-picker.js","src/js/modules/location.js"],"sourcesContent":["import {\n  appendElement,\n  handleInputBlur,\n  setShedulerVisibilityOptions,\n  toggleClosestVisibility,\n} from './common';\nimport {\n  getCurrentDateAsString,\n  extractDate,\n  isDateBeforeToday,\n  convertDateFormat,\n  reverseConvertDateFormat,\n  calculateStartDay,\n  getLastDayOfPrevMonth,\n  getCurrentYearAndMonth,\n  getMonthBoundaryDates,\n  formatDateInfo,\n} from './dates';\nimport {\n  getCalendarElements,\n  getClosestTimeInput,\n  getClosestTimePickerBlock,\n} from './get-elements';\nimport { resetLocalStorage } from './local-storage';\n\nconst calendarBlocks = document.querySelectorAll('.calendar');\ncalendarBlocks.forEach(initializeCalendar);\n\nfunction initializeCalendar(calendarBlock) {\n  const {\n    calendarIcon,\n    dateInput,\n    sheduleEl,\n    calendarBody,\n    calendarHeadMonthAndYear,\n    prevMonthBtn,\n    nextMonthBtn,\n  } = getCalendarElements(calendarBlock);\n  let selectedDateObj = new Date();\n  let monthToShowInCalendarObj = new Date();\n  let orderDayString = getCurrentDateAsString();\n\n  dateInput.addEventListener('click', handleCalendar);\n  calendarIcon.addEventListener('click', handleCalendar);\n  dateInput.addEventListener('blur', () => {\n    handleInputBlur(dateInput, extractDate);\n  });\n  prevMonthBtn?.addEventListener('click', () => {\n    updateCalendar(-1);\n  });\n  nextMonthBtn?.addEventListener('click', () => {\n    updateCalendar(1);\n  });\n\n  function handleCalendar() {\n    setShedulerVisibilityOptions(calendarBlock, sheduleEl, calendarIcon);\n    toggleClosestTimePickerVisibility(dateInput);\n    monthToShowInCalendarObj = new Date(selectedDateObj);\n    generateCalendar(selectedDateObj);\n    setDateInputInterface(calendarBlock, dateInput);\n  }\n  function handleCellClick(event) {\n    const clickedDate = convertDateFormat(event.target.dataset.date);\n    const currentDateObj = new Date().toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    });\n\n    const clickedDateObj = new Date(clickedDate);\n\n    selectedDateObj = clickedDateObj;\n    const currentDateObjObj = new Date(currentDateObj);\n    const differenceInMilliseconds = clickedDateObj - currentDateObjObj;\n\n    if (differenceInMilliseconds >= 0) {\n      const chosenDate = reverseConvertDateFormat(clickedDate);\n      orderDayString = chosenDate;\n      const timeInput = getClosestTimeInput(dateInput);\n\n      timeInput.value = '';\n      resetLocalStorage('selectedTimeObj');\n      setDateInputInterface(calendarBlock, dateInput);\n      setShedulerVisibilityOptions(calendarBlock, sheduleEl, calendarIcon);\n    }\n  }\n\n  function generateCalendar(dateobj) {\n    clearCalendarData();\n    const { year, month } = getCurrentYearAndMonth(dateobj);\n    setMonthAndYearName(year);\n    const { firstDayOfMonth, lastDayOfMonthObj } = getMonthBoundaryDates(\n      year,\n      month\n    );\n    const initialNumberOfWeekDay = calculateStartDay(firstDayOfMonth);\n    const lastDayOfPrevMonth = getLastDayOfPrevMonth(year, month);\n\n    let currentDayNumber = 1;\n    let currentRow = createCalendarRow();\n\n    for (let i = initialNumberOfWeekDay - 1; i >= 1; i--) {\n      const day = lastDayOfPrevMonth - i + 1;\n      const cell = createCalendarCell(day, 'previous-month');\n      appendElement(currentRow, cell);\n    }\n\n    while (currentDayNumber <= lastDayOfMonthObj.getDate()) {\n      const cell = createCalendarCell(currentDayNumber, 'current-month');\n      appendElement(currentRow, cell);\n      const isWeekRowFull = currentRow.children.length === 7;\n      if (isWeekRowFull) {\n        appendElement(calendarBody, currentRow);\n        currentRow = createCalendarRow();\n      }\n      currentDayNumber++;\n    }\n    const isAnyEmptyCell = currentRow.children.length > 0;\n    if (isAnyEmptyCell) {\n      for (let i = 1; currentRow.children.length < 7; i++) {\n        const cell = createCalendarCell(i, 'next-month');\n        appendElement(currentRow, cell);\n      }\n      appendElement(calendarBody, currentRow);\n    }\n  }\n\n  function setCellText(cell, day) {\n    cell.textContent = day;\n  }\n  function setCellAttributes(cell, { day, month, year }) {\n    cell.dataset.date = `${day}/${month < 9 ? '0' : ''}${month + 1}/${year}`;\n  }\n\n  function addCellClasses(cell, options) {\n    const { monthType, isCellSelectedDay, isDisabledDate } = options;\n    if (isDisabledDate) {\n      cell.classList.add('disabled-day');\n    }\n\n    if (monthType === 'current-month' && isCellSelectedDay) {\n      cell.classList.add('order-day');\n    }\n\n    cell.classList.add(monthType);\n  }\n\n  function addClickEventIfNotDisabled(cell, isDisabledDate) {\n    if (!isDisabledDate) {\n      cell.addEventListener('click', handleCellClick);\n    }\n  }\n\n  function createCellEl(cellData) {\n    const { day, month, year, isDisabledDate, monthType, isCellSelectedDay } =\n      cellData;\n    const cell = document.createElement('td');\n    const options = { monthType, isCellSelectedDay, isDisabledDate };\n    setCellText(cell, day);\n    setCellAttributes(cell, { day, month, year });\n    addClickEventIfNotDisabled(cell, isDisabledDate);\n    addCellClasses(cell, options);\n    return cell;\n  }\n\n  function createCalendarCell(day, monthType) {\n    const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n    const todayObj = new Date();\n    let cellDateObj;\n\n    if (monthType === 'previous-month') {\n      const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n        day,\n        month,\n        year\n      );\n      cellDateObj = new Date(formattedYear, formattedMonth - 1, formattedDay);\n    } else if (monthType === 'current-month') {\n      const { formattedDay } = formatDateInfo(day);\n      cellDateObj = new Date(year, month, formattedDay);\n    } else if (monthType === 'next-month') {\n      const { formattedDay } = formatDateInfo(day, month, year);\n      const nextMonth = month === 11 ? 0 : month + 1;\n      const nextYear = month === 11 ? year + 1 : year;\n      cellDateObj = new Date(nextYear, nextMonth, formattedDay);\n    }\n\n    const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n    const isCellSelectedDay = isCellSelected(cellDateObj, selectedDateObj, day);\n    const formattedDay = String(cellDateObj.getDate()).padStart(2, '0');\n\n    const cellData = {\n      day: formattedDay,\n      month: cellDateObj.getMonth(),\n      year: cellDateObj.getFullYear(),\n      isDisabledDate,\n      monthType,\n      isCellSelectedDay,\n    };\n\n    const cell = createCellEl(cellData);\n    return cell;\n  }\n\n  function isCellSelected(cellDateObj, selectedDateObj, day) {\n    const isYearEqual =\n      cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n    const isMonthEqual = cellDateObj.getMonth() === selectedDateObj.getMonth();\n    const isDayEqual = day === selectedDateObj.getDate();\n    const isCellSelectedDay = isYearEqual && isMonthEqual && isDayEqual;\n    return isCellSelectedDay;\n  }\n\n  function setMonthAndYearName(year) {\n    const monthName = monthToShowInCalendarObj.toLocaleDateString('uk-UA', {\n      month: 'long',\n    });\n    const capitalizedMonth =\n      monthName.charAt(0).toUpperCase() + monthName.slice(1);\n    calendarHeadMonthAndYear.textContent = `${capitalizedMonth} ${year}`;\n  }\n\n  function setDateInputInterface(calendarBlock, dateInput) {\n    const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n    if (isCalendarVisible) {\n      dateInput.value = `${orderDayString}`;\n    }\n  }\n\n  function clearCalendarData() {\n    calendarBody.innerHTML = '';\n  }\n\n  function updateCalendar(monthOffset) {\n    monthToShowInCalendarObj.setMonth(\n      monthToShowInCalendarObj.getMonth() + monthOffset\n    );\n\n    generateCalendar(monthToShowInCalendarObj);\n  }\n\n  function createCalendarRow() {\n    return document.createElement('tr');\n  }\n\n  function toggleClosestTimePickerVisibility(dateInput) {\n    const wrap = getClosestTimePickerBlock(dateInput);\n    toggleClosestVisibility(wrap, 'time-picker-wrap', 'icon--clock');\n  }\n\n  generateCalendar(selectedDateObj);\n}\n","export function getCurrentDateAsString() {\n  const currentDate = new Date();\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nexport function extractDate(inputString) {\n  const trimmedString = inputString.trim();\n  const datePattern = /\\d{2}\\/\\d{2}\\/\\d{4}/;\n  const match = trimmedString.match(datePattern);\n  if (match) {\n    return match[0];\n  } else {\n    return null;\n  }\n}\n\nexport function isDateBeforeToday(date, todayObj) {\n  return date < todayObj;\n}\n\nexport function convertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [day, month, year] = parts;\n  const newDateString = `${month}/${day}/${year}`;\n  return newDateString;\n}\n\nexport function reverseConvertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [month, day, year] = parts;\n  const newDateString = `${day}/${month}/${year}`;\n  return newDateString;\n}\n\nexport function calculateStartDay(firstDayOfMonth) {\n  let initialNumberOfWeekDay = firstDayOfMonth.getDay();\n  if (initialNumberOfWeekDay === 0) {\n    initialNumberOfWeekDay = 7;\n  }\n  return initialNumberOfWeekDay;\n}\n\nexport function getLastDayOfPrevMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\nexport function getCurrentYearAndMonth(obj) {\n  const year = obj.getFullYear();\n  const month = obj.getMonth();\n  return { month, year };\n}\n\nexport function getMonthBoundaryDates(year, month) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonthObj = new Date(year, month + 1, 0);\n  return { firstDayOfMonth, lastDayOfMonthObj };\n}\n\nexport function formatDateInfo(day, month, year) {\n  const formattedDay = day < 10 ? `0${day}` : day;\n  const formattedMonth = month === 0 ? 12 : month;\n  const formattedYear = month === 0 ? year - 1 : year;\n\n  return {\n    formattedDay,\n    formattedMonth,\n    formattedYear,\n  };\n}\n\nexport function parseDateStringToDate(dateString) {\n  const dateParts = dateString.split('/');\n\n  var day = parseInt(dateParts[0], 10);\n  var month = parseInt(dateParts[1], 10) - 1;\n  var year = parseInt(dateParts[2], 10);\n\n  return new Date(year, month, day);\n}\n\nexport function getDayNameFromDate(dateObj) {\n  const locale = 'uk-UA';\n  const options = { weekday: 'short' };\n  const dayOfWeekString = dateObj.toLocaleDateString(locale, options);\n  return dayOfWeekString;\n}\n","import {\n  handleInputBlur,\n  setShedulerVisibilityOptions,\n  toggleClosestVisibility,\n} from './common';\nimport {\n  getTimePickerElements,\n  getClosestDateInput,\n  getClosestCalendarBlock,\n} from './get-elements';\nimport { parseDateStringToDate, getDayNameFromDate } from './dates';\nimport { storeDataInLocalStorage, getDataFromStorage } from './local-storage';\n\nconst workShedule = [\n  { day: 'пн', min: '07', max: '21' },\n  { day: 'вт', min: '07', max: '21' },\n  { day: 'ср', min: '07', max: '21' },\n  { day: 'чт', min: '07', max: '21' },\n  { day: 'пт', min: '07', max: '21' },\n  { day: 'сб', min: '10', max: '19' },\n  { day: 'нд', min: '10', max: '19' },\n];\n\nconst timePickerElements = document.querySelectorAll('.time-picker-wrap');\ntimePickerElements.forEach(initializeTimePicker);\n\nfunction initializeTimePicker(timePickerElement) {\n  const {\n    clockIcon,\n    sheduleEl,\n    hourTablo,\n    minuteTablo,\n    hourPicker,\n    minutePicker,\n    confirmTimeBtn,\n    timeInput,\n  } = getTimePickerElements(timePickerElement);\n\n  let selectedTimeObj = getDataFromStorage('selectedTimeObj') || {\n    hours: '15',\n    minutes: '00',\n  };\n  storeDataInLocalStorage('selectedTimeObj', selectedTimeObj);\n\n  timeInput.addEventListener('click', handleTimePicker);\n  clockIcon.addEventListener('click', handleTimePicker);\n  timeInput.addEventListener('blur', () => {\n    handleInputBlur(timeInput, extractTime);\n  });\n  hourTablo.addEventListener('click', e =>\n    onTimeCellClick(e, '.time-picker__hours')\n  );\n  minuteTablo.addEventListener('click', e =>\n    onTimeCellClick(e, '.time-picker__minutes')\n  );\n  minutePicker.addEventListener('click', () =>\n    togglePickerBlock(minuteTablo, hourTablo)\n  );\n  hourPicker.addEventListener('click', () =>\n    togglePickerBlock(hourTablo, minuteTablo)\n  );\n  confirmTimeBtn.addEventListener('click', () => {\n    resetDisabledPickerCells(timePickerElement);\n    setShedulerVisibilityOptions(timePickerElement, sheduleEl, clockIcon);\n  });\n\n  function handleTimePicker() {\n    selectedTimeObj = getDataFromStorage('selectedTimeObj') || {\n      hours: '15',\n      minutes: '00',\n    };\n    const dateInput = getClosestDateInput(timeInput);\n    const dateString = dateInput.value;\n    if (!!dateString) {\n      resetDisabledPickerCells(timePickerElement);\n      const { minHour, maxHour } = getMinAndMaxHours(dateString, workShedule);\n      disableHourCells(timePickerElement, minHour, maxHour);\n      updateFullTabloInterface(selectedTimeObj);\n      updateTimePicker(selectedTimeObj);\n      setShedulerVisibilityOptions(timePickerElement, sheduleEl, clockIcon);\n      toggleClosestCalendarVisibility(timeInput);\n      setTimeInputInterface(timePickerElement, timeInput);\n    } else {\n      showWarningMessage(timeInput);\n    }\n  }\n\n  function onTimeCellClick(e, blockSelector) {\n    const clickedElement = e.target;\n    const isDisabled = clickedElement.classList.contains('disabled');\n    if (isDisabled) return;\n    if (!validateClickedNumber(clickedElement)) return;\n    const partTimeName = getTimePartName(blockSelector);\n    const elements = timePickerElement.querySelectorAll(`.${partTimeName}`);\n    updateChosenPickerBlock(clickedElement, elements);\n    const block = timePickerElement.querySelector(blockSelector);\n    const value = clickedElement.dataset.id;\n    updateBlockTabloInterface(block, value);\n    updateTimeInput(blockSelector, value);\n  }\n\n  function updateTimePicker(selectedTimeObj) {\n    const orderHour = selectedTimeObj.hours;\n    const orderMinute = selectedTimeObj.minutes;\n\n    const allHourElements = timePickerElement.querySelectorAll('.hours');\n    const allMinuteElements = timePickerElement.querySelectorAll('.minutes');\n\n    const hourElement = [...allHourElements].find(\n      el => el.getAttribute('data-id') == orderHour\n    );\n\n    const minuteElement = [...allMinuteElements].find(\n      el => el.getAttribute('data-id') == orderMinute\n    );\n\n    updateChosenPickerBlock(hourElement, allHourElements);\n    updateChosenPickerBlock(minuteElement, allMinuteElements);\n  }\n\n  function getMinAndMaxHours(dateString, workShedule) {\n    const dateObject = parseDateStringToDate(dateString);\n    const dayName = getDayNameFromDate(dateObject);\n    const dayInfoObj = workShedule.find(d => d.day === dayName);\n    const minHour = parseInt(dayInfoObj.min);\n    const maxHour = parseInt(dayInfoObj.max);\n    return { minHour, maxHour };\n  }\n  function showWarningMessage(timeInput) {\n    timeInput.value = 'Оберіть спочатку дату для прибирання';\n  }\n\n  function disableHourCells(timePickerElement, minHour, maxHour) {\n    const hourCells = [...timePickerElement.querySelectorAll('.hours')];\n\n    const cellsToMakeDisable = hourCells.filter(cell => {\n      const value = parseInt(cell.getAttribute('data-id'));\n      return value < minHour || value > maxHour;\n    });\n\n    cellsToMakeDisable.forEach(cell => {\n      if (!cell.classList.contains('disabled')) {\n        cell.classList.remove('active');\n        cell.classList.add('disabled');\n      }\n    });\n  }\n\n  function resetDisabledPickerCells(timePickerElement) {\n    const hourCells = [...timePickerElement.querySelectorAll('.hours')];\n    hourCells.forEach(cell => {\n      cell.classList.remove('disabled');\n    });\n  }\n\n  function setTimeInputInterface(timePickerElement, timeInput) {\n    const isTimePickerVisible =\n      !timePickerElement.classList.contains('isHidden');\n    if (isTimePickerVisible) {\n      timeInput.value = `${selectedTimeObj.hours} : ${selectedTimeObj.minutes}`;\n    }\n  }\n\n  function validateClickedNumber(clickedElement) {\n    return (\n      clickedElement.classList.contains('number') &&\n      !clickedElement.classList.contains('active')\n    );\n  }\n\n  function updateChosenPickerBlock(clickedElement, elements) {\n    [...elements].map(element =>\n      element === clickedElement\n        ? selectElement(element)\n        : deselectElement(element)\n    );\n  }\n\n  function updateBlockTabloInterface(block, value) {\n    block.innerHTML = value;\n  }\n\n  function updateFullTabloInterface(selectedTimeObj) {\n    const orderHour = selectedTimeObj.hours;\n    const orderMinute = selectedTimeObj.minutes;\n    const blockHour = timePickerElement.querySelector('.time-picker__hours');\n    const blockMinute = timePickerElement.querySelector(\n      '.time-picker__minutes'\n    );\n    updateBlockTabloInterface(blockHour, orderHour);\n    updateBlockTabloInterface(blockMinute, orderMinute);\n  }\n\n  function updateTimeInput(selector, value) {\n    const partTime = getTimePartName(selector);\n    selectedTimeObj[partTime] = value;\n    storeDataInLocalStorage('selectedTimeObj', selectedTimeObj);\n    setTimeInputInterface(timePickerElement, timeInput);\n  }\n  function selectElement(element) {\n    element.classList.add('active');\n  }\n\n  function deselectElement(element) {\n    element.classList.remove('active');\n  }\n\n  function getTimePartName(selector) {\n    return selector.split('__')[1];\n  }\n\n  function extractTime(inputString) {\n    const trimmedString = inputString.trim();\n    const timeMatch = trimmedString.match(/\\d{2}\\s*:\\s*\\d{2}/);\n    return timeMatch ? timeMatch[0] : null;\n  }\n\n  function togglePickerBlock(pickerToShow, pickerToHide) {\n    const isVisible = !pickerToShow.classList.contains('isHidden');\n    if (isVisible) return;\n    pickerToShow.classList.remove('isHidden');\n    pickerToHide.classList.add('isHidden');\n  }\n\n  function toggleClosestCalendarVisibility(timeInput) {\n    const wrap = getClosestCalendarBlock(timeInput);\n    toggleClosestVisibility(wrap, 'calendar', 'icon--calendar');\n  }\n}\n","const backdrop = document.querySelector('.backdrop--subscr');\n\nconst locationInputList = document.querySelectorAll('.form__input--location');\n\nif (!window.initMap) {\n  window.initMap = function () {\n    locationInputList.forEach(function (locationInput) {\n      const autocomplete = new google.maps.places.Autocomplete(locationInput);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        locationInput.setAttribute('data-id', locationInput.value);\n      });\n    });\n  };\n}\n\nfunction handleInputFocusAndNotEmpty(event) {\n  const locationInput = event.target;\n  if (backdrop) {\n    if (\n      locationInput.value.trim() !== '' &&\n      document.activeElement === locationInput\n    ) {\n      backdrop.style.overflow = 'hidden';\n    } else {\n      backdrop.style.overflow = 'auto';\n    }\n  }\n}\n\nlocationInputList.forEach(function (locationInput) {\n  locationInput.addEventListener('input', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('focus', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('blur', handleInputFocusAndNotEmpty);\n\n  handleInputFocusAndNotEmpty({ target: locationInput });\n});\n"],"names":["$cKJBV","parcelRequire","document","querySelectorAll","forEach","calendarBlock1","calendarIcon","dateInput","dateInput1","sheduleEl","calendarBody","calendarHeadMonthAndYear","prevMonthBtn","nextMonthBtn","$8L0UI","getCalendarElements","selectedDateObj1","Date","monthToShowInCalendarObj","orderDayString","$gP56P","getCurrentDateAsString","handleCalendar","setShedulerVisibilityOptions","wrap","getClosestTimePickerBlock","toggleClosestVisibility","toggleClosestTimePickerVisibility","generateCalendar","setDateInputInterface","handleCellClick","event","clickedDate","convertDateFormat","target","dataset","date","currentDateObj","toLocaleDateString","year","month","day","clickedDateObj","chosenDate","reverseConvertDateFormat","getClosestTimeInput","value","$1PyR0","resetLocalStorage","dateobj","innerHTML","getCurrentYearAndMonth","monthName","capitalizedMonth","charAt","toUpperCase","slice","textContent","setMonthAndYearName","firstDayOfMonth","lastDayOfMonthObj","getMonthBoundaryDates","initialNumberOfWeekDay","calculateStartDay","lastDayOfPrevMonth","getLastDayOfPrevMonth","currentDayNumber","currentRow","createCalendarRow","i","cell","createCalendarCell","appendElement","getDate","children","length","createCellEl","cellData","isDisabledDate","monthType","isCellSelectedDay","createElement","options","setCellText","setCellAttributes","addEventListener","addClickEventIfNotDisabled","classList","add","addCellClasses","todayObj","cellDateObj","formattedDay","formattedMonth","formattedYear","formatDateInfo","isDateBeforeToday","selectedDateObj","isYearEqual","getFullYear","isMonthEqual","getMonth","isDayEqual","isCellSelected","String","padStart","calendarBlock","contains","updateCalendar","monthOffset","setMonth","handleInputBlur","extractDate","$c3f55f585b52852b$export$90c332d38f0433b1","currentDate","toString","$c3f55f585b52852b$export$22fa983d82ded8f8","inputString","match","trim","$c3f55f585b52852b$export$e797271039bd7c51","$c3f55f585b52852b$export$b7ffb0954a6650fe","dateString","parts","split","$c3f55f585b52852b$export$b69dcb7b429eae81","$c3f55f585b52852b$export$85183788230cd25b","getDay","$c3f55f585b52852b$export$4131c36df799e960","$c3f55f585b52852b$export$e722cbad0f685804","obj","$c3f55f585b52852b$export$830fcb1fdc42503","$c3f55f585b52852b$export$c3b67661558b2e73","$c3f55f585b52852b$export$8e6e2c74f0fe3fd0","dateParts","parseInt","$c3f55f585b52852b$export$3ef3aade8b3d4986","dateObj","weekday","$04c848f3f4a97aca$var$workShedule","min","max","timePickerElement1","clockIcon","hourTablo","minuteTablo","hourPicker","minutePicker","confirmTimeBtn","timeInput","timeInput1","getTimePickerElements","selectedTimeObj1","getDataFromStorage","hours","minutes","handleTimePicker","getClosestDateInput","resetDisabledPickerCells","minHour","maxHour","workShedule1","dateObject","parseDateStringToDate","dayName","getDayNameFromDate","dayInfoObj","find","d","getMinAndMaxHours","timePickerElement","hourCells","filter","getAttribute","remove","disableHourCells","selectedTimeObj","orderHour","orderMinute","blockHour","querySelector","blockMinute","updateBlockTabloInterface","updateFullTabloInterface","allHourElements","allMinuteElements","hourElement","el","minuteElement","updateChosenPickerBlock","updateTimePicker","getClosestCalendarBlock","toggleClosestCalendarVisibility","setTimeInputInterface","onTimeCellClick","e","blockSelector","clickedElement","validateClickedNumber","partTimeName","getTimePartName","block","id","selector","partTime","storeDataInLocalStorage","updateTimeInput","elements","map","element","selectElement","deselectElement","extractTime","timeMatch","togglePickerBlock","pickerToShow","pickerToHide","$ae410647f7bccdd5$var$backdrop","$ae410647f7bccdd5$var$locationInputList","$ae410647f7bccdd5$var$handleInputFocusAndNotEmpty","locationInput","activeElement","style","overflow","window","initMap","autocomplete","google","maps","places","Autocomplete","addListener","getPlace","setAttribute"],"version":3,"file":"calc-order.b13563ac.js.map"}