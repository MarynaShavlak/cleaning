{"mappings":"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","sources":["src/js/modules/calendar.js","src/js/modules/dates.js","src/js/modules/time-picker.js","src/js/modules/location.js"],"sourcesContent":["import { toggleIconActiveStyle, appendElement } from './common';\nimport {\n  getCurrentDateAsString,\n  extractDate,\n  isDateBeforeToday,\n  convertDateFormat,\n  reverseConvertDateFormat,\n  calculateStartDay,\n  getLastDayOfPrevMonth,\n  getCurrentYearAndMonth,\n  getMonthBoundaryDates,\n  formatDateInfo,\n} from './dates';\nconst calendarBlock = document.querySelector('.calendar');\nconst calendarBody = calendarBlock.querySelector('.calendar__body');\nconst calendarHeadMonthAndYear = calendarBlock.querySelector(\n  '.calendar__monthYear'\n);\nconst prevMonthBtn = calendarBlock.querySelector('.calendar__prevMonth-btn');\nconst nextMonthBtn = calendarBlock.querySelector('.calendar__nextMonth-btn');\nconst dateInput =\n  calendarBlock.previousElementSibling.querySelector('[name=\"userDate\"]');\nconst calendarIcon =\n  calendarBlock.previousElementSibling.querySelector('.icon--calendar');\n\nlet selectedDateObj = new Date();\nlet monthToShowInCalendarObj = new Date();\nlet orderDayString = getCurrentDateAsString();\n\ndateInput.addEventListener('click', () => {\n  toggleCalendarVisibility();\n  toggleIconActiveStyle(calendarIcon);\n  monthToShowInCalendarObj = new Date(selectedDateObj);\n  const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n  generateCalendar(selectedDateObj);\n  if (isCalendarVisible) {\n    setDateInputValue();\n  }\n});\n\ndateInput.addEventListener('blur', e => {\n  const trimmedValue = extractDate(e.target.value);\n  dateInput.value = trimmedValue;\n});\n\ncalendarIcon.addEventListener('click', e => {\n  toggleCalendarVisibility();\n  monthToShowInCalendarObj = new Date(selectedDateObj);\n  generateCalendar(selectedDateObj);\n  toggleIconActiveStyle(e.target);\n  const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n  if (isCalendarVisible) {\n    setDateInputValue();\n  }\n});\n\nprevMonthBtn?.addEventListener('click', () => {\n  updateCalendar(-1);\n});\n\nnextMonthBtn?.addEventListener('click', () => {\n  updateCalendar(1);\n});\n\nfunction setCellText(cell, day) {\n  cell.textContent = day;\n}\nfunction setCellAttributes(cell, { day, month, year }) {\n  cell.dataset.date = `${day}/${month < 9 ? '0' : ''}${month + 1}/${year}`;\n}\n\nfunction addCellClasses(cell, options) {\n  const { monthType, isCellSelectedDay, isDisabledDate } = options;\n  if (isDisabledDate) {\n    cell.classList.add('disabled-day');\n  }\n\n  if (monthType === 'current-month' && isCellSelectedDay) {\n    cell.classList.add('order-day');\n  }\n\n  cell.classList.add(monthType);\n}\n\nfunction addClickEventIfNotDisabled(cell, isDisabledDate) {\n  if (!isDisabledDate) {\n    cell.addEventListener('click', handleCellClick);\n  }\n}\n\nfunction createCellEl(cellData) {\n  const { day, month, year, isDisabledDate, monthType, isCellSelectedDay } =\n    cellData;\n  const cell = document.createElement('td');\n  const options = { monthType, isCellSelectedDay, isDisabledDate };\n  setCellText(cell, day);\n  setCellAttributes(cell, { day, month, year });\n  addClickEventIfNotDisabled(cell, isDisabledDate);\n  addCellClasses(cell, options);\n  return cell;\n}\n\nfunction createCalendarCell(day, monthType) {\n  const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n  const todayObj = new Date();\n  let cellDateObj;\n\n  if (monthType === 'previous-month') {\n    const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n      day,\n      month,\n      year\n    );\n    cellDateObj = new Date(formattedYear, formattedMonth - 1, formattedDay);\n  } else if (monthType === 'current-month') {\n    const { formattedDay } = formatDateInfo(day);\n    cellDateObj = new Date(year, month, formattedDay);\n  } else if (monthType === 'next-month') {\n    const { formattedDay } = formatDateInfo(day, month, year);\n    const nextMonth = month === 11 ? 0 : month + 1;\n    const nextYear = month === 11 ? year + 1 : year;\n    cellDateObj = new Date(nextYear, nextMonth, formattedDay);\n  }\n\n  const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n  const isCellSelectedDay = isCellSelected(cellDateObj, selectedDateObj, day);\n  const formattedDay = String(cellDateObj.getDate()).padStart(2, '0');\n\n  const cellData = {\n    day: formattedDay,\n    month: cellDateObj.getMonth(),\n    year: cellDateObj.getFullYear(),\n    isDisabledDate,\n    monthType,\n    isCellSelectedDay,\n  };\n\n  const cell = createCellEl(cellData);\n  return cell;\n}\n\nfunction isCellSelected(cellDateObj, selectedDateObj, day) {\n  const isYearEqual =\n    cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n  const isMonthEqual = cellDateObj.getMonth() === selectedDateObj.getMonth();\n  const isDayEqual = day === selectedDateObj.getDate();\n  const isCellSelectedDay = isYearEqual && isMonthEqual && isDayEqual;\n  return isCellSelectedDay;\n}\n\nfunction setMonthAndYearName(year) {\n  const monthName = monthToShowInCalendarObj.toLocaleDateString('uk-UA', {\n    month: 'long',\n  });\n  const capitalizedMonth =\n    monthName.charAt(0).toUpperCase() + monthName.slice(1);\n  calendarHeadMonthAndYear.textContent = `${capitalizedMonth} ${year}`;\n}\n\nfunction generateCalendar(dateobj) {\n  clearCalendarData();\n  const { year, month } = getCurrentYearAndMonth(dateobj);\n  setMonthAndYearName(year);\n  const { firstDayOfMonth, lastDayOfMonthObj } = getMonthBoundaryDates(\n    year,\n    month\n  );\n  const initialNumberOfWeekDay = calculateStartDay(firstDayOfMonth);\n  const lastDayOfPrevMonth = getLastDayOfPrevMonth(year, month);\n\n  let currentDayNumber = 1;\n  let currentRow = createCalendarRow();\n\n  for (let i = initialNumberOfWeekDay - 1; i >= 1; i--) {\n    const day = lastDayOfPrevMonth - i + 1;\n    const cell = createCalendarCell(day, 'previous-month');\n    appendElement(currentRow, cell);\n  }\n\n  while (currentDayNumber <= lastDayOfMonthObj.getDate()) {\n    const cell = createCalendarCell(currentDayNumber, 'current-month');\n    appendElement(currentRow, cell);\n    const isWeekRowFull = currentRow.children.length === 7;\n    if (isWeekRowFull) {\n      appendElement(calendarBody, currentRow);\n      currentRow = createCalendarRow();\n    }\n    currentDayNumber++;\n  }\n  const isAnyEmptyCell = currentRow.children.length > 0;\n  if (isAnyEmptyCell) {\n    for (let i = 1; currentRow.children.length < 7; i++) {\n      const cell = createCalendarCell(i, 'next-month');\n      appendElement(currentRow, cell);\n    }\n    appendElement(calendarBody, currentRow);\n  }\n}\n\nfunction handleCellClick(event) {\n  const clickedDate = convertDateFormat(event.target.dataset.date);\n  const currentDateObj = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const clickedDateObj = new Date(clickedDate);\n\n  selectedDateObj = clickedDateObj;\n  const currentDateObjObj = new Date(currentDateObj);\n  const differenceInMilliseconds = clickedDateObj - currentDateObjObj;\n\n  if (differenceInMilliseconds >= 0) {\n    const chosenDate = reverseConvertDateFormat(clickedDate);\n    orderDayString = chosenDate;\n    setDateInputValue();\n    toggleIconActiveStyle(calendarIcon);\n    toggleCalendarVisibility();\n  }\n}\n\nfunction setDateInputValue() {\n  dateInput.value = `${orderDayString}`;\n}\n\nfunction clearCalendarData() {\n  calendarBody.innerHTML = '';\n}\n\nfunction updateCalendar(monthOffset) {\n  monthToShowInCalendarObj.setMonth(\n    monthToShowInCalendarObj.getMonth() + monthOffset\n  );\n\n  generateCalendar(monthToShowInCalendarObj);\n}\n\nfunction toggleCalendarVisibility() {\n  calendarBlock.classList.toggle('isHidden');\n}\n\ngenerateCalendar(selectedDateObj);\n\n//____________\nfunction createCalendarRow() {\n  return document.createElement('tr');\n}\n","export function getCurrentDateAsString() {\n  const currentDate = new Date();\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nexport function extractDate(inputString) {\n  const trimmedString = inputString.trim();\n  const datePattern = /\\d{2}\\/\\d{2}\\/\\d{4}/;\n  const match = trimmedString.match(datePattern);\n  if (match) {\n    return match[0];\n  } else {\n    return null;\n  }\n}\n\nexport function isDateBeforeToday(date, todayObj) {\n  return date < todayObj;\n}\n\nexport function convertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [day, month, year] = parts;\n  const newDateString = `${month}/${day}/${year}`;\n  return newDateString;\n}\n\nexport function reverseConvertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [month, day, year] = parts;\n  const newDateString = `${day}/${month}/${year}`;\n  return newDateString;\n}\n\nexport function calculateStartDay(firstDayOfMonth) {\n  let initialNumberOfWeekDay = firstDayOfMonth.getDay();\n  if (initialNumberOfWeekDay === 0) {\n    initialNumberOfWeekDay = 7;\n  }\n  return initialNumberOfWeekDay;\n}\n\nexport function getLastDayOfPrevMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\nexport function getCurrentYearAndMonth(obj) {\n  const year = obj.getFullYear();\n  const month = obj.getMonth();\n  return { month, year };\n}\n\nexport function getMonthBoundaryDates(year, month) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonthObj = new Date(year, month + 1, 0);\n  return { firstDayOfMonth, lastDayOfMonthObj };\n}\n\nexport function formatDateInfo(day, month, year) {\n  const formattedDay = day < 10 ? `0${day}` : day;\n  const formattedMonth = month === 0 ? 12 : month;\n  const formattedYear = month === 0 ? year - 1 : year;\n\n  return {\n    formattedDay,\n    formattedMonth,\n    formattedYear,\n  };\n}\n","import { toggleIconActiveStyle } from './common';\nconst selectedTimeObj = { hours: '20', minutes: '00' };\nconst timePickerElement = document.querySelector('.time-picker-wrap');\nconst clockIcon = document.querySelector('.icon--clock');\nconst hourTablo = document.querySelector('.tablo--hours');\nconst minuteTablo = document.querySelector('.tablo--minutes');\nconst hourPicker = document.querySelector('.time-picker__hours');\nconst minutePicker = document.querySelector('.time-picker__minutes');\nconst timePickerBtn = document.querySelector('.time-picker__btn');\nconst timeInput = document.querySelector('[name=\"userTime\"]');\ntimeInput.addEventListener('click', () => {\n  toggleIconActiveStyle(clockIcon);\n  toggleTimePickerVisibility();\n  const isTimePickerVisible = !timePickerElement.classList.contains('isHidden');\n  if (isTimePickerVisible) {\n    setTimeInputValue();\n  }\n});\ntimeInput.addEventListener('blur', e => {\n  const trimmedValue = extractTime(e.target.value);\n  timeInput.value = trimmedValue;\n});\n\nfunction setTimeInputValue() {\n  timeInput.value = `${selectedTimeObj.hours} : ${selectedTimeObj.minutes}`;\n}\n\nhourTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__hours')\n);\nminuteTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__minutes')\n);\nminutePicker.addEventListener('click', () =>\n  toggleTablo(minuteTablo, hourTablo)\n);\nhourPicker.addEventListener('click', () => toggleTablo(hourTablo, minuteTablo));\n\nfunction onTimeCellClick(e, blockSelector) {\n  const clickedElement = e.target;\n  if (!validateClickedNumber(clickedElement)) return;\n  const partTimeName = getTimePartName(blockSelector);\n  const elements = document.querySelectorAll(`.${partTimeName}`);\n  updateTimePickerTablo(clickedElement, elements);\n  const block = document.querySelector(blockSelector);\n  const value = clickedElement.dataset.id;\n  updateTimePickerBlock(block, value);\n  updateTimeInput(blockSelector, value);\n}\n\nfunction validateClickedNumber(clickedElement) {\n  return (\n    clickedElement.classList.contains('number') &&\n    !clickedElement.classList.contains('active')\n  );\n}\n\nfunction updateTimePickerTablo(clickedElement, elements) {\n  [...elements].map(element =>\n    element === clickedElement\n      ? selectElement(element)\n      : deselectElement(element)\n  );\n}\n\nfunction selectElement(element) {\n  element.classList.add('active');\n}\n\nfunction deselectElement(element) {\n  element.classList.remove('active');\n}\n\nfunction updateTimePickerBlock(block, value) {\n  block.innerHTML = value;\n}\n\nfunction toggleTablo(tabloToShow, tabloToHide) {\n  const isVisible = !tabloToShow.classList.contains('isHidden');\n  if (isVisible) return;\n  tabloToShow.classList.remove('isHidden');\n  tabloToHide.classList.add('isHidden');\n}\n\nclockIcon.addEventListener('click', e => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(e.target);\n});\n\ntimePickerBtn.addEventListener('click', () => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(clockIcon);\n});\n\nfunction toggleTimePickerVisibility() {\n  timePickerElement.classList.toggle('isHidden');\n}\n\nfunction updateTimeInput(selector, value) {\n  const partTime = getTimePartName(selector);\n  selectedTimeObj[partTime] = value;\n  setTimeInputValue();\n}\n\nfunction getTimePartName(selector) {\n  return selector.split('__')[1];\n}\n\nfunction extractTime(inputString) {\n  const trimmedString = inputString.trim();\n  const timeMatch = trimmedString.match(/\\d{2}\\s*:\\s*\\d{2}/);\n  return timeMatch ? timeMatch[0] : null;\n}\n","const backdrop = document.querySelector('.backdrop--subscr');\n\nconst locationInputList = document.querySelectorAll('.form__input--location');\n\nif (!window.initMap) {\n  window.initMap = function () {\n    locationInputList.forEach(function (locationInput) {\n      const autocomplete = new google.maps.places.Autocomplete(locationInput);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        locationInput.setAttribute('data-id', locationInput.value);\n      });\n    });\n  };\n}\n\nfunction handleInputFocusAndNotEmpty(event) {\n  const locationInput = event.target;\n  if (backdrop) {\n    if (\n      locationInput.value.trim() !== '' &&\n      document.activeElement === locationInput\n    ) {\n      backdrop.style.overflow = 'hidden';\n    } else {\n      backdrop.style.overflow = 'auto';\n    }\n  }\n}\n\nlocationInputList.forEach(function (locationInput) {\n  locationInput.addEventListener('input', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('focus', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('blur', handleInputFocusAndNotEmpty);\n\n  handleInputFocusAndNotEmpty({ target: locationInput });\n});\n"],"names":["$cKJBV","parcelRequire","$cc3f9602dc71fc91$var$calendarBlock","document","querySelector","$cc3f9602dc71fc91$var$calendarBody","$cc3f9602dc71fc91$var$calendarHeadMonthAndYear","$cc3f9602dc71fc91$var$prevMonthBtn","$cc3f9602dc71fc91$var$nextMonthBtn","$cc3f9602dc71fc91$var$dateInput","previousElementSibling","$cc3f9602dc71fc91$var$calendarIcon","$cc3f9602dc71fc91$var$selectedDateObj","Date","$cc3f9602dc71fc91$var$monthToShowInCalendarObj","$cc3f9602dc71fc91$var$orderDayString","$gP56P","getCurrentDateAsString","$cc3f9602dc71fc91$var$createCellEl","cellData","day","month","year","isDisabledDate","monthType","isCellSelectedDay","cell","createElement","options","textContent","$cc3f9602dc71fc91$var$setCellText","dataset","date","$cc3f9602dc71fc91$var$setCellAttributes","addEventListener","$cc3f9602dc71fc91$var$handleCellClick","$cc3f9602dc71fc91$var$addClickEventIfNotDisabled","classList","add","$cc3f9602dc71fc91$var$addCellClasses","$cc3f9602dc71fc91$var$createCalendarCell","getCurrentYearAndMonth","todayObj","cellDateObj","formattedDay","formattedMonth","formattedYear","formatDateInfo","isDateBeforeToday","selectedDateObj1","isYearEqual","getFullYear","isMonthEqual","getMonth","isDayEqual","getDate","$cc3f9602dc71fc91$var$isCellSelected","String","padStart","$cc3f9602dc71fc91$var$generateCalendar","dateobj","innerHTML","monthName","toLocaleDateString","capitalizedMonth","charAt","toUpperCase","slice","$cc3f9602dc71fc91$var$setMonthAndYearName","firstDayOfMonth","lastDayOfMonthObj","getMonthBoundaryDates","initialNumberOfWeekDay","calculateStartDay","lastDayOfPrevMonth","getLastDayOfPrevMonth","currentDayNumber","currentRow","$cc3f9602dc71fc91$var$createCalendarRow","i","appendElement","children","length","event","clickedDate","convertDateFormat","target","currentDateObj","clickedDateObj","chosenDate","reverseConvertDateFormat","$cc3f9602dc71fc91$var$setDateInputValue","toggleIconActiveStyle","$cc3f9602dc71fc91$var$toggleCalendarVisibility","value","$cc3f9602dc71fc91$var$updateCalendar","monthOffset","setMonth","toggle","isCalendarVisible","contains","e","trimmedValue","extractDate","$c3f55f585b52852b$export$90c332d38f0433b1","currentDate","toString","$c3f55f585b52852b$export$22fa983d82ded8f8","inputString","match","trim","$c3f55f585b52852b$export$e797271039bd7c51","$c3f55f585b52852b$export$b7ffb0954a6650fe","dateString","parts","split","$c3f55f585b52852b$export$b69dcb7b429eae81","$c3f55f585b52852b$export$85183788230cd25b","getDay","$c3f55f585b52852b$export$4131c36df799e960","$c3f55f585b52852b$export$e722cbad0f685804","obj","$c3f55f585b52852b$export$830fcb1fdc42503","$c3f55f585b52852b$export$c3b67661558b2e73","$04c848f3f4a97aca$var$selectedTimeObj","hours","minutes","$04c848f3f4a97aca$var$timePickerElement","$04c848f3f4a97aca$var$clockIcon","$04c848f3f4a97aca$var$hourTablo","$04c848f3f4a97aca$var$minuteTablo","$04c848f3f4a97aca$var$hourPicker","$04c848f3f4a97aca$var$minutePicker","$04c848f3f4a97aca$var$timePickerBtn","$04c848f3f4a97aca$var$timeInput","$04c848f3f4a97aca$var$setTimeInputValue","$04c848f3f4a97aca$var$onTimeCellClick","blockSelector","clickedElement","$04c848f3f4a97aca$var$validateClickedNumber","partTimeName","$04c848f3f4a97aca$var$getTimePartName","elements","map","element","$04c848f3f4a97aca$var$selectElement","remove","$04c848f3f4a97aca$var$deselectElement","$04c848f3f4a97aca$var$updateTimePickerTablo","querySelectorAll","block","id","$04c848f3f4a97aca$var$updateTimePickerBlock","selector","partTime","$04c848f3f4a97aca$var$updateTimeInput","$04c848f3f4a97aca$var$toggleTablo","tabloToShow","tabloToHide","$04c848f3f4a97aca$var$toggleTimePickerVisibility","timeMatch","$04c848f3f4a97aca$var$extractTime","$ae410647f7bccdd5$var$backdrop","$ae410647f7bccdd5$var$locationInputList","$ae410647f7bccdd5$var$handleInputFocusAndNotEmpty","locationInput","activeElement","style","overflow","window","initMap","forEach","autocomplete","google","maps","places","Autocomplete","addListener","getPlace","setAttribute"],"version":3,"file":"calc-order.13420a7c.js.map"}