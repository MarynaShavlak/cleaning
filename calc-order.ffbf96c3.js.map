{"mappings":"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","sources":["src/js/modules/calendar.js","src/js/modules/dates.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","src/js/modules/time-picker.js","src/js/modules/location.js"],"sourcesContent":["import { toggleIconActiveStyle, appendElement } from './common';\nimport {\n  getCurrentDateAsString,\n  extractDate,\n  isDateBeforeToday,\n  convertDateFormat,\n  reverseConvertDateFormat,\n  calculateStartDay,\n  getLastDayOfPrevMonth,\n  getCurrentYearAndMonth,\n  getMonthBoundaryDates,\n  formatDateInfo,\n} from './dates';\n\nconst calendarBlocks = document.querySelectorAll('.calendar');\ncalendarBlocks.forEach(calendarBlock => {\n  const dateInput =\n    calendarBlock.parentElement.previousElementSibling.querySelector(\n      '[name=\"userDate\"]'\n    );\n  const calendarIcon =\n    calendarBlock.parentElement.previousElementSibling.querySelector(\n      '.icon--calendar'\n    );\n\n  const sheduleEl = calendarBlock.parentElement.querySelector('.work-shedule');\n  let selectedDateObj = new Date();\n  let monthToShowInCalendarObj = new Date();\n  let orderDayString = getCurrentDateAsString();\n\n  createCalendar(\n    calendarBlock,\n    dateInput,\n    calendarIcon,\n    sheduleEl,\n    selectedDateObj,\n    monthToShowInCalendarObj,\n    orderDayString\n  );\n});\n\nfunction createCalendar(\n  calendarBlock,\n  dateInput,\n  calendarIcon,\n  sheduleEl,\n  selectedDateObj,\n  monthToShowInCalendarObj,\n  orderDayString\n) {\n  const calendarBody = calendarBlock.querySelector('.calendar__body');\n  const calendarHeadMonthAndYear = calendarBlock.querySelector(\n    '.calendar__monthYear'\n  );\n  const prevMonthBtn = calendarBlock.querySelector('.calendar__prevMonth-btn');\n  const nextMonthBtn = calendarBlock.querySelector('.calendar__nextMonth-btn');\n  dateInput.addEventListener('click', () => {\n    toggleCalendarVisibility();\n    toggleSheduleVisibility();\n    toggleIconActiveStyle(calendarIcon);\n    monthToShowInCalendarObj = new Date(selectedDateObj);\n    const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n    generateCalendar(selectedDateObj);\n    if (isCalendarVisible) {\n      setDateInputValue();\n    }\n  });\n\n  dateInput.addEventListener('blur', e => {\n    const trimmedValue = extractDate(e.target.value);\n    dateInput.value = trimmedValue;\n  });\n\n  calendarIcon.addEventListener('click', e => {\n    toggleCalendarVisibility();\n    toggleSheduleVisibility();\n    monthToShowInCalendarObj = new Date(selectedDateObj);\n    generateCalendar(selectedDateObj);\n    toggleIconActiveStyle(e.target);\n    const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n    if (isCalendarVisible) {\n      setDateInputValue();\n    }\n  });\n\n  prevMonthBtn?.addEventListener('click', () => {\n    updateCalendar(-1);\n  });\n\n  nextMonthBtn?.addEventListener('click', () => {\n    updateCalendar(1);\n  });\n\n  function setCellText(cell, day) {\n    cell.textContent = day;\n  }\n  function setCellAttributes(cell, { day, month, year }) {\n    cell.dataset.date = `${day}/${month < 9 ? '0' : ''}${month + 1}/${year}`;\n  }\n\n  function addCellClasses(cell, options) {\n    const { monthType, isCellSelectedDay, isDisabledDate } = options;\n    if (isDisabledDate) {\n      cell.classList.add('disabled-day');\n    }\n\n    if (monthType === 'current-month' && isCellSelectedDay) {\n      cell.classList.add('order-day');\n    }\n\n    cell.classList.add(monthType);\n  }\n\n  function addClickEventIfNotDisabled(cell, isDisabledDate) {\n    if (!isDisabledDate) {\n      cell.addEventListener('click', handleCellClick);\n    }\n  }\n\n  function createCellEl(cellData) {\n    const { day, month, year, isDisabledDate, monthType, isCellSelectedDay } =\n      cellData;\n    const cell = document.createElement('td');\n    const options = { monthType, isCellSelectedDay, isDisabledDate };\n    setCellText(cell, day);\n    setCellAttributes(cell, { day, month, year });\n    addClickEventIfNotDisabled(cell, isDisabledDate);\n    addCellClasses(cell, options);\n    return cell;\n  }\n\n  function createCalendarCell(day, monthType) {\n    const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n    const todayObj = new Date();\n    let cellDateObj;\n\n    if (monthType === 'previous-month') {\n      const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n        day,\n        month,\n        year\n      );\n      cellDateObj = new Date(formattedYear, formattedMonth - 1, formattedDay);\n    } else if (monthType === 'current-month') {\n      const { formattedDay } = formatDateInfo(day);\n      cellDateObj = new Date(year, month, formattedDay);\n    } else if (monthType === 'next-month') {\n      const { formattedDay } = formatDateInfo(day, month, year);\n      const nextMonth = month === 11 ? 0 : month + 1;\n      const nextYear = month === 11 ? year + 1 : year;\n      cellDateObj = new Date(nextYear, nextMonth, formattedDay);\n    }\n\n    const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n    const isCellSelectedDay = isCellSelected(cellDateObj, selectedDateObj, day);\n    const formattedDay = String(cellDateObj.getDate()).padStart(2, '0');\n\n    const cellData = {\n      day: formattedDay,\n      month: cellDateObj.getMonth(),\n      year: cellDateObj.getFullYear(),\n      isDisabledDate,\n      monthType,\n      isCellSelectedDay,\n    };\n\n    const cell = createCellEl(cellData);\n    return cell;\n  }\n\n  function isCellSelected(cellDateObj, selectedDateObj, day) {\n    const isYearEqual =\n      cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n    const isMonthEqual = cellDateObj.getMonth() === selectedDateObj.getMonth();\n    const isDayEqual = day === selectedDateObj.getDate();\n    const isCellSelectedDay = isYearEqual && isMonthEqual && isDayEqual;\n    return isCellSelectedDay;\n  }\n\n  function setMonthAndYearName(year) {\n    const monthName = monthToShowInCalendarObj.toLocaleDateString('uk-UA', {\n      month: 'long',\n    });\n    const capitalizedMonth =\n      monthName.charAt(0).toUpperCase() + monthName.slice(1);\n    calendarHeadMonthAndYear.textContent = `${capitalizedMonth} ${year}`;\n  }\n\n  function generateCalendar(dateobj) {\n    clearCalendarData();\n    const { year, month } = getCurrentYearAndMonth(dateobj);\n    setMonthAndYearName(year);\n    const { firstDayOfMonth, lastDayOfMonthObj } = getMonthBoundaryDates(\n      year,\n      month\n    );\n    const initialNumberOfWeekDay = calculateStartDay(firstDayOfMonth);\n    const lastDayOfPrevMonth = getLastDayOfPrevMonth(year, month);\n\n    let currentDayNumber = 1;\n    let currentRow = createCalendarRow();\n\n    for (let i = initialNumberOfWeekDay - 1; i >= 1; i--) {\n      const day = lastDayOfPrevMonth - i + 1;\n      const cell = createCalendarCell(day, 'previous-month');\n      appendElement(currentRow, cell);\n    }\n\n    while (currentDayNumber <= lastDayOfMonthObj.getDate()) {\n      const cell = createCalendarCell(currentDayNumber, 'current-month');\n      appendElement(currentRow, cell);\n      const isWeekRowFull = currentRow.children.length === 7;\n      if (isWeekRowFull) {\n        appendElement(calendarBody, currentRow);\n        currentRow = createCalendarRow();\n      }\n      currentDayNumber++;\n    }\n    const isAnyEmptyCell = currentRow.children.length > 0;\n    if (isAnyEmptyCell) {\n      for (let i = 1; currentRow.children.length < 7; i++) {\n        const cell = createCalendarCell(i, 'next-month');\n        appendElement(currentRow, cell);\n      }\n      appendElement(calendarBody, currentRow);\n    }\n  }\n\n  function handleCellClick(event) {\n    const clickedDate = convertDateFormat(event.target.dataset.date);\n    const currentDateObj = new Date().toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n    });\n\n    const clickedDateObj = new Date(clickedDate);\n\n    selectedDateObj = clickedDateObj;\n    const currentDateObjObj = new Date(currentDateObj);\n    const differenceInMilliseconds = clickedDateObj - currentDateObjObj;\n\n    if (differenceInMilliseconds >= 0) {\n      const chosenDate = reverseConvertDateFormat(clickedDate);\n      orderDayString = chosenDate;\n      setDateInputValue();\n      toggleIconActiveStyle(calendarIcon);\n      toggleCalendarVisibility();\n      toggleSheduleVisibility();\n    }\n  }\n\n  function setDateInputValue() {\n    dateInput.value = `${orderDayString}`;\n  }\n\n  function clearCalendarData() {\n    calendarBody.innerHTML = '';\n  }\n\n  function updateCalendar(monthOffset) {\n    monthToShowInCalendarObj.setMonth(\n      monthToShowInCalendarObj.getMonth() + monthOffset\n    );\n\n    generateCalendar(monthToShowInCalendarObj);\n  }\n\n  function toggleCalendarVisibility() {\n    calendarBlock.classList.toggle('isHidden');\n  }\n  function toggleSheduleVisibility() {\n    sheduleEl.classList.toggle('isHidden');\n  }\n\n  function createCalendarRow() {\n    return document.createElement('tr');\n  }\n\n  generateCalendar(selectedDateObj);\n}\n","export function getCurrentDateAsString() {\n  const currentDate = new Date();\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nexport function extractDate(inputString) {\n  const trimmedString = inputString.trim();\n  const datePattern = /\\d{2}\\/\\d{2}\\/\\d{4}/;\n  const match = trimmedString.match(datePattern);\n  if (match) {\n    return match[0];\n  } else {\n    return null;\n  }\n}\n\nexport function isDateBeforeToday(date, todayObj) {\n  return date < todayObj;\n}\n\nexport function convertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [day, month, year] = parts;\n  const newDateString = `${month}/${day}/${year}`;\n  return newDateString;\n}\n\nexport function reverseConvertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [month, day, year] = parts;\n  const newDateString = `${day}/${month}/${year}`;\n  return newDateString;\n}\n\nexport function calculateStartDay(firstDayOfMonth) {\n  let initialNumberOfWeekDay = firstDayOfMonth.getDay();\n  if (initialNumberOfWeekDay === 0) {\n    initialNumberOfWeekDay = 7;\n  }\n  return initialNumberOfWeekDay;\n}\n\nexport function getLastDayOfPrevMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\nexport function getCurrentYearAndMonth(obj) {\n  const year = obj.getFullYear();\n  const month = obj.getMonth();\n  return { month, year };\n}\n\nexport function getMonthBoundaryDates(year, month) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonthObj = new Date(year, month + 1, 0);\n  return { firstDayOfMonth, lastDayOfMonthObj };\n}\n\nexport function formatDateInfo(day, month, year) {\n  const formattedDay = day < 10 ? `0${day}` : day;\n  const formattedMonth = month === 0 ? 12 : month;\n  const formattedYear = month === 0 ? year - 1 : year;\n\n  return {\n    formattedDay,\n    formattedMonth,\n    formattedYear,\n  };\n}\n\nexport function parseDateStringToDate(dateString) {\n  const dateParts = dateString.split('/');\n\n  var day = parseInt(dateParts[0], 10);\n  var month = parseInt(dateParts[1], 10) - 1;\n  var year = parseInt(dateParts[2], 10);\n\n  return new Date(year, month, day);\n}\n\nexport function getDayNameFromDate(dateObj) {\n  const locale = 'uk-UA';\n  const options = { weekday: 'short' };\n  const dayOfWeekString = dateObj.toLocaleDateString(locale, options);\n  return dayOfWeekString;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import { toggleIconActiveStyle } from './common';\nimport { parseDateStringToDate, getDayNameFromDate } from './dates';\n\nconst workShedule = [\n  { day: 'пн', start: '07', finish: '21' },\n  { day: 'вт', start: '07', finish: '21' },\n  { day: 'ср', start: '07', finish: '21' },\n  { day: 'чт', start: '07', finish: '21' },\n  { day: 'пт', start: '07', finish: '21' },\n  { day: 'сб', start: '10', finish: '19' },\n  { day: 'нд', start: '10', finish: '19' },\n];\n\nconst timePickerElements = document.querySelectorAll('.time-picker-wrap');\ntimePickerElements.forEach(element => {\n  initializeTimePicker(element);\n});\n\nfunction initializeTimePicker(timePickerElement) {\n  const {\n    clockIcon,\n    sheduleEl,\n    hourTablo,\n    minuteTablo,\n    hourPicker,\n    minutePicker,\n    timePickerBtn,\n    timeInput,\n  } = getTimePickerElements(timePickerElement);\n\n  const selectedTimeObj = { hours: '15', minutes: '00' };\n\n  timeInput.addEventListener('click', () => {\n    const dateInput = getClosestDateInput(timeInput);\n    const isDateChosen = !!dateInput.value;\n    if (isDateChosen) {\n      const dateObject = parseDateStringToDate(dateInput.value);\n      console.log('dateObject: ', dateObject);\n      const dayName = getDayNameFromDate(dateObject);\n      console.log('dayName: ', dayName);\n\n      toggleIconActiveStyle(clockIcon);\n      toggleTimePickerVisibility();\n      toggleSheduleVisibility();\n      const isTimePickerVisible =\n        !timePickerElement.classList.contains('isHidden');\n      if (isTimePickerVisible) {\n        setTimeInputValue();\n      }\n    } else {\n      timeInput.value = 'Оберіть спочатку дату для прибирання';\n    }\n  });\n\n  timeInput.addEventListener('blur', e => {\n    const trimmedValue = extractTime(e.target.value);\n    timeInput.value = trimmedValue;\n  });\n\n  clockIcon.addEventListener('click', e => {\n    toggleTimePickerVisibility();\n    toggleSheduleVisibility();\n    toggleIconActiveStyle(e.target);\n  });\n\n  hourTablo.addEventListener('click', e =>\n    onTimeCellClick(e, '.time-picker__hours')\n  );\n\n  minuteTablo.addEventListener('click', e =>\n    onTimeCellClick(e, '.time-picker__minutes')\n  );\n\n  minutePicker.addEventListener('click', () =>\n    toggleTablo(minuteTablo, hourTablo)\n  );\n\n  hourPicker.addEventListener('click', () =>\n    toggleTablo(hourTablo, minuteTablo)\n  );\n\n  timePickerBtn.addEventListener('click', () => {\n    toggleTimePickerVisibility();\n    toggleSheduleVisibility();\n\n    toggleIconActiveStyle(clockIcon);\n  });\n\n  function getClosestDateInput(timeInput) {\n    return timeInput\n      .closest('li')\n      .previousElementSibling.querySelector('[name=\"userDate\"]');\n  }\n\n  function getTimePickerElements(el) {\n    const clockIcon =\n      el.parentElement.previousElementSibling.querySelector('.icon--clock');\n    const sheduleEl = el.parentElement.querySelector('.work-shedule');\n    const hourTablo = el.querySelector('.tablo--hours');\n    const minuteTablo = el.querySelector('.tablo--minutes');\n    const hourPicker = el.querySelector('.time-picker__hours');\n    const minutePicker = el.querySelector('.time-picker__minutes');\n    const timePickerBtn = el.querySelector('.time-picker__btn');\n    const timeInput =\n      el.parentElement.previousElementSibling.querySelector(\n        '[name=\"userTime\"]'\n      );\n    return {\n      clockIcon,\n      sheduleEl,\n      hourTablo,\n      minuteTablo,\n      hourPicker,\n      minutePicker,\n      timePickerBtn,\n      timeInput,\n    };\n  }\n\n  function setTimeInputValue() {\n    timeInput.value = `${selectedTimeObj.hours} : ${selectedTimeObj.minutes}`;\n  }\n\n  function onTimeCellClick(e, blockSelector) {\n    const clickedElement = e.target;\n    if (!validateClickedNumber(clickedElement)) return;\n    const partTimeName = getTimePartName(blockSelector);\n    const elements = timePickerElement.querySelectorAll(`.${partTimeName}`);\n    updateTimePickerTablo(clickedElement, elements);\n    const block = timePickerElement.querySelector(blockSelector);\n    const value = clickedElement.dataset.id;\n    updateTimePickerBlock(block, value);\n    updateTimeInput(blockSelector, value);\n  }\n  function toggleSheduleVisibility() {\n    sheduleEl.classList.toggle('isHidden');\n  }\n  function validateClickedNumber(clickedElement) {\n    return (\n      clickedElement.classList.contains('number') &&\n      !clickedElement.classList.contains('active')\n    );\n  }\n\n  function updateTimePickerTablo(clickedElement, elements) {\n    [...elements].map(element =>\n      element === clickedElement\n        ? selectElement(element)\n        : deselectElement(element)\n    );\n  }\n\n  function updateTimePickerBlock(block, value) {\n    block.innerHTML = value;\n  }\n  function toggleTablo(tabloToShow, tabloToHide) {\n    const isVisible = !tabloToShow.classList.contains('isHidden');\n    if (isVisible) return;\n    tabloToShow.classList.remove('isHidden');\n    tabloToHide.classList.add('isHidden');\n  }\n  function toggleTimePickerVisibility() {\n    timePickerElement.classList.toggle('isHidden');\n  }\n  function updateTimeInput(selector, value) {\n    const partTime = getTimePartName(selector);\n    selectedTimeObj[partTime] = value;\n    setTimeInputValue();\n  }\n  function selectElement(element) {\n    element.classList.add('active');\n  }\n\n  function deselectElement(element) {\n    element.classList.remove('active');\n  }\n\n  function getTimePartName(selector) {\n    return selector.split('__')[1];\n  }\n\n  function extractTime(inputString) {\n    const trimmedString = inputString.trim();\n    const timeMatch = trimmedString.match(/\\d{2}\\s*:\\s*\\d{2}/);\n    return timeMatch ? timeMatch[0] : null;\n  }\n}\n","const backdrop = document.querySelector('.backdrop--subscr');\n\nconst locationInputList = document.querySelectorAll('.form__input--location');\n\nif (!window.initMap) {\n  window.initMap = function () {\n    locationInputList.forEach(function (locationInput) {\n      const autocomplete = new google.maps.places.Autocomplete(locationInput);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        locationInput.setAttribute('data-id', locationInput.value);\n      });\n    });\n  };\n}\n\nfunction handleInputFocusAndNotEmpty(event) {\n  const locationInput = event.target;\n  if (backdrop) {\n    if (\n      locationInput.value.trim() !== '' &&\n      document.activeElement === locationInput\n    ) {\n      backdrop.style.overflow = 'hidden';\n    } else {\n      backdrop.style.overflow = 'auto';\n    }\n  }\n}\n\nlocationInputList.forEach(function (locationInput) {\n  locationInput.addEventListener('input', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('focus', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('blur', handleInputFocusAndNotEmpty);\n\n  handleInputFocusAndNotEmpty({ target: locationInput });\n});\n"],"names":["$6bPr4","parcelRequire","document","querySelectorAll","forEach","calendarBlock","dateInput","parentElement","previousElementSibling","querySelector","calendarIcon","sheduleEl","selectedDateObj1","monthToShowInCalendarObj","orderDayString","calendarBody","calendarHeadMonthAndYear","prevMonthBtn","nextMonthBtn","setCellText","cell","day","textContent","setCellAttributes","param","month","year","dataset","date","concat","addCellClasses","options","monthType","isCellSelectedDay","isDisabledDate","classList","add","addClickEventIfNotDisabled","addEventListener","handleCellClick","createCellEl","cellData","createElement","createCalendarCell","cellDateObj","ref","$5e53d","getCurrentYearAndMonth","todayObj","Date","ref1","formatDateInfo","formattedDay","formattedMonth","formattedYear","formattedDay1","formattedDay2","isDateBeforeToday","isCellSelected","String","getDate","padStart","getMonth","getFullYear","selectedDateObj","isYearEqual","isMonthEqual","isDayEqual","setMonthAndYearName","monthName","toLocaleDateString","capitalizedMonth","charAt","toUpperCase","slice","generateCalendar","dateobj","clearCalendarData","ref2","getMonthBoundaryDates","firstDayOfMonth","lastDayOfMonthObj","initialNumberOfWeekDay","calculateStartDay","lastDayOfPrevMonth","getLastDayOfPrevMonth","currentDayNumber","currentRow","createCalendarRow","i","appendElement","cell1","children","length","i1","cell2","event","clickedDate","convertDateFormat","target","currentDateObj","clickedDateObj","chosenDate","reverseConvertDateFormat","setDateInputValue","toggleIconActiveStyle","toggleCalendarVisibility","toggleSheduleVisibility","value","innerHTML","updateCalendar","monthOffset","setMonth","toggle","isCalendarVisible","contains","e","trimmedValue","extractDate","$971ae0663c4be7b9$var$createCalendar","getCurrentDateAsString","$1t1Wn","$3ce22d8fad9eb717$export$90c332d38f0433b1","currentDate","toString","$3ce22d8fad9eb717$export$22fa983d82ded8f8","inputString","match","trim","$3ce22d8fad9eb717$export$e797271039bd7c51","$3ce22d8fad9eb717$export$b7ffb0954a6650fe","dateString","parts","split","_parts","$parcel$interopDefault","$3ce22d8fad9eb717$export$b69dcb7b429eae81","$3ce22d8fad9eb717$export$85183788230cd25b","getDay","$3ce22d8fad9eb717$export$4131c36df799e960","$3ce22d8fad9eb717$export$e722cbad0f685804","obj","$3ce22d8fad9eb717$export$830fcb1fdc42503","$3ce22d8fad9eb717$export$c3b67661558b2e73","$3ce22d8fad9eb717$export$8e6e2c74f0fe3fd0","dateParts","parseInt","$3ce22d8fad9eb717$export$3ef3aade8b3d4986","dateObj","weekday","Object","defineProperty","module","exports","default","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","__esModule","Array","isArray","TypeError","$8nrFW","element","timePickerElement","getTimePickerElements","clockIcon1","clockIcon","sheduleEl1","hourTablo1","hourTablo","minuteTablo1","minuteTablo","hourPicker1","hourPicker","minutePicker1","minutePicker","timePickerBtn1","timePickerBtn","timeInput1","timeInput","selectedTimeObj","hours","minutes","getClosestDateInput","closest","el","setTimeInputValue","onTimeCellClick","blockSelector","clickedElement","validateClickedNumber","partTimeName","getTimePartName","updateTimePickerTablo","block","id","updateTimePickerBlock","updateTimeInput","elements","map","selectElement","deselectElement","toggleTablo","tabloToShow","tabloToHide","remove","toggleTimePickerVisibility","selector","partTime","extractTime","timeMatch","dateObject","parseDateStringToDate","console","log","dayName","getDayNameFromDate","$5172f0630bff55f9$var$initializeTimePicker","$ffd652f9edf3c563$var$backdrop","$ffd652f9edf3c563$var$locationInputList","$ffd652f9edf3c563$var$handleInputFocusAndNotEmpty","locationInput","activeElement","style","overflow","window","initMap","autocomplete","google","maps","places","Autocomplete","addListener","getPlace","setAttribute"],"version":3,"file":"calc-order.ffbf96c3.js.map"}