{"mappings":"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","sources":["src/js/modules/calendar.js","src/js/modules/dates.js","src/js/modules/time-picker.js","src/js/modules/location.js"],"sourcesContent":["import { toggleIconActiveStyle, appendElement } from './common';\nimport {\n  getCurrentDateAsString,\n  extractDate,\n  isDateBeforeToday,\n  convertDateFormat,\n  reverseConvertDateFormat,\n  calculateStartDay,\n  getLastDayOfPrevMonth,\n  getCurrentYearAndMonth,\n  getMonthBoundaryDates,\n  formatDateInfo,\n} from './dates';\nconst calendarBlock = document.querySelector('.calendar');\nconst calendarBody = calendarBlock.querySelector('.calendar__body');\nconst calendarHeadMonthAndYear = calendarBlock.querySelector(\n  '.calendar__monthYear'\n);\nconst prevMonthBtn = calendarBlock.querySelector('.calendar__prevMonth-btn');\nconst nextMonthBtn = calendarBlock.querySelector('.calendar__nextMonth-btn');\nconst dateInput =\n  calendarBlock.previousElementSibling.querySelector('[name=\"userDate\"]');\nconst calendarIcon =\n  calendarBlock.previousElementSibling.querySelector('.icon--calendar');\n\nlet selectedDateObj = new Date();\nlet monthToShowInCalendarObj = new Date();\nlet orderDayString = getCurrentDateAsString();\n\ndateInput.addEventListener('click', () => {\n  toggleCalendarVisibility();\n  toggleIconActiveStyle(calendarIcon);\n  monthToShowInCalendarObj = new Date(selectedDateObj);\n  const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n  generateCalendar(selectedDateObj);\n  if (isCalendarVisible) {\n    setDateInputValue();\n  }\n});\n\ndateInput.addEventListener('blur', e => {\n  const trimmedValue = extractDate(e.target.value);\n  dateInput.value = trimmedValue;\n});\n\ncalendarIcon.addEventListener('click', e => {\n  toggleCalendarVisibility();\n  monthToShowInCalendarObj = new Date(selectedDateObj);\n  generateCalendar(selectedDateObj);\n  toggleIconActiveStyle(e.target);\n  const isCalendarVisible = !calendarBlock.classList.contains('isHidden');\n  if (isCalendarVisible) {\n    setDateInputValue();\n  }\n});\n\nprevMonthBtn?.addEventListener('click', () => {\n  updateCalendar(-1);\n});\n\nnextMonthBtn?.addEventListener('click', () => {\n  updateCalendar(1);\n});\n\n// function addCellClasses(cell, isDisabledDate, monthType, isToday) {\n//   cell.classList.add(monthType);\n//   if (isDisabledDate) {\n//     cell.classList.add('disabled-day');\n//   }\n//   if (monthType === 'current-month' && isToday) {\n//     cell.classList.add('order-day');\n//   }\n// }\n\n// function addCellClickEvent(cell, isDisabledDate) {\n//   if (!isDisabledDate) {\n//     cell.addEventListener('click', handleCellClick);\n//   }\n// }\nfunction setCellText(cell, day) {\n  cell.textContent = day;\n}\nfunction setCellAttributes(cell, { day, month, year }) {\n  cell.dataset.date = `${day}/${month < 9 ? '0' : ''}${month + 1}/${year}`;\n}\n\nfunction addCellClasses(cell, options) {\n  const { monthType, isCellSelectedDay, isDisabledDate } = options;\n  if (isDisabledDate) {\n    cell.classList.add('disabled-day');\n  }\n\n  if (monthType === 'current-month' && isCellSelectedDay) {\n    cell.classList.add('order-day');\n  }\n\n  cell.classList.add(monthType);\n}\n\nfunction addClickEventIfNotDisabled(cell, isDisabledDate) {\n  if (!isDisabledDate) {\n    cell.addEventListener('click', handleCellClick);\n  }\n}\n\nfunction createCellEl(cellData) {\n  const { day, month, year, isDisabledDate, monthType, isCellSelectedDay } =\n    cellData;\n  const cell = document.createElement('td');\n  const options = { monthType, isCellSelectedDay, isDisabledDate };\n  setCellText(cell, day);\n  setCellAttributes(cell, { day, month, year });\n  addClickEventIfNotDisabled(cell, isDisabledDate);\n  addCellClasses(cell, options);\n  return cell;\n}\n\nfunction createCalendarCell(day, monthType) {\n  const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n  const todayObj = new Date();\n  let cellDay;\n  let cellMonth;\n  let cellYear;\n  let cellDateObj;\n  if (monthType === 'previous-month') {\n    const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n      day,\n      month,\n      year\n    );\n    cellDay = formattedDay;\n    cellMonth = formattedMonth - 1;\n    cellYear = formattedYear;\n    cellDateObj = new Date(cellYear, cellMonth, cellDay);\n  } else if (monthType === 'current-month') {\n    const { formattedDay } = formatDateInfo(day);\n    cellDay = formattedDay;\n    cellMonth = month;\n    cellYear = year;\n    cellDateObj = new Date(cellYear, cellMonth, cellDay);\n  } else if (monthType === 'next-month') {\n    const { formattedDay } = formatDateInfo(day, month, year);\n    const formattedMonth = month === 11 ? 1 : month + 2;\n    const formattedYear = month === 11 ? year + 1 : year;\n    cellDay = formattedDay;\n    cellMonth = formattedMonth - 1;\n    cellYear = formattedYear;\n    cellDateObj = new Date(cellYear, cellMonth, cellDay);\n  }\n  const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n  const isCellSelectedDay = isCellSelected(cellDateObj, selectedDateObj, day);\n  const cellData = {\n    day: cellDay,\n    month: cellMonth,\n    year: cellYear,\n    isDisabledDate: isDisabledDate,\n    monthType: monthType,\n    isCellSelectedDay: isCellSelectedDay,\n  };\n  const cell = createCellEl(cellData);\n  return cell;\n}\n\nfunction isCellSelected(cellDateObj, selectedDateObj, day) {\n  const isYearEqual =\n    cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n  const isMonthEqual = cellDateObj.getMonth() === selectedDateObj.getMonth();\n  const isDayEqual = day === selectedDateObj.getDate();\n  const isCellSelectedDay = isYearEqual && isMonthEqual && isDayEqual;\n  return isCellSelectedDay;\n}\n\n// function createPreviousMonthCell(day) {\n//   return createCalendarCell(day, 'previous-month');\n// }\n\n// function createCurrentMonthCell(day) {\n//   return createCalendarCell(day, 'current-month');\n// }\n\n// function createNextMonthCell(day) {\n//   return createCalendarCell(day, 'next-month');\n// }\n\n// function addCellClasses(cell, isDisabledDate, monthType, isToday) {\n//   cell.classList.add(monthType);\n//   if (isDisabledDate) {\n//     cell.classList.add('disabled-day');\n//   }\n//   if (monthType === 'current-month' && isToday) {\n//     cell.classList.add('order-day');\n//   }\n// }\n\n// function addCellClickEvent(cell, isDisabledDate) {\n//   if (!isDisabledDate) {\n//     cell.addEventListener('click', handleCellClick);\n//   }\n// }\n\n// function createCellEl(fd, fm, y, isDisabledDate, monthType) {\n//   const cell = document.createElement('td');\n//   setCellText(cell, fd);\n//   setCellAttributes(cell, fd, fm, y);\n//   addCellClasses(cell, isDisabledDate, monthType);\n//   addCellClickEvent(cell, isDisabledDate);\n\n//   return cell;\n// }\n\n// function createPreviousMonthCell(day) {\n//   const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n//   const { formattedDay, formattedMonth, formattedYear } = formatDateInfo(\n//     day,\n//     month,\n//     year\n//   );\n//   const todayObj = new Date();\n//   const isDisabledDate = isDateBeforeToday(\n//     new Date(formattedYear, formattedMonth - 1, day),\n//     todayObj\n//   );\n//   const cell = createCellEl(\n//     formattedDay,\n//     formattedMonth - 1,\n//     formattedYear,\n//     isDisabledDate,\n//     'previous-month'\n//   );\n//   return cell;\n// }\n\n// function createCurrentMonthCell(day) {\n//   const { formattedDay } = formatDateInfo(day);\n//   const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n//   const todayObj = new Date();\n//   const cellDateObj = new Date(year, month, day);\n//   const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n//   const cell = createCellEl(\n//     formattedDay,\n//     month,\n//     year,\n//     isDisabledDate,\n//     'current-month'\n//   );\n//   const isYearEquel =\n//     cellDateObj.getFullYear() === selectedDateObj.getFullYear();\n//   const isMonthEquel = cellDateObj.getMonth() === selectedDateObj.getMonth();\n//   const isDayEquel = day === selectedDateObj.getDate();\n//   const isCellSelectedDay = isYearEquel && isMonthEquel && isDayEquel;\n//   addCellClasses(cell, isDisabledDate, 'current-month', isCellSelectedDay);\n//   return cell;\n// }\n\n// function createNextMonthCell(day) {\n//   const { year, month } = getCurrentYearAndMonth(monthToShowInCalendarObj);\n//   const { formattedDay } = formatDateInfo(day, month, year);\n//   const formattedMonth = month === 11 ? 1 : month + 2;\n//   const formattedYear = month === 11 ? year + 1 : year;\n//   const todayObj = new Date();\n//   const cellDateObj = new Date(formattedYear, formattedMonth - 1, day);\n//   const isDisabledDate = isDateBeforeToday(cellDateObj, todayObj);\n\n//   const isCellSelectedDay =\n//     cellDateObj.getFullYear() === selectedDateObj.getFullYear() &&\n//     cellDateObj.getMonth() === selectedDateObj.getMonth() &&\n//     day === selectedDateObj.getDate();\n//   const cell = createCellEl(\n//     formattedDay,\n//     formattedMonth - 1,\n//     formattedYear,\n//     isDisabledDate,\n//     'next-month'\n//   );\n//   addCellClasses(cell, isDisabledDate, 'next-month', isCellSelectedDay);\n//   return cell;\n// }\n\nfunction setMonthAndYearName(year) {\n  const monthName = monthToShowInCalendarObj.toLocaleDateString('uk-UA', {\n    month: 'long',\n  });\n  const capitalizedMonth =\n    monthName.charAt(0).toUpperCase() + monthName.slice(1);\n  calendarHeadMonthAndYear.textContent = `${capitalizedMonth} ${year}`;\n}\nfunction createCalendarRow() {\n  return document.createElement('tr');\n}\n\nfunction generateCalendar(dateobj) {\n  clearCalendarData();\n  const { year, month } = getCurrentYearAndMonth(dateobj);\n  setMonthAndYearName(year);\n  const { firstDayOfMonth, lastDayOfMonthObj } = getMonthBoundaryDates(\n    year,\n    month\n  );\n  const initialNumberOfWeekDay = calculateStartDay(firstDayOfMonth);\n  const lastDayOfPrevMonth = getLastDayOfPrevMonth(year, month);\n\n  let currentDayNumber = 1;\n  let currentRow = createCalendarRow();\n\n  for (let i = initialNumberOfWeekDay - 1; i >= 1; i--) {\n    const day = lastDayOfPrevMonth - i + 1;\n    const cell = createCalendarCell(day, 'previous-month');\n    appendElement(currentRow, cell);\n  }\n\n  while (currentDayNumber <= lastDayOfMonthObj.getDate()) {\n    const cell = createCalendarCell(currentDayNumber, 'current-month');\n    appendElement(currentRow, cell);\n    const isWeekRowFull = currentRow.children.length === 7;\n    if (isWeekRowFull) {\n      appendElement(calendarBody, currentRow);\n      currentRow = createCalendarRow();\n    }\n    currentDayNumber++;\n  }\n  const isAnyEmptyCell = currentRow.children.length > 0;\n  if (isAnyEmptyCell) {\n    for (let i = 1; currentRow.children.length < 7; i++) {\n      const cell = createCalendarCell(i, 'next-month');\n      appendElement(currentRow, cell);\n    }\n    appendElement(calendarBody, currentRow);\n  }\n}\n\nfunction handleCellClick(event) {\n  const clickedDate = convertDateFormat(event.target.dataset.date);\n  const currentDateObj = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const clickedDateObj = new Date(clickedDate);\n\n  selectedDateObj = clickedDateObj;\n  const currentDateObjObj = new Date(currentDateObj);\n  const differenceInMilliseconds = clickedDateObj - currentDateObjObj;\n\n  if (differenceInMilliseconds >= 0) {\n    const chosenDate = reverseConvertDateFormat(clickedDate);\n    orderDayString = chosenDate;\n    setDateInputValue();\n    toggleIconActiveStyle(calendarIcon);\n    toggleCalendarVisibility();\n  }\n}\n\nfunction setDateInputValue() {\n  dateInput.value = `${orderDayString}`;\n}\n\nfunction clearCalendarData() {\n  calendarBody.innerHTML = '';\n}\n\nfunction updateCalendar(monthOffset) {\n  monthToShowInCalendarObj.setMonth(\n    monthToShowInCalendarObj.getMonth() + monthOffset\n  );\n\n  generateCalendar(monthToShowInCalendarObj);\n}\n\nfunction toggleCalendarVisibility() {\n  calendarBlock.classList.toggle('isHidden');\n}\n\ngenerateCalendar(selectedDateObj);\n","export function getCurrentDateAsString() {\n  const currentDate = new Date();\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nexport function extractDate(inputString) {\n  const trimmedString = inputString.trim();\n  const datePattern = /\\d{2}\\/\\d{2}\\/\\d{4}/;\n  const match = trimmedString.match(datePattern);\n  if (match) {\n    return match[0];\n  } else {\n    return null;\n  }\n}\n\nexport function isDateBeforeToday(date, todayObj) {\n  return date < todayObj;\n}\n\nexport function convertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [day, month, year] = parts;\n  const newDateString = `${month}/${day}/${year}`;\n  return newDateString;\n}\n\nexport function reverseConvertDateFormat(dateString) {\n  const parts = dateString.split('/');\n  const [month, day, year] = parts;\n  const newDateString = `${day}/${month}/${year}`;\n  return newDateString;\n}\n\nexport function calculateStartDay(firstDayOfMonth) {\n  let initialNumberOfWeekDay = firstDayOfMonth.getDay();\n  if (initialNumberOfWeekDay === 0) {\n    initialNumberOfWeekDay = 7;\n  }\n  return initialNumberOfWeekDay;\n}\n\nexport function getLastDayOfPrevMonth(year, month) {\n  return new Date(year, month, 0).getDate();\n}\n\nexport function getCurrentYearAndMonth(obj) {\n  const year = obj.getFullYear();\n  const month = obj.getMonth();\n  return { month, year };\n}\n\nexport function getMonthBoundaryDates(year, month) {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonthObj = new Date(year, month + 1, 0);\n  return { firstDayOfMonth, lastDayOfMonthObj };\n}\n\nexport function formatDateInfo(day, month, year) {\n  const formattedDay = day < 10 ? `0${day}` : day;\n  const formattedMonth = month === 0 ? 12 : month;\n  const formattedYear = month === 0 ? year - 1 : year;\n\n  return {\n    formattedDay,\n    formattedMonth,\n    formattedYear,\n  };\n}\n","import { toggleIconActiveStyle } from './common';\nconst selectedTimeObj = { hours: '20', minutes: '00' };\nconst timePickerElement = document.querySelector('.time-picker-wrap');\nconst clockIcon = document.querySelector('.icon--clock');\nconst hourTablo = document.querySelector('.tablo--hours');\nconst minuteTablo = document.querySelector('.tablo--minutes');\nconst hourPicker = document.querySelector('.time-picker__hours');\nconst minutePicker = document.querySelector('.time-picker__minutes');\nconst timePickerBtn = document.querySelector('.time-picker__btn');\nconst timeInput = document.querySelector('[name=\"userTime\"]');\ntimeInput.addEventListener('click', () => {\n  toggleIconActiveStyle(clockIcon);\n  toggleTimePickerVisibility();\n  const isTimePickerVisible = !timePickerElement.classList.contains('isHidden');\n  if (isTimePickerVisible) {\n    setTimeInputValue();\n  }\n});\ntimeInput.addEventListener('blur', e => {\n  const trimmedValue = extractTime(e.target.value);\n  timeInput.value = trimmedValue;\n});\n\nfunction setTimeInputValue() {\n  timeInput.value = `${selectedTimeObj.hours} : ${selectedTimeObj.minutes}`;\n}\n\nhourTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__hours')\n);\nminuteTablo.addEventListener('click', e =>\n  onTimeCellClick(e, '.time-picker__minutes')\n);\nminutePicker.addEventListener('click', () =>\n  toggleTablo(minuteTablo, hourTablo)\n);\nhourPicker.addEventListener('click', () => toggleTablo(hourTablo, minuteTablo));\n\nfunction onTimeCellClick(e, blockSelector) {\n  const clickedElement = e.target;\n  if (!validateClickedNumber(clickedElement)) return;\n  const partTimeName = getTimePartName(blockSelector);\n  const elements = document.querySelectorAll(`.${partTimeName}`);\n  updateTimePickerTablo(clickedElement, elements);\n  const block = document.querySelector(blockSelector);\n  const value = clickedElement.dataset.id;\n  updateTimePickerBlock(block, value);\n  updateTimeInput(blockSelector, value);\n}\n\nfunction validateClickedNumber(clickedElement) {\n  return (\n    clickedElement.classList.contains('number') &&\n    !clickedElement.classList.contains('active')\n  );\n}\n\nfunction updateTimePickerTablo(clickedElement, elements) {\n  [...elements].map(element =>\n    element === clickedElement\n      ? selectElement(element)\n      : deselectElement(element)\n  );\n}\n\nfunction selectElement(element) {\n  element.classList.add('active');\n}\n\nfunction deselectElement(element) {\n  element.classList.remove('active');\n}\n\nfunction updateTimePickerBlock(block, value) {\n  block.innerHTML = value;\n}\n\nfunction toggleTablo(tabloToShow, tabloToHide) {\n  const isVisible = !tabloToShow.classList.contains('isHidden');\n  if (isVisible) return;\n  tabloToShow.classList.remove('isHidden');\n  tabloToHide.classList.add('isHidden');\n}\n\nclockIcon.addEventListener('click', e => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(e.target);\n});\n\ntimePickerBtn.addEventListener('click', () => {\n  toggleTimePickerVisibility();\n  toggleIconActiveStyle(clockIcon);\n});\n\nfunction toggleTimePickerVisibility() {\n  timePickerElement.classList.toggle('isHidden');\n}\n\nfunction updateTimeInput(selector, value) {\n  const partTime = getTimePartName(selector);\n  selectedTimeObj[partTime] = value;\n  setTimeInputValue();\n}\n\nfunction getTimePartName(selector) {\n  return selector.split('__')[1];\n}\n\nfunction extractTime(inputString) {\n  const trimmedString = inputString.trim();\n  const timeMatch = trimmedString.match(/\\d{2}\\s*:\\s*\\d{2}/);\n  return timeMatch ? timeMatch[0] : null;\n}\n","const backdrop = document.querySelector('.backdrop--subscr');\n\nconst locationInputList = document.querySelectorAll('.form__input--location');\n\nif (!window.initMap) {\n  window.initMap = function () {\n    locationInputList.forEach(function (locationInput) {\n      const autocomplete = new google.maps.places.Autocomplete(locationInput);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        locationInput.setAttribute('data-id', locationInput.value);\n      });\n    });\n  };\n}\n\nfunction handleInputFocusAndNotEmpty(event) {\n  const locationInput = event.target;\n  if (backdrop) {\n    if (\n      locationInput.value.trim() !== '' &&\n      document.activeElement === locationInput\n    ) {\n      backdrop.style.overflow = 'hidden';\n    } else {\n      backdrop.style.overflow = 'auto';\n    }\n  }\n}\n\nlocationInputList.forEach(function (locationInput) {\n  locationInput.addEventListener('input', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('focus', handleInputFocusAndNotEmpty);\n  locationInput.addEventListener('blur', handleInputFocusAndNotEmpty);\n\n  handleInputFocusAndNotEmpty({ target: locationInput });\n});\n"],"names":["$cKJBV","parcelRequire","$cc3f9602dc71fc91$var$calendarBlock","document","querySelector","$cc3f9602dc71fc91$var$calendarBody","$cc3f9602dc71fc91$var$calendarHeadMonthAndYear","$cc3f9602dc71fc91$var$prevMonthBtn","$cc3f9602dc71fc91$var$nextMonthBtn","$cc3f9602dc71fc91$var$dateInput","previousElementSibling","$cc3f9602dc71fc91$var$calendarIcon","$cc3f9602dc71fc91$var$selectedDateObj","Date","$cc3f9602dc71fc91$var$monthToShowInCalendarObj","$cc3f9602dc71fc91$var$orderDayString","$gP56P","getCurrentDateAsString","$cc3f9602dc71fc91$var$createCellEl","cellData","day","month","year","isDisabledDate","monthType","isCellSelectedDay","cell","createElement","options","textContent","$cc3f9602dc71fc91$var$setCellText","dataset","date","$cc3f9602dc71fc91$var$setCellAttributes","addEventListener","$cc3f9602dc71fc91$var$handleCellClick","$cc3f9602dc71fc91$var$addClickEventIfNotDisabled","classList","add","$cc3f9602dc71fc91$var$addCellClasses","$cc3f9602dc71fc91$var$createCalendarCell","getCurrentYearAndMonth","todayObj","cellDay","cellMonth","cellYear","cellDateObj","formattedDay","formattedMonth","formattedYear","formatDateInfo","isDateBeforeToday","selectedDateObj1","isYearEqual","getFullYear","isMonthEqual","getMonth","isDayEqual","getDate","$cc3f9602dc71fc91$var$isCellSelected","$cc3f9602dc71fc91$var$createCalendarRow","$cc3f9602dc71fc91$var$generateCalendar","dateobj","innerHTML","monthName","toLocaleDateString","capitalizedMonth","charAt","toUpperCase","slice","$cc3f9602dc71fc91$var$setMonthAndYearName","firstDayOfMonth","lastDayOfMonthObj","getMonthBoundaryDates","initialNumberOfWeekDay","calculateStartDay","lastDayOfPrevMonth","getLastDayOfPrevMonth","currentDayNumber","currentRow","i","appendElement","children","length","event","clickedDate","convertDateFormat","target","currentDateObj","clickedDateObj","chosenDate","reverseConvertDateFormat","$cc3f9602dc71fc91$var$setDateInputValue","toggleIconActiveStyle","$cc3f9602dc71fc91$var$toggleCalendarVisibility","value","$cc3f9602dc71fc91$var$updateCalendar","monthOffset","setMonth","toggle","isCalendarVisible","contains","e","trimmedValue","extractDate","$c3f55f585b52852b$export$90c332d38f0433b1","currentDate","toString","padStart","$c3f55f585b52852b$export$22fa983d82ded8f8","inputString","match","trim","$c3f55f585b52852b$export$e797271039bd7c51","$c3f55f585b52852b$export$b7ffb0954a6650fe","dateString","parts","split","$c3f55f585b52852b$export$b69dcb7b429eae81","$c3f55f585b52852b$export$85183788230cd25b","getDay","$c3f55f585b52852b$export$4131c36df799e960","$c3f55f585b52852b$export$e722cbad0f685804","obj","$c3f55f585b52852b$export$830fcb1fdc42503","$c3f55f585b52852b$export$c3b67661558b2e73","$04c848f3f4a97aca$var$selectedTimeObj","hours","minutes","$04c848f3f4a97aca$var$timePickerElement","$04c848f3f4a97aca$var$clockIcon","$04c848f3f4a97aca$var$hourTablo","$04c848f3f4a97aca$var$minuteTablo","$04c848f3f4a97aca$var$hourPicker","$04c848f3f4a97aca$var$minutePicker","$04c848f3f4a97aca$var$timePickerBtn","$04c848f3f4a97aca$var$timeInput","$04c848f3f4a97aca$var$setTimeInputValue","$04c848f3f4a97aca$var$onTimeCellClick","blockSelector","clickedElement","$04c848f3f4a97aca$var$validateClickedNumber","partTimeName","$04c848f3f4a97aca$var$getTimePartName","elements","map","element","$04c848f3f4a97aca$var$selectElement","remove","$04c848f3f4a97aca$var$deselectElement","$04c848f3f4a97aca$var$updateTimePickerTablo","querySelectorAll","block","id","$04c848f3f4a97aca$var$updateTimePickerBlock","selector","partTime","$04c848f3f4a97aca$var$updateTimeInput","$04c848f3f4a97aca$var$toggleTablo","tabloToShow","tabloToHide","$04c848f3f4a97aca$var$toggleTimePickerVisibility","timeMatch","$04c848f3f4a97aca$var$extractTime","$ae410647f7bccdd5$var$backdrop","$ae410647f7bccdd5$var$locationInputList","$ae410647f7bccdd5$var$handleInputFocusAndNotEmpty","locationInput","activeElement","style","overflow","window","initMap","forEach","autocomplete","google","maps","places","Autocomplete","addListener","getPlace","setAttribute"],"version":3,"file":"calc-order.1c4436a0.js.map"}