{"mappings":"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","sources":["src/js/modules/modal.js","src/js/modules/user-order-form.js","src/js/modules/subscr-modal.js"],"sourcesContent":["import { resetErrors } from './user-order-form';\nimport { subscForm } from './user-order-form';\n\nexport function initializeModal(refs) {\n  refs.openModalBtn?.addEventListener('click', () => toggleModal(refs));\n  refs.closeModalBtn?.addEventListener('click', e => {\n    e.stopPropagation();\n    toggleModal(refs);\n  });\n  refs.backdrop?.addEventListener('click', e => {\n    if (e.target === refs.backdrop) {\n      toggleModal(refs);\n    }\n  });\n}\n\nexport function toggleModal(refs) {\n  document.body.classList.toggle(`${refs.name}-modal-open`);\n  refs.modal?.classList.toggle('backdrop--hidden');\n  if (refs.name === 'subscription') resetErrors(subscForm?.elements);\n}\n","import { refsSubscr } from './subscr-modal';\nimport { toggleModal } from './modal';\nexport const subscForm = document.querySelector('.subscr__form');\nconst paymentBtnList = document.querySelectorAll('.payment__btn');\nconst paymentErrorMessage = document.querySelector('.form__payment-error-text');\nconst policyErrorMessage = document.querySelector('.form__policy-error-text');\nconst formInputList = document.querySelectorAll('.form__input');\nconst makeOrderBtn = document.querySelector('.calc-btn');\nsubscForm?.addEventListener('submit', onSubmitForm);\nmakeOrderBtn?.addEventListener('click', e => {\n  e.preventDefault();\n  onSubmitForm(e);\n  // subscForm.submit();\n});\n\npaymentBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    onPaymentTypeBtnClick(e);\n    const isPaymentErrorMessageVisible =\n      !paymentErrorMessage.classList.contains('isHidden');\n    if (isPaymentErrorMessageVisible) {\n      togglePaymentTypeErrorVisibility();\n    }\n  });\n});\nformInputList.forEach(el => {\n  el.addEventListener('focus', () => {\n    el.classList.remove('error');\n  });\n});\n\nconst validationFields = [\n  'userName',\n  'userSurname',\n  'userTel',\n  'userEmail',\n  'userLocation',\n  'userDate',\n  'userTime',\n];\n\nexport const userOrderDataObj = {\n  userPaymentType: '',\n  userBuildingType: '',\n  userTakeKeyAddress: '',\n  userGiveKeyAddress: '',\n  userSquare: '',\n  userServices: {},\n};\n\nexport function setPropertyInOrderObj(el) {\n  const propertyName = el.getAttribute('data-type');\n  const propertyValue = el.getAttribute('data-id') ?? '';\n  userOrderDataObj[propertyName] = propertyValue;\n}\n\nfunction validateFields(elements, fieldNames) {\n  return fieldNames\n    .filter(fieldName => elements[fieldName].value.trim() === '')\n    .map(fieldName => elements[fieldName]);\n}\n\nexport function resetErrors(elements) {\n  [...elements].forEach(element => {\n    element.classList.remove('error');\n  });\n}\n\nfunction addErrorClass(elementsWithErrors) {\n  elementsWithErrors.forEach(element => {\n    element.classList.add('error');\n  });\n}\n\nfunction checkIfPaymentTypeChosen() {\n  return [...paymentBtnList].some(btn => btn.classList.contains('active'));\n}\n\nfunction checkIfPolicyAgreed() {\n  const policyCheckBox = document.querySelector('[name=\"studio-policy-check\"]');\n  const isAgreed = policyCheckBox.checked;\n  return isAgreed;\n}\n\nfunction togglePaymentTypeErrorVisibility() {\n  paymentErrorMessage.classList.toggle('isHidden');\n}\n\nfunction togglePolicyErrorVisibility() {\n  policyErrorMessage.classList.toggle('isHidden');\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const isComplexOrder = e.currentTarget.tagName === 'BUTTON';\n  const elements = isComplexOrder\n    ? subscForm.elements\n    : e.currentTarget.elements;\n  console.log('e.currentTarget: ', e.currentTarget);\n  const elementsWithErrors = validateFields(elements, validationFields);\n  resetErrors(elements);\n  addErrorClass(elementsWithErrors);\n  const isPaymentTypeChosen = checkIfPaymentTypeChosen();\n  const isPolicyAgreed = checkIfPolicyAgreed();\n  const isAnyError = elementsWithErrors.length > 0;\n\n  if (!isPaymentTypeChosen) {\n    togglePaymentTypeErrorVisibility();\n  }\n  if (!isPolicyAgreed) {\n    togglePolicyErrorVisibility();\n  }\n  if (!isPaymentTypeChosen || isAnyError || !isPolicyAgreed) {\n    return;\n  }\n  const form = isComplexOrder ? subscForm : e.target;\n  if (isComplexOrder) {\n    setKeyPropertiesInOrderObj();\n  }\n  setOrderDataObj(form);\n  console.log('userOrderDataObj : ', userOrderDataObj);\n  resetFormFields(elements);\n  resetChosenPaymentType();\n  toggleModal(refsSubscr);\n}\n\nfunction onPaymentTypeBtnClick(e) {\n  const clickedButton = e.target.closest('button');\n  setPropertyInOrderObj(clickedButton);\n  if (clickedButton.classList.contains('active')) return;\n  [...paymentBtnList].forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nfunction resetFormFields(elements) {\n  [...elements].forEach(element => {\n    if (\n      element.type === 'text' ||\n      element.type === 'email' ||\n      element.type === 'tel' ||\n      element.tagName === 'TEXTAREA'\n    ) {\n      element.value = '';\n    } else if (element.type === 'checkbox') {\n      element.checked = true;\n    }\n  });\n}\nfunction resetChosenPaymentType() {\n  [...paymentBtnList].forEach(button => {\n    button.classList.remove('active');\n  });\n}\n\nfunction setOrderDataObj(form) {\n  console.log('form: ', form);\n  const formData = new FormData(form);\n  formData.forEach((value, key) => {\n    if (key.startsWith('user')) {\n      userOrderDataObj[key] = value;\n    }\n  });\n}\n\nfunction setKeyPropertiesInOrderObj() {\n  const takeKeyInput = document.querySelector(\n    '[data-type=\"userTakeKeyAddress\"]'\n  );\n  const giveKeyInput = document.querySelector(\n    '[data-type=\"userGiveKeyAddress\"]'\n  );\n  setPropertyInOrderObj(takeKeyInput);\n  setPropertyInOrderObj(giveKeyInput);\n}\n","import { initializeModal } from './modal';\n\nexport const refsSubscr = {\n  name: 'subscription',\n  openModalBtn: document.querySelector('[data-subscription-modal-open]'),\n  closeModalBtn: document.querySelector('[data-subscription-modal-close]'),\n  modal: document.querySelector('[data-subscription-modal]'),\n  backdrop: document.querySelector('.backdrop--subscr'),\n};\n\ninitializeModal(refsSubscr);\n"],"names":["$2u430","parcelRequire","$d39b81b5e37ca29a$export$aa9b0c0080dbe389","refs","ref","ref1","ref2","openModalBtn","addEventListener","$d39b81b5e37ca29a$export$313c6d35f75fc0e","closeModalBtn","e","stopPropagation","backdrop","target","document","body","classList","toggle","concat","name","modal","resetErrors","subscForm","elements","$8nrFW","$1cf185dc1d8d9889$export$ac2141f83bb6e17f","querySelector","$1cf185dc1d8d9889$var$paymentBtnList","querySelectorAll","$1cf185dc1d8d9889$var$paymentErrorMessage","$1cf185dc1d8d9889$var$policyErrorMessage","$1cf185dc1d8d9889$var$formInputList","$1cf185dc1d8d9889$var$makeOrderBtn","$1cf185dc1d8d9889$var$onSubmitForm","preventDefault","forEach","el","clickedButton","closest","$1cf185dc1d8d9889$export$b4d524fe1ad0ddcf","contains","$parcel$interopDefault","button","add","remove","$1cf185dc1d8d9889$var$onPaymentTypeBtnClick","$1cf185dc1d8d9889$var$togglePaymentTypeErrorVisibility","$1cf185dc1d8d9889$var$validationFields","$1cf185dc1d8d9889$export$ff1c660406717559","userPaymentType","userBuildingType","userTakeKeyAddress","userGiveKeyAddress","userSquare","userServices","propertyName","getAttribute","propertyValue","$1cf185dc1d8d9889$export$16b70c0fc68d4705","element","isComplexOrder","currentTarget","tagName","console","log","elementsWithErrors","fieldNames","filter","fieldName","value","trim","map","$1cf185dc1d8d9889$var$validateFields","$1cf185dc1d8d9889$var$addErrorClass","isPaymentTypeChosen","some","btn","isPolicyAgreed","checked","isAnyError","length","takeKeyInput","giveKeyInput","form","FormData","key","startsWith","$1cf185dc1d8d9889$var$setOrderDataObj","type","$1cf185dc1d8d9889$var$resetFormFields","$ianEp","toggleModal","$1FpXB","refsSubscr","$136dc1f1ad329322$export$6406821d17d9075f","initializeModal"],"version":3,"file":"faq.d7c4c1c4.js.map"}