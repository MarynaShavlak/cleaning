{"mappings":"ysBAAA,IAAAA,EAAAC,EAAA,S,aAGO,SAASC,EAAgBC,G,IAC9BC,EACAC,EAIAC,EALiB,QAAjBF,EAAAD,EAAKI,oBAAY,IAAjBH,KAAmBI,iBAAiB,SAAS,IAAMC,EAAYN,KAC7C,QAAlBE,EAAAF,EAAKO,qBAAa,IAAlBL,KAAoBG,iBAAiB,SAASG,IAC5CA,EAAEC,kBACFH,EAAYN,EAAK,IAEN,QAAbG,EAAAH,EAAKU,gBAAQ,IAAbP,KAAeE,iBAAiB,SAASG,IACnCA,EAAEG,SAAWX,EAAKU,UACpBJ,EAAYN,EAAK,G,CAKhB,SAASM,EAAYN,G,IAE1BC,EADAW,SAASC,KAAKC,UAAUC,OAAO,GAAGf,EAAKgB,mBAC7B,QAAVf,EAAAD,EAAKiB,aAAK,IAAVhB,KAAYa,UAAUC,OAAO,oBACX,iBAAdf,EAAKgB,OAAyB,EAAAnB,EAAAqB,aAAqB,OAATrB,EAAAsB,gBAAS,IAATtB,EAAAsB,eAAA,EAAAtB,EAAAsB,UAAWC,S,qMCnB3D,IAAAC,EAAAvB,EAAA,S,aAEO,MAAMwB,EAAYV,SAASW,cAAc,iBAC1CC,EAAiBZ,SAASa,iBAAiB,iBAC3CC,EAAsBd,SAASW,cAAc,6BAC7CI,EAAqBf,SAASW,cAAc,4BAC5CK,EAAgBhB,SAASa,iBAAiB,gBAC1CI,EAAejB,SAASW,cAAc,aAC5CD,WAAWjB,iBAAiB,SAAUyB,GACtCD,WAAcxB,iBAAiB,SAASG,IACtCA,EAAEuB,iBACFD,EAAatB,EAAE,IAIjBgB,EAAeQ,SAAQC,IACrBA,EAAG5B,iBAAiB,SAASG,KA8G/B,SAA+BA,GAC7B,MAAM0B,EAAgB1B,EAAEG,OAAOwB,QAAQ,UAEvC,GADAC,EAAsBF,GAClBA,EAAcpB,UAAUuB,SAAS,UAAW,OAChD,IAAIb,GAAgBQ,SAAQM,IACtBA,IAAWJ,EACbI,EAAOxB,UAAUyB,IAAI,UAErBD,EAAOxB,UAAU0B,OAAO,SAAS,G,CArHnCC,CAAsBjC,IAEnBkB,EAAoBZ,UAAUuB,SAAS,aAExCK,GAAkC,GAEpC,IAEJd,EAAcI,SAAQC,IACpBA,EAAG5B,iBAAiB,SAAS,KAC3B4B,EAAGnB,UAAU0B,OAAO,QAAQ,GAC5B,IAGJ,MAAMG,EAAmB,CACvB,WACA,cACA,UACA,YACA,eACA,WACA,YAGWC,EAAmB,CAC9BC,gBAAiB,GACjBC,iBAAkB,GAClBC,mBAAoB,GACpBC,mBAAoB,GACpBC,WAAY,GACZC,aAAc,IAGT,SAASd,EAAsBH,GACpC,MAAMkB,EAAelB,EAAGmB,aAAa,a,IACfnD,EAAtB,MAAMoD,EAA0C,QAA1BpD,EAAAgC,EAAGmB,aAAa,kBAAU,IAA1BnD,IAA8B,GACpD2C,EAAiBO,GAAgBE,C,CAS5B,SAASC,EAAYlC,GAC1B,IAAIA,GAAUY,SAAQuB,IACpBA,EAAQzC,UAAU0B,OAAO,QAAQ,G,CAoBrC,SAASE,IACPhB,EAAoBZ,UAAUC,OAAO,W,CAOvC,SAASe,EAAatB,GACpBA,EAAEuB,iBACF,MAAMyB,EAA6C,WAA5BhD,EAAEiD,cAAcC,QACjCtC,EAAWoC,EACblC,EAAUF,SACVZ,EAAEiD,cAAcrC,SACpBuC,QAAQC,IAAI,oBAAqBpD,EAAEiD,eACnC,MAAMI,EA3CR,SAAwBzC,EAAU0C,GAChC,OAAOA,EACJC,QAAOC,GAAkD,KAArC5C,EAAS4C,GAAWC,MAAMC,SAC9CC,KAAIH,GAAa5C,EAAS4C,I,CAwCFI,CAAehD,EAAUuB,GACpDW,EAAYlC,GAhCd,SAAuByC,GACrBA,EAAmB7B,SAAQuB,IACzBA,EAAQzC,UAAUyB,IAAI,QAAQ,G,CA+BhC8B,CAAcR,GACd,MAAMS,EA3BC,IAAI9C,GAAgB+C,MAAKC,GAAOA,EAAI1D,UAAUuB,SAAS,YA4BxDoC,EAxBiB7D,SAASW,cAAc,gCACdmD,QAwB1BC,EAAad,EAAmBe,OAAS,EAQ/C,GANKN,GACH5B,IAEG+B,GApBL9C,EAAmBb,UAAUC,OAAO,aAuB/BuD,GAAuBK,IAAeF,EACzC,OAEF,MAAMI,EAAOrB,EAAiBlC,EAAYd,EAAEG,OACxC6C,GAqDN,WACE,MAAMsB,EAAelE,SAASW,cAC5B,oCAEIwD,EAAenE,SAASW,cAC5B,oCAEFa,EAAsB0C,GACtB1C,EAAsB2C,E,CA5DpBC,GA0CJ,SAAyBH,GACvBlB,QAAQC,IAAI,SAAUiB,GACL,IAAII,SAASJ,GACrB7C,SAAQ,CAACiC,EAAOiB,KACnBA,EAAIC,WAAW,UACjBvC,EAAiBsC,GAAOjB,EAAK,G,CA7CjCmB,CAAgBP,GAChBlB,QAAQC,IAAI,sBAAuBhB,GAmBrC,SAAyBxB,GACvB,IAAIA,GAAUY,SAAQuB,IAED,SAAjBA,EAAQ8B,MACS,UAAjB9B,EAAQ8B,MACS,QAAjB9B,EAAQ8B,MACY,aAApB9B,EAAQG,QAERH,EAAQU,MAAQ,GACU,aAAjBV,EAAQ8B,OACjB9B,EAAQmB,SAAU,EAAI,G,CA5B1BY,CAAgBlE,GAiChB,IAAII,GAAgBQ,SAAQM,IAC1BA,EAAOxB,UAAU0B,OAAO,SAAS,KAhCnC,EAAA+C,EAAAC,aAAYnE,EAAAoE,W,wFC3Hd,IAAAF,EAAAzF,EAAA,SAEO,MAAM4F,EAAa,CACxB1E,KAAM,eACNZ,aAAcQ,SAASW,cAAc,kCACrChB,cAAeK,SAASW,cAAc,mCACtCN,MAAOL,SAASW,cAAc,6BAC9Bb,SAAUE,SAASW,cAAc,uBAGnC,EAAAgE,EAAAI,iBAAgBD,E","sources":["src/js/modules/modal.js","src/js/modules/user-order-form.js","src/js/modules/subscr-modal.js"],"sourcesContent":["import { resetErrors } from './user-order-form';\nimport { subscForm } from './user-order-form';\n\nexport function initializeModal(refs) {\n  refs.openModalBtn?.addEventListener('click', () => toggleModal(refs));\n  refs.closeModalBtn?.addEventListener('click', e => {\n    e.stopPropagation();\n    toggleModal(refs);\n  });\n  refs.backdrop?.addEventListener('click', e => {\n    if (e.target === refs.backdrop) {\n      toggleModal(refs);\n    }\n  });\n}\n\nexport function toggleModal(refs) {\n  document.body.classList.toggle(`${refs.name}-modal-open`);\n  refs.modal?.classList.toggle('backdrop--hidden');\n  if (refs.name === 'subscription') resetErrors(subscForm?.elements);\n}\n","import { refsSubscr } from './subscr-modal';\nimport { toggleModal } from './modal';\nexport const subscForm = document.querySelector('.subscr__form');\nconst paymentBtnList = document.querySelectorAll('.payment__btn');\nconst paymentErrorMessage = document.querySelector('.form__payment-error-text');\nconst policyErrorMessage = document.querySelector('.form__policy-error-text');\nconst formInputList = document.querySelectorAll('.form__input');\nconst makeOrderBtn = document.querySelector('.calc-btn');\nsubscForm?.addEventListener('submit', onSubmitForm);\nmakeOrderBtn?.addEventListener('click', e => {\n  e.preventDefault();\n  onSubmitForm(e);\n  // subscForm.submit();\n});\n\npaymentBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    onPaymentTypeBtnClick(e);\n    const isPaymentErrorMessageVisible =\n      !paymentErrorMessage.classList.contains('isHidden');\n    if (isPaymentErrorMessageVisible) {\n      togglePaymentTypeErrorVisibility();\n    }\n  });\n});\nformInputList.forEach(el => {\n  el.addEventListener('focus', () => {\n    el.classList.remove('error');\n  });\n});\n\nconst validationFields = [\n  'userName',\n  'userSurname',\n  'userTel',\n  'userEmail',\n  'userLocation',\n  'userDate',\n  'userTime',\n];\n\nexport const userOrderDataObj = {\n  userPaymentType: '',\n  userBuildingType: '',\n  userTakeKeyAddress: '',\n  userGiveKeyAddress: '',\n  userSquare: '',\n  userServices: {},\n};\n\nexport function setPropertyInOrderObj(el) {\n  const propertyName = el.getAttribute('data-type');\n  const propertyValue = el.getAttribute('data-id') ?? '';\n  userOrderDataObj[propertyName] = propertyValue;\n}\n\nfunction validateFields(elements, fieldNames) {\n  return fieldNames\n    .filter(fieldName => elements[fieldName].value.trim() === '')\n    .map(fieldName => elements[fieldName]);\n}\n\nexport function resetErrors(elements) {\n  [...elements].forEach(element => {\n    element.classList.remove('error');\n  });\n}\n\nfunction addErrorClass(elementsWithErrors) {\n  elementsWithErrors.forEach(element => {\n    element.classList.add('error');\n  });\n}\n\nfunction checkIfPaymentTypeChosen() {\n  return [...paymentBtnList].some(btn => btn.classList.contains('active'));\n}\n\nfunction checkIfPolicyAgreed() {\n  const policyCheckBox = document.querySelector('[name=\"studio-policy-check\"]');\n  const isAgreed = policyCheckBox.checked;\n  return isAgreed;\n}\n\nfunction togglePaymentTypeErrorVisibility() {\n  paymentErrorMessage.classList.toggle('isHidden');\n}\n\nfunction togglePolicyErrorVisibility() {\n  policyErrorMessage.classList.toggle('isHidden');\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const isComplexOrder = e.currentTarget.tagName === 'BUTTON';\n  const elements = isComplexOrder\n    ? subscForm.elements\n    : e.currentTarget.elements;\n  console.log('e.currentTarget: ', e.currentTarget);\n  const elementsWithErrors = validateFields(elements, validationFields);\n  resetErrors(elements);\n  addErrorClass(elementsWithErrors);\n  const isPaymentTypeChosen = checkIfPaymentTypeChosen();\n  const isPolicyAgreed = checkIfPolicyAgreed();\n  const isAnyError = elementsWithErrors.length > 0;\n\n  if (!isPaymentTypeChosen) {\n    togglePaymentTypeErrorVisibility();\n  }\n  if (!isPolicyAgreed) {\n    togglePolicyErrorVisibility();\n  }\n  if (!isPaymentTypeChosen || isAnyError || !isPolicyAgreed) {\n    return;\n  }\n  const form = isComplexOrder ? subscForm : e.target;\n  if (isComplexOrder) {\n    setKeyPropertiesInOrderObj();\n  }\n  setOrderDataObj(form);\n  console.log('userOrderDataObj : ', userOrderDataObj);\n  resetFormFields(elements);\n  resetChosenPaymentType();\n  toggleModal(refsSubscr);\n}\n\nfunction onPaymentTypeBtnClick(e) {\n  const clickedButton = e.target.closest('button');\n  setPropertyInOrderObj(clickedButton);\n  if (clickedButton.classList.contains('active')) return;\n  [...paymentBtnList].forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nfunction resetFormFields(elements) {\n  [...elements].forEach(element => {\n    if (\n      element.type === 'text' ||\n      element.type === 'email' ||\n      element.type === 'tel' ||\n      element.tagName === 'TEXTAREA'\n    ) {\n      element.value = '';\n    } else if (element.type === 'checkbox') {\n      element.checked = true;\n    }\n  });\n}\nfunction resetChosenPaymentType() {\n  [...paymentBtnList].forEach(button => {\n    button.classList.remove('active');\n  });\n}\n\nfunction setOrderDataObj(form) {\n  console.log('form: ', form);\n  const formData = new FormData(form);\n  formData.forEach((value, key) => {\n    if (key.startsWith('user')) {\n      userOrderDataObj[key] = value;\n    }\n  });\n}\n\nfunction setKeyPropertiesInOrderObj() {\n  const takeKeyInput = document.querySelector(\n    '[data-type=\"userTakeKeyAddress\"]'\n  );\n  const giveKeyInput = document.querySelector(\n    '[data-type=\"userGiveKeyAddress\"]'\n  );\n  setPropertyInOrderObj(takeKeyInput);\n  setPropertyInOrderObj(giveKeyInput);\n}\n","import { initializeModal } from './modal';\n\nexport const refsSubscr = {\n  name: 'subscription',\n  openModalBtn: document.querySelector('[data-subscription-modal-open]'),\n  closeModalBtn: document.querySelector('[data-subscription-modal-close]'),\n  modal: document.querySelector('[data-subscription-modal]'),\n  backdrop: document.querySelector('.backdrop--subscr'),\n};\n\ninitializeModal(refsSubscr);\n"],"names":["$8c0Ac","parcelRequire","$c549e00ea1028b97$export$aa9b0c0080dbe389","refs","ref","ref1","ref2","openModalBtn","addEventListener","$c549e00ea1028b97$export$313c6d35f75fc0e","closeModalBtn","e","stopPropagation","backdrop","target","document","body","classList","toggle","name","modal","resetErrors","subscForm","elements","$2in5s","$5f6fe576bb8e45fb$export$ac2141f83bb6e17f","querySelector","$5f6fe576bb8e45fb$var$paymentBtnList","querySelectorAll","$5f6fe576bb8e45fb$var$paymentErrorMessage","$5f6fe576bb8e45fb$var$policyErrorMessage","$5f6fe576bb8e45fb$var$formInputList","$5f6fe576bb8e45fb$var$makeOrderBtn","$5f6fe576bb8e45fb$var$onSubmitForm","preventDefault","forEach","el","clickedButton","closest","$5f6fe576bb8e45fb$export$b4d524fe1ad0ddcf","contains","button","add","remove","$5f6fe576bb8e45fb$var$onPaymentTypeBtnClick","$5f6fe576bb8e45fb$var$togglePaymentTypeErrorVisibility","$5f6fe576bb8e45fb$var$validationFields","$5f6fe576bb8e45fb$export$ff1c660406717559","userPaymentType","userBuildingType","userTakeKeyAddress","userGiveKeyAddress","userSquare","userServices","propertyName","getAttribute","propertyValue","$5f6fe576bb8e45fb$export$16b70c0fc68d4705","element","isComplexOrder","currentTarget","tagName","console","log","elementsWithErrors","fieldNames","filter","fieldName","value","trim","map","$5f6fe576bb8e45fb$var$validateFields","$5f6fe576bb8e45fb$var$addErrorClass","isPaymentTypeChosen","some","btn","isPolicyAgreed","checked","isAnyError","length","form","takeKeyInput","giveKeyInput","$5f6fe576bb8e45fb$var$setKeyPropertiesInOrderObj","FormData","key","startsWith","$5f6fe576bb8e45fb$var$setOrderDataObj","type","$5f6fe576bb8e45fb$var$resetFormFields","$gWa4t","toggleModal","refsSubscr","$1abf2bce532be580$export$6406821d17d9075f","initializeModal"],"version":3,"file":"faq.445a9fb0.js.map"}