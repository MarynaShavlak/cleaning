{"mappings":"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","sources":["src/js/modules/modal.js","src/js/modules/user-order-form.js","src/js/modules/subscr-modal.js","src/js/modules/chose-services.js"],"sourcesContent":["import { resetErrors } from './user-order-form';\nimport { subscForm } from './user-order-form';\n\nexport function initializeModal(refs) {\n  refs.openModalBtn?.addEventListener('click', () => toggleModal(refs));\n  refs.closeModalBtn?.addEventListener('click', e => {\n    e.stopPropagation();\n    toggleModal(refs);\n  });\n  refs.backdrop?.addEventListener('click', e => {\n    if (e.target === refs.backdrop) {\n      toggleModal(refs);\n    }\n  });\n}\n\nexport function toggleModal(refs) {\n  document.body.classList.toggle(`${refs.name}-modal-open`);\n  refs.modal?.classList.toggle('backdrop--hidden');\n  if (refs.name === 'subscription') resetErrors(subscForm?.elements);\n}\n","import { refsSubscr } from './subscr-modal';\nimport { toggleModal } from './modal';\nimport {\n  userServicesOrderInfoObj,\n  calculateServiceCost,\n  filterObjectByQuantity,\n} from './chose-services';\nexport const subscForm = document.querySelector('.subscr__form');\nconst paymentBtnList = document.querySelectorAll('.payment__btn');\nconst paymentErrorMessage = document.querySelector('.form__payment-error-text');\nconst policyErrorMessage = document.querySelector('.form__policy-error-text');\nconst formInputList = document.querySelectorAll('.form__input');\nconst makeOrderBtn = document.querySelector('.calc-btn');\nsubscForm?.addEventListener('submit', onSubmitForm);\nmakeOrderBtn?.addEventListener('click', e => {\n  e.preventDefault();\n  onSubmitForm(e);\n  // subscForm.submit();\n});\n\npaymentBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    onPaymentTypeBtnClick(e);\n    const isPaymentErrorMessageVisible =\n      !paymentErrorMessage.classList.contains('isHidden');\n    if (isPaymentErrorMessageVisible) {\n      togglePaymentTypeErrorVisibility();\n    }\n  });\n});\nformInputList.forEach(el => {\n  el.addEventListener('focus', () => {\n    el.classList.remove('error');\n  });\n});\n\nconst validationFields = [\n  'userName',\n  'userSurname',\n  'userTel',\n  'userEmail',\n  'userLocation',\n  'userDate',\n  'userTime',\n];\n\nexport const userOrderDataObj = {\n  userPaymentType: '',\n  userBuildingType: '',\n  userTakeKeyAddress: '',\n  userGiveKeyAddress: '',\n  userSquare: { quantity: '', cost: '' },\n  userServices: {},\n};\n\nexport function setPropertyInOrderObj(el) {\n  const propertyName = el.getAttribute('data-type');\n  const propertyValue = el.getAttribute('data-id') ?? '';\n  userOrderDataObj[propertyName] = propertyValue;\n}\n\nfunction setSquarePropertyInOrderObj(orderObj, quantity, price) {\n  orderObj.userSquare = {\n    quantity: `${quantity}`,\n    cost: calculateServiceCost(quantity, price),\n  };\n}\n\nfunction setServicesPropertyInOrderObj(orderObj) {\n  const filteredObj = filterObjectByQuantity(userServicesOrderInfoObj);\n  orderObj.userServices = Object.keys(filteredObj)\n    .filter(key => key !== 'square')\n    .map(key => {\n      const { name, quantity, price } = filteredObj[key];\n      const cost = calculateServiceCost(quantity, price);\n      return {\n        name: name,\n        quantity: quantity,\n        cost: cost,\n      };\n    });\n\n  // orderObj.userServices = Object.keys(filteredObj).reduce(\n  //   (result, serviceName) => {\n  //     if (serviceName !== 'square') {\n  //       const { quantity, price } = filteredObj[serviceName];\n  //       result[serviceName] = {\n  //         quantity,\n  //         cost: calculateServiceCost(quantity, price),\n  //       };\n  //     }\n  //     return result;\n  //   },\n  //   {}\n  // );\n}\n\nfunction validateFields(elements, fieldNames) {\n  return fieldNames\n    .filter(fieldName => elements[fieldName].value.trim() === '')\n    .map(fieldName => elements[fieldName]);\n}\n\nexport function resetErrors(elements) {\n  [...elements].forEach(element => {\n    element.classList.remove('error');\n  });\n}\n\nfunction addErrorClass(elementsWithErrors) {\n  elementsWithErrors.forEach(element => {\n    element.classList.add('error');\n  });\n}\n\nfunction checkIfPaymentTypeChosen() {\n  return [...paymentBtnList].some(btn => btn.classList.contains('active'));\n}\n\nfunction checkIfPolicyAgreed() {\n  const policyCheckBox = document.querySelector('[name=\"studio-policy-check\"]');\n  const isAgreed = policyCheckBox.checked;\n  return isAgreed;\n}\n\nfunction togglePaymentTypeErrorVisibility() {\n  paymentErrorMessage.classList.toggle('isHidden');\n}\n\nfunction togglePolicyErrorVisibility() {\n  policyErrorMessage.classList.toggle('isHidden');\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const isComplexOrder = e.currentTarget.tagName === 'BUTTON';\n  const elements = isComplexOrder\n    ? subscForm.elements\n    : e.currentTarget.elements;\n  console.log('e.currentTarget: ', e.currentTarget);\n  const elementsWithErrors = validateFields(elements, validationFields);\n  resetErrors(elements);\n  addErrorClass(elementsWithErrors);\n  const isPaymentTypeChosen = checkIfPaymentTypeChosen();\n  const isPolicyAgreed = checkIfPolicyAgreed();\n  const isAnyError = elementsWithErrors.length > 0;\n\n  if (!isPaymentTypeChosen) {\n    togglePaymentTypeErrorVisibility();\n  }\n  if (!isPolicyAgreed) {\n    togglePolicyErrorVisibility();\n  }\n  if (!isPaymentTypeChosen || isAnyError || !isPolicyAgreed) {\n    return;\n  }\n  const form = isComplexOrder ? subscForm : e.target;\n  if (isComplexOrder) {\n    initializeComplexOrder();\n  }\n  setOrderDataObj(form);\n  console.log('userOrderDataObj : ', userOrderDataObj);\n  storeUserOrderData(userOrderDataObj);\n  resetFormFields(elements);\n  resetChosenPaymentType();\n  if (!isComplexOrder) {\n    toggleModal(refsSubscr);\n  }\n  window.location.href = '/success-order.html';\n}\n\nfunction storeUserOrderData(obj) {\n  const userOrderDataJSON = JSON.stringify(obj);\n  localStorage.setItem('userOrderDataObj', userOrderDataJSON);\n}\nexport function getUserOrderDataFromStorage() {\n  const userOrderDataJSON = localStorage.getItem('userOrderDataObj');\n  const userOrderDataObj = JSON.parse(userOrderDataJSON);\n  return userOrderDataObj;\n}\n\nfunction initializeComplexOrder() {\n  setKeyPropertiesInOrderObj();\n  setSquarePropertyInOrderObj(\n    userOrderDataObj,\n    userServicesOrderInfoObj.square.quantity,\n    userServicesOrderInfoObj.square.price\n  );\n  setServicesPropertyInOrderObj(userOrderDataObj);\n}\n\nfunction onPaymentTypeBtnClick(e) {\n  const clickedButton = e.target.closest('button');\n  setPropertyInOrderObj(clickedButton);\n  if (clickedButton.classList.contains('active')) return;\n  [...paymentBtnList].forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n}\n\nfunction resetFormFields(elements) {\n  [...elements].forEach(element => {\n    if (\n      element.type === 'text' ||\n      element.type === 'email' ||\n      element.type === 'tel' ||\n      element.tagName === 'TEXTAREA'\n    ) {\n      element.value = '';\n    } else if (element.type === 'checkbox') {\n      element.checked = true;\n    }\n  });\n}\n\nfunction resetChosenPaymentType() {\n  [...paymentBtnList].forEach(button => {\n    button.classList.remove('active');\n  });\n}\n\nfunction setOrderDataObj(form) {\n  console.log('form: ', form);\n  const formData = new FormData(form);\n  formData.forEach((value, key) => {\n    if (key.startsWith('user')) {\n      userOrderDataObj[key] = value;\n    }\n  });\n}\n\nfunction setKeyPropertiesInOrderObj() {\n  const takeKeyInput = document.querySelector(\n    '[data-type=\"userTakeKeyAddress\"]'\n  );\n  const giveKeyInput = document.querySelector(\n    '[data-type=\"userGiveKeyAddress\"]'\n  );\n  setPropertyInOrderObj(takeKeyInput);\n  setPropertyInOrderObj(giveKeyInput);\n}\n","import { initializeModal } from './modal';\n\nexport const refsSubscr = {\n  name: 'subscription',\n  openModalBtn: document.querySelector('[data-subscription-modal-open]'),\n  closeModalBtn: document.querySelector('[data-subscription-modal-close]'),\n  modal: document.querySelector('[data-subscription-modal]'),\n  backdrop: document.querySelector('.backdrop--subscr'),\n};\n\ninitializeModal(refsSubscr);\n","import { userOrderData, setPropertyInOrderObj } from './user-order-form';\nconst buildingsBtnList = document.querySelectorAll('.buildings__element');\nconst increaseSquareBtn = document.querySelector('.control-quantity-btn--plus');\nconst decreaseSquareBtn = document.querySelector(\n  '.control-quantity-btn--minus'\n);\n\nconst serviceCheckboxList = document.querySelectorAll(\n  '.service-element .checkbox'\n);\nconst totalCostTableElement = document.querySelector('.table__data');\nconst takeKeysBtn = document.querySelector('#take-keys-btn');\nconst giveKeysBtn = document.querySelector('#give-keys-btn');\nconst keysAddressBlock = document.querySelector('.keys-address-block');\nconst addressTakeBlock = document.querySelector(\n  '.keys-address-block__take-item'\n);\nconst addressGiveBlock = document.querySelector(\n  '.keys-address-block__give-item'\n);\n\nincreaseSquareBtn?.addEventListener('click', handleSquareQuantityChange);\ndecreaseSquareBtn?.addEventListener('click', handleSquareQuantityChange);\ntakeKeysBtn?.addEventListener('click', handleKeyBtn);\ngiveKeysBtn?.addEventListener('click', handleKeyBtn);\nbuildingsBtnList.forEach(el => {\n  el.addEventListener('click', e => {\n    setPropertyInOrderObj(e.target);\n    onBuldingTypeBtnClick(e);\n  });\n});\n\nserviceCheckboxList.forEach(el => {\n  el.addEventListener('change', e => {\n    toggleServiceItem(e);\n  });\n});\n\nconst interfaceServiceInfoObj = {\n  square: { name: 'Площа', quantity: 1, price: 2 },\n  windowsStandard: { name: 'Миття вікон (стандартні)', quantity: 1, price: 35 },\n  windowsLarge: { name: 'Миття вікон (до підлоги)', quantity: 1, price: 40 },\n  microWave: { name: 'Мікрохвильовка', quantity: 1, price: 15 },\n  refrigerator: { name: 'Холодильник', quantity: 1, price: 40 },\n  plate: { name: 'Плита', quantity: 1, price: 35 },\n  officeChair: {\n    name: 'Хімчистка офісних стільців',\n    quantity: 1,\n    price: 20,\n  },\n  sofaDry2x: { name: 'Хімчистка дивану 2х', quantity: 1, price: 109.99 },\n  sofaDry3x: { name: 'Хімчистка дивану 3х', quantity: 1, price: 129.99 },\n  sofaDry4x: { name: 'Хімчистка дивану 4х', quantity: 1, price: 149.99 },\n};\n\nexport const userServicesOrderInfoObj = {\n  square: { name: 'Площа', quantity: 1, price: 2 },\n  windowsStandard: { name: 'Миття вікон (стандартні)', quantity: 0, price: 35 },\n  windowsLarge: { name: 'Миття вікон (до підлоги)', quantity: 0, price: 40 },\n  microWave: { name: 'Мікрохвильовка', quantity: 0, price: 15 },\n  refrigerator: { name: 'Холодильник', quantity: 0, price: 40 },\n  plate: { name: 'Плита', quantity: 0, price: 35 },\n  officeChair: { name: 'Хімчистка офісних стільців', quantity: 0, price: 20 },\n  sofaDry2x: { name: 'Хімчистка дивану 2х', quantity: 0, price: 109.99 },\n  sofaDry3x: { name: 'Хімчистка дивану 3х', quantity: 0, price: 129.99 },\n  sofaDry4x: { name: 'Хімчистка дивану 4х', quantity: 0, price: 149.99 },\n};\n\nfunction updateServiceItemInterface(serviceName) {\n  const servicesElementsList = document.querySelectorAll('.service-element');\n  const label = [...servicesElementsList].find(\n    el => el.getAttribute('data-id') === serviceName\n  );\n  const itemQntEl = label?.nextElementSibling.querySelector(\n    `[data-name=\"${serviceName}\"]`\n  );\n  const squareEl = document\n    .querySelector('.wrap--square')\n    .querySelector(`[data-name=\"${serviceName}\"]`);\n  if (itemQntEl) {\n    itemQntEl.textContent = interfaceServiceInfoObj[serviceName].quantity;\n  }\n  if (squareEl) {\n    squareEl.textContent = interfaceServiceInfoObj[serviceName].quantity;\n    const squareInTotal = document.querySelector('.square-value-total');\n    squareInTotal.textContent = interfaceServiceInfoObj[serviceName].quantity;\n  }\n}\n\nfunction updateQuantityData(itemName, operation) {\n  if (operation === 'plus') {\n    interfaceServiceInfoObj[itemName].quantity += 1;\n  } else if (operation === 'minus') {\n    if (interfaceServiceInfoObj[itemName].quantity === 1) return;\n    interfaceServiceInfoObj[itemName].quantity -= 1;\n  }\n}\n\nfunction changeOrderItemQuantity(e) {\n  const serviceName = getChosenServiceName(e);\n  const operationType = getClickedBtnType(e);\n  updateQuantityData(serviceName, operationType);\n  updateServiceItemInterface(serviceName);\n  updateMinusBtnStyle(serviceName);\n}\n\nfunction handleServiceQuantityChange(e) {\n  const serviceName = getChosenServiceName(e);\n  changeOrderItemQuantity(e);\n  updateTotalCostForService(serviceName);\n  calculateTotalOrderCost();\n}\n\nfunction handleSquareQuantityChange(e) {\n  changeOrderItemQuantity(e);\n  updateSquareTotalCost();\n  calculateTotalOrderCost();\n}\n\nfunction updateTotalCostForService(serviceName) {\n  const orderServiceTotalCost = document.querySelector(\n    `[data-service=\"${serviceName}\"]`\n  );\n  const orderServiceTotalQuantity = document.querySelector(\n    `#${serviceName} .service-quantity`\n  );\n\n  const price = interfaceServiceInfoObj[serviceName].price;\n  if (orderServiceTotalCost && orderServiceTotalQuantity) {\n    const updatedQuantity = updateServiceQuantity(serviceName);\n    const cost = calculateServiceCost(updatedQuantity, price);\n    orderServiceTotalCost.textContent = cost;\n    orderServiceTotalQuantity.textContent = updatedQuantity;\n  } else {\n    updateServiceQuantity(serviceName, 0);\n  }\n}\n\nexport function calculateServiceCost(quantity, price) {\n  const cost = (quantity * price).toFixed(2);\n  return `${cost}zł`;\n}\n\nexport function filterObjectByQuantity(obj) {\n  return Object.keys(obj)\n    .filter(key => obj[key].quantity > 0)\n    .reduce((filteredObj, key) => {\n      filteredObj[key] = { ...obj[key] };\n      delete filteredObj[key].square;\n      return filteredObj;\n    }, {});\n}\n\nfunction updateSquareTotalCost() {\n  const totalSquareCostEl = document.querySelector(`[data-service=\"square\"]`);\n  userServicesOrderInfoObj.square.quantity =\n    interfaceServiceInfoObj.square.quantity;\n  totalSquareCostEl.textContent = `${\n    userServicesOrderInfoObj.square.quantity *\n    userServicesOrderInfoObj.square.price\n  }zł`;\n}\n\nfunction toggleServiceItem(e) {\n  const el = e.currentTarget;\n  const label = el.closest('label');\n  const controlQuantityBlock = label.nextElementSibling;\n  const isServiceChosen = el.checked;\n  toggleControlQuantityBlock(controlQuantityBlock, isServiceChosen);\n  attachQuantityButtonListeners(controlQuantityBlock);\n  const serviceItem = createServiceItem(label);\n  const serviceName = label.getAttribute('data-id');\n  updateTotalServicesTable(isServiceChosen, serviceItem);\n  updateTotalCostForService(serviceName);\n  calculateTotalOrderCost();\n}\n\nfunction toggleControlQuantityBlock(controlQuantityBlock, isVisible) {\n  controlQuantityBlock.classList.toggle('isHidden', !isVisible);\n}\n\nfunction attachQuantityButtonListeners(controlQuantityBlock) {\n  const increaseQuantityBtn = controlQuantityBlock.querySelector(\n    '.control-quantity-btn--plus'\n  );\n  const decreaseQuantityBtn = controlQuantityBlock.querySelector(\n    '.control-quantity-btn--minus'\n  );\n\n  increaseQuantityBtn.addEventListener('click', handleServiceQuantityChange);\n  decreaseQuantityBtn.addEventListener('click', handleServiceQuantityChange);\n}\n\nfunction updateTotalServicesTable(isServiceChosen, item) {\n  const serviceName = item.id;\n  const serviceInTable = findServiceInTable(serviceName);\n  if (isServiceChosen && !serviceInTable) {\n    addToTotalCostTable(item);\n    updateServiceQuantity(serviceName);\n  } else if (!isServiceChosen && serviceInTable) {\n    updateServiceQuantity(serviceName, 0);\n    removeFromTotalCostTable(serviceInTable);\n  }\n}\n\nfunction updateServiceQuantity(serviceName, quantity) {\n  const updatedQuantity =\n    quantity !== undefined\n      ? quantity\n      : interfaceServiceInfoObj[serviceName].quantity;\n  userServicesOrderInfoObj[serviceName].quantity = updatedQuantity;\n  return updatedQuantity;\n}\n\nfunction calculateTotalOrderCost() {\n  const totalOrderCost = Object.keys(userServicesOrderInfoObj)\n    .reduce((acc, propertyName) => {\n      const property = userServicesOrderInfoObj[propertyName];\n      return acc + property.quantity * property.price;\n    }, 0)\n    .toFixed(2);\n  const totalOrderCostEl = document.querySelector('.total-order-value');\n  totalOrderCostEl.textContent = `${totalOrderCost}zł`;\n}\n\nfunction createSpan(className, textContent) {\n  const span = document.createElement('span');\n  if (className) {\n    span.className = className;\n  }\n  if (textContent) {\n    span.textContent = textContent;\n  }\n  return span;\n}\n\nfunction createServiceItem(element) {\n  const serviceName = element.querySelector(\n    '.service-element__text'\n  ).textContent;\n  const servicePrice = element\n    .querySelector('.service-element__accent')\n    .getAttribute('data-value');\n  const serviceID = element.getAttribute('data-id');\n  const listItem = document.createElement('li');\n  listItem.id = serviceID;\n  listItem.className = 'table__item table__block';\n  const nameSpan = createSpan('item__name', `${serviceName}`);\n  const textSpan = createSpan('', `x`);\n  const nameWrapper = createSpan('name-wrapper');\n  const quantityWrapper = createSpan('quantity-wrapper');\n  const quantitySpan = createSpan(\n    'item__quantity service-quantity',\n    interfaceServiceInfoObj[serviceID].quantity\n  );\n  appendChildNodes(quantityWrapper, [textSpan, quantitySpan]);\n  appendChildNodes(nameWrapper, [nameSpan, quantityWrapper]);\n  const valueSpan = createSpan('service-value', `${servicePrice}zł`);\n  valueSpan.setAttribute('data-service', serviceID);\n  appendChildNodes(listItem, [nameWrapper, valueSpan]);\n  return listItem;\n}\n\nfunction appendChildNodes(parent, children) {\n  children.forEach(child => {\n    parent.appendChild(child);\n  });\n}\n\nfunction getClickedBtnType(e) {\n  const type = e.currentTarget.getAttribute('data-type');\n  return type;\n}\n\nfunction getChosenServiceName(e) {\n  const chosenServiceName = e.currentTarget\n    ?.closest('.wrap--service')\n    ?.parentNode.querySelector('label')\n    ?.getAttribute('data-id');\n\n  const squareEl = e.currentTarget\n    ?.closest('.wrap--square')\n    ?.getAttribute('data-id');\n  return chosenServiceName || squareEl;\n}\n\nfunction findServiceInTable(serviceName) {\n  const tableElementsList = totalCostTableElement.querySelectorAll('li');\n  return [...tableElementsList].find(el => el.id === serviceName);\n}\n\nfunction addToTotalCostTable(item) {\n  totalCostTableElement.insertAdjacentElement('beforeend', item);\n}\n\nfunction removeFromTotalCostTable(item) {\n  totalCostTableElement.removeChild(item);\n}\n\nfunction onBuldingTypeBtnClick(e) {\n  const clickedButton = e.target;\n  if (clickedButton.classList.contains('buildings__element--current')) return;\n  [...buildingsBtnList].forEach(button => {\n    if (button === clickedButton) {\n      const id = button.id;\n      button.classList.add('buildings__element--current');\n    } else {\n      button.classList.remove('buildings__element--current');\n    }\n  });\n}\n\nfunction updateMinusBtnStyle(serviceName) {\n  const decreaseSquareIcon = document\n    .querySelector(`[data-name=\"${serviceName}\"]`)\n    .parentNode?.parentNode?.querySelector(\n      '.control-quantity-btn--minus .icon--minus'\n    );\n  if (interfaceServiceInfoObj[serviceName].quantity === 1) {\n    decreaseSquareIcon.style.fill = 'rgba(\t77, 18, 153, 0.3)';\n  } else {\n    decreaseSquareIcon.style.fill = '#4D1299';\n  }\n}\n\nfunction handleKeyBtn(e) {\n  const btn = e.currentTarget;\n  btn.classList.toggle('active');\n  const addressType = btn.id;\n  toggleAddressItem(addressType);\n  toggleKeysAddressBlock();\n}\n\nfunction toggleAddressItem(addressType) {\n  if (addressType === 'take-keys-btn') {\n    addressTakeBlock.classList.toggle('isHidden');\n  } else {\n    addressGiveBlock.classList.toggle('isHidden');\n  }\n}\n\nfunction toggleKeysAddressBlock() {\n  const isAddressTakeBlockHidden =\n    addressTakeBlock.classList.contains('isHidden');\n  const isAddressGiveBlockHidden =\n    addressGiveBlock.classList.contains('isHidden');\n\n  if (isAddressTakeBlockHidden && isAddressGiveBlockHidden) {\n    keysAddressBlock.classList.add('isHidden');\n  } else {\n    keysAddressBlock.classList.remove('isHidden');\n  }\n}\n"],"names":["$8c0Ac","parcelRequire","$c549e00ea1028b97$export$aa9b0c0080dbe389","refs","ref","ref1","ref2","openModalBtn","addEventListener","$c549e00ea1028b97$export$313c6d35f75fc0e","closeModalBtn","e","stopPropagation","backdrop","target","document","body","classList","toggle","name","modal","resetErrors","subscForm","elements","$2in5s","$5f6fe576bb8e45fb$export$ac2141f83bb6e17f","querySelector","$5f6fe576bb8e45fb$var$paymentBtnList","querySelectorAll","$5f6fe576bb8e45fb$var$paymentErrorMessage","$5f6fe576bb8e45fb$var$policyErrorMessage","$5f6fe576bb8e45fb$var$formInputList","$5f6fe576bb8e45fb$var$makeOrderBtn","$5f6fe576bb8e45fb$var$onSubmitForm","preventDefault","forEach","el","clickedButton","closest","$5f6fe576bb8e45fb$export$b4d524fe1ad0ddcf","contains","button","add","remove","$5f6fe576bb8e45fb$var$onPaymentTypeBtnClick","$5f6fe576bb8e45fb$var$togglePaymentTypeErrorVisibility","$5f6fe576bb8e45fb$var$validationFields","$5f6fe576bb8e45fb$export$ff1c660406717559","userPaymentType","userBuildingType","userTakeKeyAddress","userGiveKeyAddress","userSquare","quantity","cost","userServices","propertyName","getAttribute","propertyValue","$5f6fe576bb8e45fb$export$16b70c0fc68d4705","element","isComplexOrder","currentTarget","tagName","console","log","elementsWithErrors","fieldNames","filter","fieldName","value","trim","map","$5f6fe576bb8e45fb$var$validateFields","$5f6fe576bb8e45fb$var$addErrorClass","isPaymentTypeChosen","some","btn","isPolicyAgreed","checked","isAnyError","length","form","orderObj","price","takeKeyInput","giveKeyInput","$5f6fe576bb8e45fb$var$setKeyPropertiesInOrderObj","$3K9gQ","userServicesOrderInfoObj","square","calculateServiceCost","filteredObj","filterObjectByQuantity","Object","keys","key","$5f6fe576bb8e45fb$var$setServicesPropertyInOrderObj","FormData","startsWith","$5f6fe576bb8e45fb$var$setOrderDataObj","obj","userOrderDataJSON","JSON","stringify","localStorage","setItem","$5f6fe576bb8e45fb$var$storeUserOrderData","type","$5f6fe576bb8e45fb$var$resetFormFields","$gWa4t","toggleModal","refsSubscr","window","location","href","$5f6fe576bb8e45fb$export$69d380dea3c1ddc0","getItem","parse","$1abf2bce532be580$export$6406821d17d9075f","initializeModal","$2b9cdbee9e58b620$var$buildingsBtnList","$2b9cdbee9e58b620$var$increaseSquareBtn","$2b9cdbee9e58b620$var$decreaseSquareBtn","$2b9cdbee9e58b620$var$serviceCheckboxList","$2b9cdbee9e58b620$var$totalCostTableElement","$2b9cdbee9e58b620$var$takeKeysBtn","$2b9cdbee9e58b620$var$giveKeysBtn","$2b9cdbee9e58b620$var$keysAddressBlock","$2b9cdbee9e58b620$var$addressTakeBlock","$2b9cdbee9e58b620$var$addressGiveBlock","$2b9cdbee9e58b620$var$handleSquareQuantityChange","$2b9cdbee9e58b620$var$handleKeyBtn","setPropertyInOrderObj","id","$2b9cdbee9e58b620$var$onBuldingTypeBtnClick","label","controlQuantityBlock","nextElementSibling","isServiceChosen","isVisible","$2b9cdbee9e58b620$var$toggleControlQuantityBlock","increaseQuantityBtn","decreaseQuantityBtn","$2b9cdbee9e58b620$var$handleServiceQuantityChange","$2b9cdbee9e58b620$var$attachQuantityButtonListeners","serviceItem","serviceName","textContent","servicePrice","serviceID","listItem","createElement","className","nameSpan","$2b9cdbee9e58b620$var$createSpan","textSpan","nameWrapper","quantityWrapper","quantitySpan","$2b9cdbee9e58b620$var$interfaceServiceInfoObj","$2b9cdbee9e58b620$var$appendChildNodes","valueSpan","setAttribute","$2b9cdbee9e58b620$var$createServiceItem","item","serviceInTable","find","$2b9cdbee9e58b620$var$findServiceInTable","insertAdjacentElement","$2b9cdbee9e58b620$var$addToTotalCostTable","$2b9cdbee9e58b620$var$updateServiceQuantity","removeChild","$2b9cdbee9e58b620$var$removeFromTotalCostTable","$2b9cdbee9e58b620$var$updateTotalServicesTable","$2b9cdbee9e58b620$var$updateTotalCostForService","$2b9cdbee9e58b620$var$calculateTotalOrderCost","$2b9cdbee9e58b620$var$toggleServiceItem","windowsStandard","windowsLarge","microWave","refrigerator","plate","officeChair","sofaDry2x","sofaDry3x","sofaDry4x","$2b9cdbee9e58b620$export$a06a87f819f43860","$2b9cdbee9e58b620$var$changeOrderItemQuantity","$2b9cdbee9e58b620$var$getChosenServiceName","operationType","$2b9cdbee9e58b620$var$getClickedBtnType","itemName","operation","$2b9cdbee9e58b620$var$updateQuantityData","itemQntEl","squareEl","$2b9cdbee9e58b620$var$updateServiceItemInterface","ref5","decreaseSquareIcon","parentNode","style","fill","$2b9cdbee9e58b620$var$updateMinusBtnStyle","totalSquareCostEl","$2b9cdbee9e58b620$var$updateSquareTotalCost","orderServiceTotalCost","orderServiceTotalQuantity","updatedQuantity","$2b9cdbee9e58b620$export$919952d50304dbf4","toFixed","$2b9cdbee9e58b620$export$5b619c364b849367","reduce","undefined","totalOrderCost","acc","property","span","parent","children","child","appendChild","ref3","ref4","chosenServiceName","addressType","$2b9cdbee9e58b620$var$toggleAddressItem","isAddressTakeBlockHidden","isAddressGiveBlockHidden","$2b9cdbee9e58b620$var$toggleKeysAddressBlock"],"version":3,"file":"faq.24fa8bf8.js.map"}