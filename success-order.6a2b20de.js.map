{"mappings":"oeAAAA,EAAA,S,sBCAA,MAAMC,EAAiBC,SAASC,cAAc,sBAiB9CC,OAAOC,iBAAiB,UAfxB,WACMD,OAAOE,SAAW,GACpBL,EAAeM,MAAMC,QAAU,OAE/BP,EAAeM,MAAMC,QAAU,M,GAWuB,CAAEC,SAAS,IACrER,EAAeI,iBAAiB,SARhC,WACED,OAAOM,SAAS,CACdC,IAAK,EACLC,SAAU,U,ICbd,IAAAC,EAAAb,EAAA,S,aAEA,MAAMc,GAAmB,EAAAC,EAAAC,oBAAmB,oBACtCC,EAAgBf,SAASC,cAAc,iCACvCe,EAAYhB,SAASC,cAAc,6BACnCgB,EAAiBjB,SAASC,cAAc,qBACxCiB,EAAoBlB,SAASC,cACjC,uCAoBF,SAASkB,EAAyBC,GAChC,MAAMC,EAAOrB,SAASC,cACpB,6CAGAoB,EAAKC,YADHF,EAsBN,SAA4BG,GAC1B,MAAMC,WAAEA,EAAUC,aAAEA,GAAiBF,EAC/BG,EAAYC,GAChBC,WAAWD,EAAKE,QAAQ,KAAO,IAAIA,QAAQ,IAAK,MAE5CC,EAAaJ,EAAUF,EAAWG,MAClCI,EAAoBN,EAAaO,QACrC,CAACC,EAAKC,IAAYD,EAAMP,EAAUQ,EAAQP,OAC1C,GAGF,MAAO,GAAGG,EAAaC,K,CAhCFI,CAAmBvB,GAEnB,O,CASvB,SAASwB,EAAeC,EAAMC,EAAUX,GACtC,MAAMY,EAASvC,SAASwC,cAAc,MAMtC,OALAD,EAAOE,UAAY,yCACiBJ,wEACyBC,oEACJX,aAElDY,C,CAiBT,SAASG,IACP,MAAMlB,WAAEA,EAAUC,aAAEA,GAAiBb,EAC/BQ,EAC2B,KAA/BI,EAAWc,SAASK,QAA4C,KAA3BnB,EAAWG,KAAKgB,OAEvD,GAAIvB,EAAgB,CAClB,MAAMmB,EAASH,EACb,YACAZ,EAAWc,SACXd,EAAWG,OAEb,EAAAhB,EAAAiC,eAAc1B,EAAmBqB,GASrC,SAA6Bd,GAC3BA,EAAaoB,SAAQ,EAACR,KAAEA,EAAIC,SAAEA,EAAQX,KAAEA,MACtC,MAAMmB,EAAaV,EAAeC,EAAMC,EAAUX,IAClD,EAAAhB,EAAAiC,eAAc1B,EAAmB4B,EAAW,G,CAX5CC,CAAoBtB,E,MAEpBuB,EAAUjC,IAiBd,SAAgCK,GAC1BA,EACFH,EAAegC,UAAUC,IAAI,kBAE7BjC,EAAegC,UAAUE,OAAO,iB,CAnBlCC,CAAuBhC,GACvBD,EAAyBC,E,CAU3B,SAAS4B,EAAUK,GACjBA,EAAMhD,MAAMC,QAAU,M,CAtFFN,SAASC,cAAc,qBAC/BE,iBAAiB,SAAS,KACtC,EAAAU,EAAAyC,mBAAkB,sBAgGd1C,GA5FJ2C,OAAOC,QAAQ5C,GAAkBiC,SAAQ,EAAEY,EAAKC,MAC9C,MAAMC,EAAU3D,SAASC,cACvB,qCAAqCwD,OAGnCE,IACFA,EAAQrC,YAAcoC,EAgB5B,SAA0BE,EAAKF,GACzBE,IACFA,EAAIvD,MAAMC,QAAUoD,EAAQ,GAAK,O,CAjB/BG,CAAiBF,EAAQG,cAAeJ,G,IAuF1ChB,MAEAM,EAAUhC,GACVgC,EAAUjC,I","sources":["src/scripts/entry-scripts/main-success-order.js","src/scripts/modules/scroll-to-top.js","src/scripts/modules/success-order-table.js"],"sourcesContent":["import '../modules/common.js';\nimport '../modules/aside-menu.js';\nimport '../modules/theme-toggler.js';\nimport '../modules/scroll-to-top.js';\nimport '../modules/success-order-table.js';\nimport '../modules/modal.js';\nimport '../modules/location-modal.js';\n","const scrollToTopBtn = document.querySelector('.scroll-to-top-btn');\n\nfunction toggleButtonVisibility() {\n  if (window.scrollY >= 50) {\n    scrollToTopBtn.style.display = 'flex';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n}\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nwindow.addEventListener('scroll', toggleButtonVisibility, { passive: true });\nscrollToTopBtn.addEventListener('click', scrollToTop);\n","import { appendElement } from './common';\nimport { getDataFromStorage, resetLocalStorage } from './local-storage';\nconst userOrderDataObj = getDataFromStorage('userOrderDataObj');\nconst tableServices = document.querySelector('.success-order-services-table');\nconst tableInfo = document.querySelector('.success-order-info-table');\nconst sectionSuccess = document.querySelector('.section--success');\nconst tableServicesBody = document.querySelector(\n  '.success-order-services-table tbody'\n);\nconst backToHomeBtn = document.querySelector('.back-to-home-btn');\nbackToHomeBtn.addEventListener('click', () =>\n  resetLocalStorage('userOrderDataObj')\n);\n\nfunction populateUserOrderTable() {\n  Object.entries(userOrderDataObj).forEach(([key, value]) => {\n    const element = document.querySelector(\n      `.success-order__value[data-field='${key}']`\n    );\n\n    if (element) {\n      element.textContent = value;\n      toggleRowDisplay(element.parentElement, value);\n    }\n  });\n}\n\nfunction setTotalOrderCostInTable(isComplexOrder) {\n  const cell = document.querySelector(\n    '.success-order--total[data-field=\"total\"]'\n  );\n  if (isComplexOrder) {\n    cell.textContent = calculateTotalCost(userOrderDataObj);\n  } else {\n    cell.textContent = '399zł';\n  }\n}\nfunction toggleRowDisplay(row, value) {\n  if (row) {\n    row.style.display = value ? '' : 'none';\n  }\n}\n\nfunction createTableRow(name, quantity, cost) {\n  const newRow = document.createElement('tr');\n  newRow.innerHTML = `\n    <th class=\"success-order__name\">${name}</th>\n    <td class=\"success-order__value success-order__quantity\">${quantity}</td>\n    <td class=\"success-order__value success-order__cost\">${cost}</td>\n  `;\n  return newRow;\n}\n\nfunction calculateTotalCost(obj) {\n  const { userSquare, userServices } = obj;\n  const parseCost = cost =>\n    parseFloat(cost.replace('zł', '').replace(',', '.'));\n\n  const squareCost = parseCost(userSquare.cost);\n  const totalServicesCost = userServices.reduce(\n    (acc, service) => acc + parseCost(service.cost),\n    0\n  );\n\n  return `${squareCost + totalServicesCost}zł`;\n}\n\nfunction populateUserServicesTable() {\n  const { userSquare, userServices } = userOrderDataObj;\n  const isComplexOrder =\n    userSquare.quantity.trim() !== '' || userSquare.cost.trim() !== '';\n\n  if (isComplexOrder) {\n    const newRow = createTableRow(\n      'Площа, м²',\n      userSquare.quantity,\n      userSquare.cost\n    );\n    appendElement(tableServicesBody, newRow);\n    populateServiceRows(userServices);\n  } else {\n    hideTable(tableServices);\n  }\n  setSectionSuccessStyle(isComplexOrder);\n  setTotalOrderCostInTable(isComplexOrder);\n}\n\nfunction populateServiceRows(userServices) {\n  userServices.forEach(({ name, quantity, cost }) => {\n    const serviceRow = createTableRow(name, quantity, cost);\n    appendElement(tableServicesBody, serviceRow);\n  });\n}\n\nfunction hideTable(table) {\n  table.style.display = 'none';\n}\n\nfunction setSectionSuccessStyle(isComplexOrder) {\n  if (isComplexOrder) {\n    sectionSuccess.classList.add('isComplexOrder');\n  } else {\n    sectionSuccess.classList.remove('isComplexOrder');\n  }\n}\n\nfunction showUserOrderResultData() {\n  if (userOrderDataObj) {\n    populateUserOrderTable();\n    populateUserServicesTable();\n  } else {\n    hideTable(tableInfo);\n    hideTable(tableServices);\n  }\n}\n\nshowUserOrderResultData();\n"],"names":["parcelRequire","$3f99c1fada539ced$var$scrollToTopBtn","document","querySelector","window","addEventListener","scrollY","style","display","passive","scrollTo","top","behavior","$3SKuk","$88927ba72ca9fc29$var$userOrderDataObj","$96sR9","getDataFromStorage","$88927ba72ca9fc29$var$tableServices","$88927ba72ca9fc29$var$tableInfo","$88927ba72ca9fc29$var$sectionSuccess","$88927ba72ca9fc29$var$tableServicesBody","$88927ba72ca9fc29$var$setTotalOrderCostInTable","isComplexOrder","cell","textContent","obj","userSquare","userServices","parseCost","cost","parseFloat","replace","squareCost","totalServicesCost","reduce","acc","service","$88927ba72ca9fc29$var$calculateTotalCost","$88927ba72ca9fc29$var$createTableRow","name","quantity","newRow","createElement","innerHTML","$88927ba72ca9fc29$var$populateUserServicesTable","trim","appendElement","forEach","serviceRow","$88927ba72ca9fc29$var$populateServiceRows","$88927ba72ca9fc29$var$hideTable","classList","add","remove","$88927ba72ca9fc29$var$setSectionSuccessStyle","table","resetLocalStorage","Object","entries","key","value","element","row","$88927ba72ca9fc29$var$toggleRowDisplay","parentElement"],"version":3,"file":"success-order.6a2b20de.js.map"}