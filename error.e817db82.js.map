{"mappings":"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","sources":["src/js/calendar.js"],"sourcesContent":["// const calendarBody = document.getElementById('calendarBody');\n// const monthYear = document.getElementById('monthYear');\n// const prevMonthBtn = document.getElementById('prevMonth');\n// const nextMonthBtn = document.getElementById('nextMonth');\n\n// let currentDate = new Date();\n\n// function generateCalendar() {\n//   const year = currentDate.getFullYear();\n//   const month = currentDate.getMonth();\n//   const today = new Date(); // Get the current date\n//   const firstDayOfMonth = new Date(year, month, 1);\n//   const lastDayOfMonth = new Date(year, month + 1, 0);\n\n//   monthYear.textContent = `${new Intl.DateTimeFormat('en-US', {\n//     month: 'long',\n//   }).format(currentDate)} ${year}`;\n\n//   // Clear previous month's data\n//   calendarBody.innerHTML = '';\n\n//   // Calculate the start day (0 for Sunday, 1 for Monday, etc.)\n//   let startDay = firstDayOfMonth.getDay();\n//   if (startDay === 0) {\n//     startDay = 7; // Make Sunday (0) the last day of the week\n//   }\n\n//   // Calculate the last day of the previous month\n//   const lastDayOfPrevMonth = new Date(year, month, 0).getDate();\n\n//   // Fill in the calendar\n//   let currentDay = 1;\n//   let currentRow = document.createElement('tr');\n\n//   // Fill the first row with days from the previous month\n//   for (let i = startDay - 1; i >= 1; i--) {\n//     const cell = document.createElement('td');\n//     const day = lastDayOfPrevMonth - i + 1;\n//     const formattedDay = day < 10 ? `0${day}` : day;\n//     cell.textContent = formattedDay;\n//     cell.classList.add('previous-month');\n//     cell.dataset.date = `${formattedDay}/${\n//       month < 9 ? '0' : ''\n//     }${month}/${year}`;\n//     currentRow.appendChild(cell);\n//     cell.addEventListener('click', handleCellClick);\n//   }\n\n//   // Fill the remaining cells with days from the current month\n//   while (currentDay <= lastDayOfMonth.getDate()) {\n//     const cell = document.createElement('td');\n//     const formattedDay = currentDay < 10 ? `0${currentDay}` : currentDay;\n//     cell.textContent = formattedDay;\n//     cell.classList.add('current-month');\n//     if (\n//       currentDate.getFullYear() === today.getFullYear() &&\n//       currentDate.getMonth() === today.getMonth() &&\n//       currentDay === today.getDate()\n//     ) {\n//       cell.classList.add('current-day');\n//     }\n//     cell.dataset.date = `${formattedDay}/${month < 9 ? '0' : ''}${\n//       month + 1\n//     }/${year}`;\n//     currentRow.appendChild(cell);\n//     cell.addEventListener('click', handleCellClick);\n//     if (currentRow.children.length === 7) {\n//       calendarBody.appendChild(currentRow);\n//       currentRow = document.createElement('tr');\n//     }\n//     currentDay++;\n//   }\n\n//   // Fill the last row with days from the next month\n//   for (let i = 1; currentRow.children.length < 7; i++) {\n//     const cell = document.createElement('td');\n//     const formattedDay = i < 10 ? `0${i}` : i;\n//     cell.textContent = formattedDay;\n//     cell.classList.add('next-month');\n//     cell.dataset.date = `${formattedDay}/${month < 9 ? '0' : ''}${\n//       month + 2\n//     }/${year}`;\n//     currentRow.appendChild(cell);\n//     cell.addEventListener('click', handleCellClick);\n//   }\n\n//   calendarBody.appendChild(currentRow);\n// }\n\n// function handleCellClick(event) {\n//   const clickedDate = event.target.dataset.date;\n//   console.log(clickedDate);\n// }\n\n// prevMonthBtn.addEventListener('click', () => {\n//   currentDate.setMonth(currentDate.getMonth() - 1);\n//   generateCalendar();\n// });\n\n// nextMonthBtn.addEventListener('click', () => {\n//   currentDate.setMonth(currentDate.getMonth() + 1);\n//   generateCalendar();\n// });\n\n// // Initial calendar generation\n// generateCalendar();\n\nconst calendarBody = document.getElementById('calendarBody');\nconst monthYear = document.getElementById('monthYear');\nconst prevMonthBtn = document.getElementById('prevMonth');\nconst nextMonthBtn = document.getElementById('nextMonth');\n\nlet currentDate = new Date();\n\nfunction generateCalendar() {\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n  const today = new Date(); // Get the current date\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonth = new Date(year, month + 1, 0);\n\n  monthYear.textContent = `${new Intl.DateTimeFormat('en-US', {\n    month: 'long',\n  }).format(currentDate)} ${year}`;\n\n  // Clear previous month's data\n  calendarBody.innerHTML = '';\n\n  // Calculate the start day (0 for Sunday, 1 for Monday, etc.)\n  let startDay = firstDayOfMonth.getDay();\n  if (startDay === 0) {\n    startDay = 7; // Make Sunday (0) the last day of the week\n  }\n\n  // Calculate the last day of the previous month\n  const lastDayOfPrevMonth = new Date(year, month, 0).getDate();\n\n  // Fill in the calendar\n  let currentDay = 1;\n  let currentRow = document.createElement('tr');\n\n  // Fill the first row with days from the previous month\n  for (let i = startDay - 1; i >= 1; i--) {\n    const cell = document.createElement('td');\n    const day = lastDayOfPrevMonth - i + 1;\n    const formattedDay = day < 10 ? `0${day}` : day;\n    const formattedMonth = month === 0 ? 12 : month; // Handle January\n    const formattedYear = month === 0 ? year - 1 : year; // Handle January\n    cell.textContent = formattedDay;\n    cell.classList.add('previous-month');\n    cell.dataset.date = `${formattedDay}/${\n      formattedMonth < 10 ? '0' : ''\n    }${formattedMonth}/${formattedYear}`;\n    currentRow.appendChild(cell);\n    cell.addEventListener('click', handleCellClick);\n  }\n\n  // Fill the remaining cells with days from the current month\n  while (currentDay <= lastDayOfMonth.getDate()) {\n    const cell = document.createElement('td');\n    const formattedDay = currentDay < 10 ? `0${currentDay}` : currentDay;\n    cell.textContent = formattedDay;\n    cell.classList.add('current-month');\n    if (\n      currentDate.getFullYear() === today.getFullYear() &&\n      currentDate.getMonth() === today.getMonth() &&\n      currentDay === today.getDate()\n    ) {\n      cell.classList.add('current-day');\n    }\n    cell.dataset.date = `${formattedDay}/${month < 9 ? '0' : ''}${\n      month + 1\n    }/${year}`;\n    currentRow.appendChild(cell);\n    cell.addEventListener('click', handleCellClick);\n    if (currentRow.children.length === 7) {\n      calendarBody.appendChild(currentRow);\n      currentRow = document.createElement('tr');\n    }\n    currentDay++;\n  }\n\n  // Fill the last row with days from the next month\n  for (let i = 1; currentRow.children.length < 7; i++) {\n    const cell = document.createElement('td');\n    const formattedDay = i < 10 ? `0${i}` : i;\n    const formattedMonth = month === 11 ? 1 : month + 2; // Handle December\n    const formattedYear = month === 11 ? year + 1 : year; // Handle December\n    cell.textContent = formattedDay;\n    cell.classList.add('next-month');\n    cell.dataset.date = `${formattedDay}/${\n      formattedMonth < 10 ? '0' : ''\n    }${formattedMonth}/${formattedYear}`;\n    currentRow.appendChild(cell);\n    cell.addEventListener('click', handleCellClick);\n  }\n\n  calendarBody.appendChild(currentRow);\n}\n\nfunction handleCellClick(event) {\n  const clickedDate = event.target.dataset.date;\n  console.log(clickedDate);\n}\n\nprevMonthBtn.addEventListener('click', () => {\n  currentDate.setMonth(currentDate.getMonth() - 1);\n  generateCalendar();\n});\n\nnextMonthBtn.addEventListener('click', () => {\n  currentDate.setMonth(currentDate.getMonth() + 1);\n  generateCalendar();\n});\n\n// Initial calendar generation\ngenerateCalendar();\n"],"names":["$e68ac68539faebb3$var$calendarBody","document","getElementById","$e68ac68539faebb3$var$monthYear","$e68ac68539faebb3$var$prevMonthBtn","$e68ac68539faebb3$var$nextMonthBtn","$e68ac68539faebb3$var$currentDate","Date","$e68ac68539faebb3$var$generateCalendar","year","getFullYear","month","getMonth","today","firstDayOfMonth","lastDayOfMonth","textContent","concat","Intl","DateTimeFormat","format","innerHTML","startDay","getDay","lastDayOfPrevMonth","getDate","currentDay","currentRow","createElement","i","cell","day","formattedDay","formattedMonth","formattedYear","classList","add","dataset","date","appendChild","addEventListener","$e68ac68539faebb3$var$handleCellClick","cell1","formattedDay1","children","length","i1","cell2","formattedDay2","formattedMonth1","formattedYear1","event","clickedDate","target","console","log","setMonth"],"version":3,"file":"error.e817db82.js.map"}